
Builds/stm32_app.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00003f1c  080001a0  080001a0  000011a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000003a4  080040c0  080040c0  000050c0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08004464  08004464  000061c8  2**0
                  CONTENTS, READONLY
  4 .ARM          00000008  08004464  08004464  00005464  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  0800446c  0800446c  000061c8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800446c  0800446c  0000546c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08004470  08004470  00005470  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         000001c8  20000000  08004474  00006000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000018c  200001c8  0800463c  000061c8  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20000354  0800463c  00006354  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000061c8  2**0
                  CONTENTS, READONLY
 12 .debug_frame  0000198c  00000000  00000000  000061f8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_line_str 000001b4  00000000  00000000  00007b84  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_info   000015fe  00000000  00000000  00007d38  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_abbrev 000006ed  00000000  00000000  00009336  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_aranges 000001f0  00000000  00000000  00009a23  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_rnglists 0000015d  00000000  00000000  00009c13  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_macro  00001fa1  00000000  00000000  00009d70  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line   0000181a  00000000  00000000  0000bd11  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_str    000560a5  00000000  00000000  0000d52b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .comment      00000045  00000000  00000000  000635d0  2**0
                  CONTENTS, READONLY

Disassembly of section .text:

080001a0 <memchr>:
 80001a0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 80001a4:	2a10      	cmp	r2, #16
 80001a6:	db2b      	blt.n	8000200 <memchr+0x60>
 80001a8:	f010 0f07 	tst.w	r0, #7
 80001ac:	d008      	beq.n	80001c0 <memchr+0x20>
 80001ae:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001b2:	3a01      	subs	r2, #1
 80001b4:	428b      	cmp	r3, r1
 80001b6:	d02d      	beq.n	8000214 <memchr+0x74>
 80001b8:	f010 0f07 	tst.w	r0, #7
 80001bc:	b342      	cbz	r2, 8000210 <memchr+0x70>
 80001be:	d1f6      	bne.n	80001ae <memchr+0xe>
 80001c0:	b4f0      	push	{r4, r5, r6, r7}
 80001c2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 80001c6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 80001ca:	f022 0407 	bic.w	r4, r2, #7
 80001ce:	f07f 0700 	mvns.w	r7, #0
 80001d2:	2300      	movs	r3, #0
 80001d4:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 80001d8:	3c08      	subs	r4, #8
 80001da:	ea85 0501 	eor.w	r5, r5, r1
 80001de:	ea86 0601 	eor.w	r6, r6, r1
 80001e2:	fa85 f547 	uadd8	r5, r5, r7
 80001e6:	faa3 f587 	sel	r5, r3, r7
 80001ea:	fa86 f647 	uadd8	r6, r6, r7
 80001ee:	faa5 f687 	sel	r6, r5, r7
 80001f2:	b98e      	cbnz	r6, 8000218 <memchr+0x78>
 80001f4:	d1ee      	bne.n	80001d4 <memchr+0x34>
 80001f6:	bcf0      	pop	{r4, r5, r6, r7}
 80001f8:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 80001fc:	f002 0207 	and.w	r2, r2, #7
 8000200:	b132      	cbz	r2, 8000210 <memchr+0x70>
 8000202:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000206:	3a01      	subs	r2, #1
 8000208:	ea83 0301 	eor.w	r3, r3, r1
 800020c:	b113      	cbz	r3, 8000214 <memchr+0x74>
 800020e:	d1f8      	bne.n	8000202 <memchr+0x62>
 8000210:	2000      	movs	r0, #0
 8000212:	4770      	bx	lr
 8000214:	3801      	subs	r0, #1
 8000216:	4770      	bx	lr
 8000218:	2d00      	cmp	r5, #0
 800021a:	bf06      	itte	eq
 800021c:	4635      	moveq	r5, r6
 800021e:	3803      	subeq	r0, #3
 8000220:	3807      	subne	r0, #7
 8000222:	f015 0f01 	tst.w	r5, #1
 8000226:	d107      	bne.n	8000238 <memchr+0x98>
 8000228:	3001      	adds	r0, #1
 800022a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800022e:	bf02      	ittt	eq
 8000230:	3001      	addeq	r0, #1
 8000232:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000236:	3001      	addeq	r0, #1
 8000238:	bcf0      	pop	{r4, r5, r6, r7}
 800023a:	3801      	subs	r0, #1
 800023c:	4770      	bx	lr
 800023e:	bf00      	nop

08000240 <strlen>:
 8000240:	4603      	mov	r3, r0
 8000242:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000246:	2a00      	cmp	r2, #0
 8000248:	d1fb      	bne.n	8000242 <strlen+0x2>
 800024a:	1a18      	subs	r0, r3, r0
 800024c:	3801      	subs	r0, #1
 800024e:	4770      	bx	lr

08000250 <__aeabi_drsub>:
 8000250:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 8000254:	e002      	b.n	800025c <__adddf3>
 8000256:	bf00      	nop

08000258 <__aeabi_dsub>:
 8000258:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

0800025c <__adddf3>:
 800025c:	b530      	push	{r4, r5, lr}
 800025e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000262:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8000266:	ea94 0f05 	teq	r4, r5
 800026a:	bf08      	it	eq
 800026c:	ea90 0f02 	teqeq	r0, r2
 8000270:	bf1f      	itttt	ne
 8000272:	ea54 0c00 	orrsne.w	ip, r4, r0
 8000276:	ea55 0c02 	orrsne.w	ip, r5, r2
 800027a:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 800027e:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000282:	f000 80e2 	beq.w	800044a <__adddf3+0x1ee>
 8000286:	ea4f 5454 	mov.w	r4, r4, lsr #21
 800028a:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 800028e:	bfb8      	it	lt
 8000290:	426d      	neglt	r5, r5
 8000292:	dd0c      	ble.n	80002ae <__adddf3+0x52>
 8000294:	442c      	add	r4, r5
 8000296:	ea80 0202 	eor.w	r2, r0, r2
 800029a:	ea81 0303 	eor.w	r3, r1, r3
 800029e:	ea82 0000 	eor.w	r0, r2, r0
 80002a2:	ea83 0101 	eor.w	r1, r3, r1
 80002a6:	ea80 0202 	eor.w	r2, r0, r2
 80002aa:	ea81 0303 	eor.w	r3, r1, r3
 80002ae:	2d36      	cmp	r5, #54	@ 0x36
 80002b0:	bf88      	it	hi
 80002b2:	bd30      	pophi	{r4, r5, pc}
 80002b4:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 80002b8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80002bc:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 80002c0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80002c4:	d002      	beq.n	80002cc <__adddf3+0x70>
 80002c6:	4240      	negs	r0, r0
 80002c8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80002cc:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 80002d0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80002d4:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 80002d8:	d002      	beq.n	80002e0 <__adddf3+0x84>
 80002da:	4252      	negs	r2, r2
 80002dc:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 80002e0:	ea94 0f05 	teq	r4, r5
 80002e4:	f000 80a7 	beq.w	8000436 <__adddf3+0x1da>
 80002e8:	f1a4 0401 	sub.w	r4, r4, #1
 80002ec:	f1d5 0e20 	rsbs	lr, r5, #32
 80002f0:	db0d      	blt.n	800030e <__adddf3+0xb2>
 80002f2:	fa02 fc0e 	lsl.w	ip, r2, lr
 80002f6:	fa22 f205 	lsr.w	r2, r2, r5
 80002fa:	1880      	adds	r0, r0, r2
 80002fc:	f141 0100 	adc.w	r1, r1, #0
 8000300:	fa03 f20e 	lsl.w	r2, r3, lr
 8000304:	1880      	adds	r0, r0, r2
 8000306:	fa43 f305 	asr.w	r3, r3, r5
 800030a:	4159      	adcs	r1, r3
 800030c:	e00e      	b.n	800032c <__adddf3+0xd0>
 800030e:	f1a5 0520 	sub.w	r5, r5, #32
 8000312:	f10e 0e20 	add.w	lr, lr, #32
 8000316:	2a01      	cmp	r2, #1
 8000318:	fa03 fc0e 	lsl.w	ip, r3, lr
 800031c:	bf28      	it	cs
 800031e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000322:	fa43 f305 	asr.w	r3, r3, r5
 8000326:	18c0      	adds	r0, r0, r3
 8000328:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800032c:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000330:	d507      	bpl.n	8000342 <__adddf3+0xe6>
 8000332:	f04f 0e00 	mov.w	lr, #0
 8000336:	f1dc 0c00 	rsbs	ip, ip, #0
 800033a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800033e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000342:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 8000346:	d31b      	bcc.n	8000380 <__adddf3+0x124>
 8000348:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 800034c:	d30c      	bcc.n	8000368 <__adddf3+0x10c>
 800034e:	0849      	lsrs	r1, r1, #1
 8000350:	ea5f 0030 	movs.w	r0, r0, rrx
 8000354:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000358:	f104 0401 	add.w	r4, r4, #1
 800035c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000360:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 8000364:	f080 809a 	bcs.w	800049c <__adddf3+0x240>
 8000368:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 800036c:	bf08      	it	eq
 800036e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000372:	f150 0000 	adcs.w	r0, r0, #0
 8000376:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800037a:	ea41 0105 	orr.w	r1, r1, r5
 800037e:	bd30      	pop	{r4, r5, pc}
 8000380:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 8000384:	4140      	adcs	r0, r0
 8000386:	eb41 0101 	adc.w	r1, r1, r1
 800038a:	3c01      	subs	r4, #1
 800038c:	bf28      	it	cs
 800038e:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 8000392:	d2e9      	bcs.n	8000368 <__adddf3+0x10c>
 8000394:	f091 0f00 	teq	r1, #0
 8000398:	bf04      	itt	eq
 800039a:	4601      	moveq	r1, r0
 800039c:	2000      	moveq	r0, #0
 800039e:	fab1 f381 	clz	r3, r1
 80003a2:	bf08      	it	eq
 80003a4:	3320      	addeq	r3, #32
 80003a6:	f1a3 030b 	sub.w	r3, r3, #11
 80003aa:	f1b3 0220 	subs.w	r2, r3, #32
 80003ae:	da0c      	bge.n	80003ca <__adddf3+0x16e>
 80003b0:	320c      	adds	r2, #12
 80003b2:	dd08      	ble.n	80003c6 <__adddf3+0x16a>
 80003b4:	f102 0c14 	add.w	ip, r2, #20
 80003b8:	f1c2 020c 	rsb	r2, r2, #12
 80003bc:	fa01 f00c 	lsl.w	r0, r1, ip
 80003c0:	fa21 f102 	lsr.w	r1, r1, r2
 80003c4:	e00c      	b.n	80003e0 <__adddf3+0x184>
 80003c6:	f102 0214 	add.w	r2, r2, #20
 80003ca:	bfd8      	it	le
 80003cc:	f1c2 0c20 	rsble	ip, r2, #32
 80003d0:	fa01 f102 	lsl.w	r1, r1, r2
 80003d4:	fa20 fc0c 	lsr.w	ip, r0, ip
 80003d8:	bfdc      	itt	le
 80003da:	ea41 010c 	orrle.w	r1, r1, ip
 80003de:	4090      	lslle	r0, r2
 80003e0:	1ae4      	subs	r4, r4, r3
 80003e2:	bfa2      	ittt	ge
 80003e4:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 80003e8:	4329      	orrge	r1, r5
 80003ea:	bd30      	popge	{r4, r5, pc}
 80003ec:	ea6f 0404 	mvn.w	r4, r4
 80003f0:	3c1f      	subs	r4, #31
 80003f2:	da1c      	bge.n	800042e <__adddf3+0x1d2>
 80003f4:	340c      	adds	r4, #12
 80003f6:	dc0e      	bgt.n	8000416 <__adddf3+0x1ba>
 80003f8:	f104 0414 	add.w	r4, r4, #20
 80003fc:	f1c4 0220 	rsb	r2, r4, #32
 8000400:	fa20 f004 	lsr.w	r0, r0, r4
 8000404:	fa01 f302 	lsl.w	r3, r1, r2
 8000408:	ea40 0003 	orr.w	r0, r0, r3
 800040c:	fa21 f304 	lsr.w	r3, r1, r4
 8000410:	ea45 0103 	orr.w	r1, r5, r3
 8000414:	bd30      	pop	{r4, r5, pc}
 8000416:	f1c4 040c 	rsb	r4, r4, #12
 800041a:	f1c4 0220 	rsb	r2, r4, #32
 800041e:	fa20 f002 	lsr.w	r0, r0, r2
 8000422:	fa01 f304 	lsl.w	r3, r1, r4
 8000426:	ea40 0003 	orr.w	r0, r0, r3
 800042a:	4629      	mov	r1, r5
 800042c:	bd30      	pop	{r4, r5, pc}
 800042e:	fa21 f004 	lsr.w	r0, r1, r4
 8000432:	4629      	mov	r1, r5
 8000434:	bd30      	pop	{r4, r5, pc}
 8000436:	f094 0f00 	teq	r4, #0
 800043a:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 800043e:	bf06      	itte	eq
 8000440:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 8000444:	3401      	addeq	r4, #1
 8000446:	3d01      	subne	r5, #1
 8000448:	e74e      	b.n	80002e8 <__adddf3+0x8c>
 800044a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800044e:	bf18      	it	ne
 8000450:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000454:	d029      	beq.n	80004aa <__adddf3+0x24e>
 8000456:	ea94 0f05 	teq	r4, r5
 800045a:	bf08      	it	eq
 800045c:	ea90 0f02 	teqeq	r0, r2
 8000460:	d005      	beq.n	800046e <__adddf3+0x212>
 8000462:	ea54 0c00 	orrs.w	ip, r4, r0
 8000466:	bf04      	itt	eq
 8000468:	4619      	moveq	r1, r3
 800046a:	4610      	moveq	r0, r2
 800046c:	bd30      	pop	{r4, r5, pc}
 800046e:	ea91 0f03 	teq	r1, r3
 8000472:	bf1e      	ittt	ne
 8000474:	2100      	movne	r1, #0
 8000476:	2000      	movne	r0, #0
 8000478:	bd30      	popne	{r4, r5, pc}
 800047a:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 800047e:	d105      	bne.n	800048c <__adddf3+0x230>
 8000480:	0040      	lsls	r0, r0, #1
 8000482:	4149      	adcs	r1, r1
 8000484:	bf28      	it	cs
 8000486:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 800048a:	bd30      	pop	{r4, r5, pc}
 800048c:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 8000490:	bf3c      	itt	cc
 8000492:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 8000496:	bd30      	popcc	{r4, r5, pc}
 8000498:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 800049c:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 80004a0:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 80004a4:	f04f 0000 	mov.w	r0, #0
 80004a8:	bd30      	pop	{r4, r5, pc}
 80004aa:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004ae:	bf1a      	itte	ne
 80004b0:	4619      	movne	r1, r3
 80004b2:	4610      	movne	r0, r2
 80004b4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80004b8:	bf1c      	itt	ne
 80004ba:	460b      	movne	r3, r1
 80004bc:	4602      	movne	r2, r0
 80004be:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80004c2:	bf06      	itte	eq
 80004c4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80004c8:	ea91 0f03 	teqeq	r1, r3
 80004cc:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 80004d0:	bd30      	pop	{r4, r5, pc}
 80004d2:	bf00      	nop

080004d4 <__aeabi_ui2d>:
 80004d4:	f090 0f00 	teq	r0, #0
 80004d8:	bf04      	itt	eq
 80004da:	2100      	moveq	r1, #0
 80004dc:	4770      	bxeq	lr
 80004de:	b530      	push	{r4, r5, lr}
 80004e0:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80004e4:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 80004e8:	f04f 0500 	mov.w	r5, #0
 80004ec:	f04f 0100 	mov.w	r1, #0
 80004f0:	e750      	b.n	8000394 <__adddf3+0x138>
 80004f2:	bf00      	nop

080004f4 <__aeabi_i2d>:
 80004f4:	f090 0f00 	teq	r0, #0
 80004f8:	bf04      	itt	eq
 80004fa:	2100      	moveq	r1, #0
 80004fc:	4770      	bxeq	lr
 80004fe:	b530      	push	{r4, r5, lr}
 8000500:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000504:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000508:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 800050c:	bf48      	it	mi
 800050e:	4240      	negmi	r0, r0
 8000510:	f04f 0100 	mov.w	r1, #0
 8000514:	e73e      	b.n	8000394 <__adddf3+0x138>
 8000516:	bf00      	nop

08000518 <__aeabi_f2d>:
 8000518:	0042      	lsls	r2, r0, #1
 800051a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800051e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000522:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000526:	bf1f      	itttt	ne
 8000528:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 800052c:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 8000530:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 8000534:	4770      	bxne	lr
 8000536:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 800053a:	bf08      	it	eq
 800053c:	4770      	bxeq	lr
 800053e:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 8000542:	bf04      	itt	eq
 8000544:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 8000548:	4770      	bxeq	lr
 800054a:	b530      	push	{r4, r5, lr}
 800054c:	f44f 7460 	mov.w	r4, #896	@ 0x380
 8000550:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000554:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000558:	e71c      	b.n	8000394 <__adddf3+0x138>
 800055a:	bf00      	nop

0800055c <__aeabi_ul2d>:
 800055c:	ea50 0201 	orrs.w	r2, r0, r1
 8000560:	bf08      	it	eq
 8000562:	4770      	bxeq	lr
 8000564:	b530      	push	{r4, r5, lr}
 8000566:	f04f 0500 	mov.w	r5, #0
 800056a:	e00a      	b.n	8000582 <__aeabi_l2d+0x16>

0800056c <__aeabi_l2d>:
 800056c:	ea50 0201 	orrs.w	r2, r0, r1
 8000570:	bf08      	it	eq
 8000572:	4770      	bxeq	lr
 8000574:	b530      	push	{r4, r5, lr}
 8000576:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 800057a:	d502      	bpl.n	8000582 <__aeabi_l2d+0x16>
 800057c:	4240      	negs	r0, r0
 800057e:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000582:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000586:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 800058a:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 800058e:	f43f aed8 	beq.w	8000342 <__adddf3+0xe6>
 8000592:	f04f 0203 	mov.w	r2, #3
 8000596:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800059a:	bf18      	it	ne
 800059c:	3203      	addne	r2, #3
 800059e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005a2:	bf18      	it	ne
 80005a4:	3203      	addne	r2, #3
 80005a6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005aa:	f1c2 0320 	rsb	r3, r2, #32
 80005ae:	fa00 fc03 	lsl.w	ip, r0, r3
 80005b2:	fa20 f002 	lsr.w	r0, r0, r2
 80005b6:	fa01 fe03 	lsl.w	lr, r1, r3
 80005ba:	ea40 000e 	orr.w	r0, r0, lr
 80005be:	fa21 f102 	lsr.w	r1, r1, r2
 80005c2:	4414      	add	r4, r2
 80005c4:	e6bd      	b.n	8000342 <__adddf3+0xe6>
 80005c6:	bf00      	nop

080005c8 <__aeabi_dmul>:
 80005c8:	b570      	push	{r4, r5, r6, lr}
 80005ca:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 80005ce:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 80005d2:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80005d6:	bf1d      	ittte	ne
 80005d8:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80005dc:	ea94 0f0c 	teqne	r4, ip
 80005e0:	ea95 0f0c 	teqne	r5, ip
 80005e4:	f000 f8de 	bleq	80007a4 <__aeabi_dmul+0x1dc>
 80005e8:	442c      	add	r4, r5
 80005ea:	ea81 0603 	eor.w	r6, r1, r3
 80005ee:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 80005f2:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 80005f6:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 80005fa:	bf18      	it	ne
 80005fc:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000600:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000604:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8000608:	d038      	beq.n	800067c <__aeabi_dmul+0xb4>
 800060a:	fba0 ce02 	umull	ip, lr, r0, r2
 800060e:	f04f 0500 	mov.w	r5, #0
 8000612:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000616:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
 800061a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800061e:	f04f 0600 	mov.w	r6, #0
 8000622:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000626:	f09c 0f00 	teq	ip, #0
 800062a:	bf18      	it	ne
 800062c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000630:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
 8000634:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
 8000638:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
 800063c:	d204      	bcs.n	8000648 <__aeabi_dmul+0x80>
 800063e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000642:	416d      	adcs	r5, r5
 8000644:	eb46 0606 	adc.w	r6, r6, r6
 8000648:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800064c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000650:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000654:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000658:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800065c:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 8000660:	bf88      	it	hi
 8000662:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 8000666:	d81e      	bhi.n	80006a6 <__aeabi_dmul+0xde>
 8000668:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
 800066c:	bf08      	it	eq
 800066e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 8000672:	f150 0000 	adcs.w	r0, r0, #0
 8000676:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800067a:	bd70      	pop	{r4, r5, r6, pc}
 800067c:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
 8000680:	ea46 0101 	orr.w	r1, r6, r1
 8000684:	ea40 0002 	orr.w	r0, r0, r2
 8000688:	ea81 0103 	eor.w	r1, r1, r3
 800068c:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000690:	bfc2      	ittt	gt
 8000692:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000696:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 800069a:	bd70      	popgt	{r4, r5, r6, pc}
 800069c:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80006a0:	f04f 0e00 	mov.w	lr, #0
 80006a4:	3c01      	subs	r4, #1
 80006a6:	f300 80ab 	bgt.w	8000800 <__aeabi_dmul+0x238>
 80006aa:	f114 0f36 	cmn.w	r4, #54	@ 0x36
 80006ae:	bfde      	ittt	le
 80006b0:	2000      	movle	r0, #0
 80006b2:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
 80006b6:	bd70      	pople	{r4, r5, r6, pc}
 80006b8:	f1c4 0400 	rsb	r4, r4, #0
 80006bc:	3c20      	subs	r4, #32
 80006be:	da35      	bge.n	800072c <__aeabi_dmul+0x164>
 80006c0:	340c      	adds	r4, #12
 80006c2:	dc1b      	bgt.n	80006fc <__aeabi_dmul+0x134>
 80006c4:	f104 0414 	add.w	r4, r4, #20
 80006c8:	f1c4 0520 	rsb	r5, r4, #32
 80006cc:	fa00 f305 	lsl.w	r3, r0, r5
 80006d0:	fa20 f004 	lsr.w	r0, r0, r4
 80006d4:	fa01 f205 	lsl.w	r2, r1, r5
 80006d8:	ea40 0002 	orr.w	r0, r0, r2
 80006dc:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
 80006e0:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 80006e4:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80006e8:	fa21 f604 	lsr.w	r6, r1, r4
 80006ec:	eb42 0106 	adc.w	r1, r2, r6
 80006f0:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80006f4:	bf08      	it	eq
 80006f6:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80006fa:	bd70      	pop	{r4, r5, r6, pc}
 80006fc:	f1c4 040c 	rsb	r4, r4, #12
 8000700:	f1c4 0520 	rsb	r5, r4, #32
 8000704:	fa00 f304 	lsl.w	r3, r0, r4
 8000708:	fa20 f005 	lsr.w	r0, r0, r5
 800070c:	fa01 f204 	lsl.w	r2, r1, r4
 8000710:	ea40 0002 	orr.w	r0, r0, r2
 8000714:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000718:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800071c:	f141 0100 	adc.w	r1, r1, #0
 8000720:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000724:	bf08      	it	eq
 8000726:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800072a:	bd70      	pop	{r4, r5, r6, pc}
 800072c:	f1c4 0520 	rsb	r5, r4, #32
 8000730:	fa00 f205 	lsl.w	r2, r0, r5
 8000734:	ea4e 0e02 	orr.w	lr, lr, r2
 8000738:	fa20 f304 	lsr.w	r3, r0, r4
 800073c:	fa01 f205 	lsl.w	r2, r1, r5
 8000740:	ea43 0302 	orr.w	r3, r3, r2
 8000744:	fa21 f004 	lsr.w	r0, r1, r4
 8000748:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 800074c:	fa21 f204 	lsr.w	r2, r1, r4
 8000750:	ea20 0002 	bic.w	r0, r0, r2
 8000754:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000758:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800075c:	bf08      	it	eq
 800075e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000762:	bd70      	pop	{r4, r5, r6, pc}
 8000764:	f094 0f00 	teq	r4, #0
 8000768:	d10f      	bne.n	800078a <__aeabi_dmul+0x1c2>
 800076a:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
 800076e:	0040      	lsls	r0, r0, #1
 8000770:	eb41 0101 	adc.w	r1, r1, r1
 8000774:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000778:	bf08      	it	eq
 800077a:	3c01      	subeq	r4, #1
 800077c:	d0f7      	beq.n	800076e <__aeabi_dmul+0x1a6>
 800077e:	ea41 0106 	orr.w	r1, r1, r6
 8000782:	f095 0f00 	teq	r5, #0
 8000786:	bf18      	it	ne
 8000788:	4770      	bxne	lr
 800078a:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
 800078e:	0052      	lsls	r2, r2, #1
 8000790:	eb43 0303 	adc.w	r3, r3, r3
 8000794:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
 8000798:	bf08      	it	eq
 800079a:	3d01      	subeq	r5, #1
 800079c:	d0f7      	beq.n	800078e <__aeabi_dmul+0x1c6>
 800079e:	ea43 0306 	orr.w	r3, r3, r6
 80007a2:	4770      	bx	lr
 80007a4:	ea94 0f0c 	teq	r4, ip
 80007a8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80007ac:	bf18      	it	ne
 80007ae:	ea95 0f0c 	teqne	r5, ip
 80007b2:	d00c      	beq.n	80007ce <__aeabi_dmul+0x206>
 80007b4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007b8:	bf18      	it	ne
 80007ba:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007be:	d1d1      	bne.n	8000764 <__aeabi_dmul+0x19c>
 80007c0:	ea81 0103 	eor.w	r1, r1, r3
 80007c4:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 80007c8:	f04f 0000 	mov.w	r0, #0
 80007cc:	bd70      	pop	{r4, r5, r6, pc}
 80007ce:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007d2:	bf06      	itte	eq
 80007d4:	4610      	moveq	r0, r2
 80007d6:	4619      	moveq	r1, r3
 80007d8:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007dc:	d019      	beq.n	8000812 <__aeabi_dmul+0x24a>
 80007de:	ea94 0f0c 	teq	r4, ip
 80007e2:	d102      	bne.n	80007ea <__aeabi_dmul+0x222>
 80007e4:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 80007e8:	d113      	bne.n	8000812 <__aeabi_dmul+0x24a>
 80007ea:	ea95 0f0c 	teq	r5, ip
 80007ee:	d105      	bne.n	80007fc <__aeabi_dmul+0x234>
 80007f0:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 80007f4:	bf1c      	itt	ne
 80007f6:	4610      	movne	r0, r2
 80007f8:	4619      	movne	r1, r3
 80007fa:	d10a      	bne.n	8000812 <__aeabi_dmul+0x24a>
 80007fc:	ea81 0103 	eor.w	r1, r1, r3
 8000800:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000804:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000808:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800080c:	f04f 0000 	mov.w	r0, #0
 8000810:	bd70      	pop	{r4, r5, r6, pc}
 8000812:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000816:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
 800081a:	bd70      	pop	{r4, r5, r6, pc}

0800081c <__aeabi_ddiv>:
 800081c:	b570      	push	{r4, r5, r6, lr}
 800081e:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000822:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000826:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800082a:	bf1d      	ittte	ne
 800082c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000830:	ea94 0f0c 	teqne	r4, ip
 8000834:	ea95 0f0c 	teqne	r5, ip
 8000838:	f000 f8a7 	bleq	800098a <__aeabi_ddiv+0x16e>
 800083c:	eba4 0405 	sub.w	r4, r4, r5
 8000840:	ea81 0e03 	eor.w	lr, r1, r3
 8000844:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000848:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800084c:	f000 8088 	beq.w	8000960 <__aeabi_ddiv+0x144>
 8000850:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000854:	f04f 5580 	mov.w	r5, #268435456	@ 0x10000000
 8000858:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800085c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000860:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8000864:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000868:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 800086c:	ea4f 2600 	mov.w	r6, r0, lsl #8
 8000870:	f00e 4100 	and.w	r1, lr, #2147483648	@ 0x80000000
 8000874:	429d      	cmp	r5, r3
 8000876:	bf08      	it	eq
 8000878:	4296      	cmpeq	r6, r2
 800087a:	f144 04fd 	adc.w	r4, r4, #253	@ 0xfd
 800087e:	f504 7440 	add.w	r4, r4, #768	@ 0x300
 8000882:	d202      	bcs.n	800088a <__aeabi_ddiv+0x6e>
 8000884:	085b      	lsrs	r3, r3, #1
 8000886:	ea4f 0232 	mov.w	r2, r2, rrx
 800088a:	1ab6      	subs	r6, r6, r2
 800088c:	eb65 0503 	sbc.w	r5, r5, r3
 8000890:	085b      	lsrs	r3, r3, #1
 8000892:	ea4f 0232 	mov.w	r2, r2, rrx
 8000896:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
 800089a:	f44f 2c00 	mov.w	ip, #524288	@ 0x80000
 800089e:	ebb6 0e02 	subs.w	lr, r6, r2
 80008a2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008a6:	bf22      	ittt	cs
 80008a8:	1ab6      	subcs	r6, r6, r2
 80008aa:	4675      	movcs	r5, lr
 80008ac:	ea40 000c 	orrcs.w	r0, r0, ip
 80008b0:	085b      	lsrs	r3, r3, #1
 80008b2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008b6:	ebb6 0e02 	subs.w	lr, r6, r2
 80008ba:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008be:	bf22      	ittt	cs
 80008c0:	1ab6      	subcs	r6, r6, r2
 80008c2:	4675      	movcs	r5, lr
 80008c4:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80008c8:	085b      	lsrs	r3, r3, #1
 80008ca:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ce:	ebb6 0e02 	subs.w	lr, r6, r2
 80008d2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008d6:	bf22      	ittt	cs
 80008d8:	1ab6      	subcs	r6, r6, r2
 80008da:	4675      	movcs	r5, lr
 80008dc:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 80008e0:	085b      	lsrs	r3, r3, #1
 80008e2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008e6:	ebb6 0e02 	subs.w	lr, r6, r2
 80008ea:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008ee:	bf22      	ittt	cs
 80008f0:	1ab6      	subcs	r6, r6, r2
 80008f2:	4675      	movcs	r5, lr
 80008f4:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 80008f8:	ea55 0e06 	orrs.w	lr, r5, r6
 80008fc:	d018      	beq.n	8000930 <__aeabi_ddiv+0x114>
 80008fe:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000902:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000906:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800090a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800090e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000912:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000916:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800091a:	d1c0      	bne.n	800089e <__aeabi_ddiv+0x82>
 800091c:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000920:	d10b      	bne.n	800093a <__aeabi_ddiv+0x11e>
 8000922:	ea41 0100 	orr.w	r1, r1, r0
 8000926:	f04f 0000 	mov.w	r0, #0
 800092a:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 800092e:	e7b6      	b.n	800089e <__aeabi_ddiv+0x82>
 8000930:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000934:	bf04      	itt	eq
 8000936:	4301      	orreq	r1, r0
 8000938:	2000      	moveq	r0, #0
 800093a:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 800093e:	bf88      	it	hi
 8000940:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 8000944:	f63f aeaf 	bhi.w	80006a6 <__aeabi_dmul+0xde>
 8000948:	ebb5 0c03 	subs.w	ip, r5, r3
 800094c:	bf04      	itt	eq
 800094e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000952:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000956:	f150 0000 	adcs.w	r0, r0, #0
 800095a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800095e:	bd70      	pop	{r4, r5, r6, pc}
 8000960:	f00e 4e00 	and.w	lr, lr, #2147483648	@ 0x80000000
 8000964:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000968:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 800096c:	bfc2      	ittt	gt
 800096e:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000972:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000976:	bd70      	popgt	{r4, r5, r6, pc}
 8000978:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 800097c:	f04f 0e00 	mov.w	lr, #0
 8000980:	3c01      	subs	r4, #1
 8000982:	e690      	b.n	80006a6 <__aeabi_dmul+0xde>
 8000984:	ea45 0e06 	orr.w	lr, r5, r6
 8000988:	e68d      	b.n	80006a6 <__aeabi_dmul+0xde>
 800098a:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 800098e:	ea94 0f0c 	teq	r4, ip
 8000992:	bf08      	it	eq
 8000994:	ea95 0f0c 	teqeq	r5, ip
 8000998:	f43f af3b 	beq.w	8000812 <__aeabi_dmul+0x24a>
 800099c:	ea94 0f0c 	teq	r4, ip
 80009a0:	d10a      	bne.n	80009b8 <__aeabi_ddiv+0x19c>
 80009a2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80009a6:	f47f af34 	bne.w	8000812 <__aeabi_dmul+0x24a>
 80009aa:	ea95 0f0c 	teq	r5, ip
 80009ae:	f47f af25 	bne.w	80007fc <__aeabi_dmul+0x234>
 80009b2:	4610      	mov	r0, r2
 80009b4:	4619      	mov	r1, r3
 80009b6:	e72c      	b.n	8000812 <__aeabi_dmul+0x24a>
 80009b8:	ea95 0f0c 	teq	r5, ip
 80009bc:	d106      	bne.n	80009cc <__aeabi_ddiv+0x1b0>
 80009be:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80009c2:	f43f aefd 	beq.w	80007c0 <__aeabi_dmul+0x1f8>
 80009c6:	4610      	mov	r0, r2
 80009c8:	4619      	mov	r1, r3
 80009ca:	e722      	b.n	8000812 <__aeabi_dmul+0x24a>
 80009cc:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80009d0:	bf18      	it	ne
 80009d2:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80009d6:	f47f aec5 	bne.w	8000764 <__aeabi_dmul+0x19c>
 80009da:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 80009de:	f47f af0d 	bne.w	80007fc <__aeabi_dmul+0x234>
 80009e2:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 80009e6:	f47f aeeb 	bne.w	80007c0 <__aeabi_dmul+0x1f8>
 80009ea:	e712      	b.n	8000812 <__aeabi_dmul+0x24a>

080009ec <__gedf2>:
 80009ec:	f04f 3cff 	mov.w	ip, #4294967295	@ 0xffffffff
 80009f0:	e006      	b.n	8000a00 <__cmpdf2+0x4>
 80009f2:	bf00      	nop

080009f4 <__ledf2>:
 80009f4:	f04f 0c01 	mov.w	ip, #1
 80009f8:	e002      	b.n	8000a00 <__cmpdf2+0x4>
 80009fa:	bf00      	nop

080009fc <__cmpdf2>:
 80009fc:	f04f 0c01 	mov.w	ip, #1
 8000a00:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a04:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a08:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a0c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a10:	bf18      	it	ne
 8000a12:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a16:	d01b      	beq.n	8000a50 <__cmpdf2+0x54>
 8000a18:	b001      	add	sp, #4
 8000a1a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a1e:	bf0c      	ite	eq
 8000a20:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a24:	ea91 0f03 	teqne	r1, r3
 8000a28:	bf02      	ittt	eq
 8000a2a:	ea90 0f02 	teqeq	r0, r2
 8000a2e:	2000      	moveq	r0, #0
 8000a30:	4770      	bxeq	lr
 8000a32:	f110 0f00 	cmn.w	r0, #0
 8000a36:	ea91 0f03 	teq	r1, r3
 8000a3a:	bf58      	it	pl
 8000a3c:	4299      	cmppl	r1, r3
 8000a3e:	bf08      	it	eq
 8000a40:	4290      	cmpeq	r0, r2
 8000a42:	bf2c      	ite	cs
 8000a44:	17d8      	asrcs	r0, r3, #31
 8000a46:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a4a:	f040 0001 	orr.w	r0, r0, #1
 8000a4e:	4770      	bx	lr
 8000a50:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a54:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a58:	d102      	bne.n	8000a60 <__cmpdf2+0x64>
 8000a5a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a5e:	d107      	bne.n	8000a70 <__cmpdf2+0x74>
 8000a60:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a64:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a68:	d1d6      	bne.n	8000a18 <__cmpdf2+0x1c>
 8000a6a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000a6e:	d0d3      	beq.n	8000a18 <__cmpdf2+0x1c>
 8000a70:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000a74:	4770      	bx	lr
 8000a76:	bf00      	nop

08000a78 <__aeabi_cdrcmple>:
 8000a78:	4684      	mov	ip, r0
 8000a7a:	4610      	mov	r0, r2
 8000a7c:	4662      	mov	r2, ip
 8000a7e:	468c      	mov	ip, r1
 8000a80:	4619      	mov	r1, r3
 8000a82:	4663      	mov	r3, ip
 8000a84:	e000      	b.n	8000a88 <__aeabi_cdcmpeq>
 8000a86:	bf00      	nop

08000a88 <__aeabi_cdcmpeq>:
 8000a88:	b501      	push	{r0, lr}
 8000a8a:	f7ff ffb7 	bl	80009fc <__cmpdf2>
 8000a8e:	2800      	cmp	r0, #0
 8000a90:	bf48      	it	mi
 8000a92:	f110 0f00 	cmnmi.w	r0, #0
 8000a96:	bd01      	pop	{r0, pc}

08000a98 <__aeabi_dcmpeq>:
 8000a98:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a9c:	f7ff fff4 	bl	8000a88 <__aeabi_cdcmpeq>
 8000aa0:	bf0c      	ite	eq
 8000aa2:	2001      	moveq	r0, #1
 8000aa4:	2000      	movne	r0, #0
 8000aa6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000aaa:	bf00      	nop

08000aac <__aeabi_dcmplt>:
 8000aac:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000ab0:	f7ff ffea 	bl	8000a88 <__aeabi_cdcmpeq>
 8000ab4:	bf34      	ite	cc
 8000ab6:	2001      	movcc	r0, #1
 8000ab8:	2000      	movcs	r0, #0
 8000aba:	f85d fb08 	ldr.w	pc, [sp], #8
 8000abe:	bf00      	nop

08000ac0 <__aeabi_dcmple>:
 8000ac0:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000ac4:	f7ff ffe0 	bl	8000a88 <__aeabi_cdcmpeq>
 8000ac8:	bf94      	ite	ls
 8000aca:	2001      	movls	r0, #1
 8000acc:	2000      	movhi	r0, #0
 8000ace:	f85d fb08 	ldr.w	pc, [sp], #8
 8000ad2:	bf00      	nop

08000ad4 <__aeabi_dcmpge>:
 8000ad4:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000ad8:	f7ff ffce 	bl	8000a78 <__aeabi_cdrcmple>
 8000adc:	bf94      	ite	ls
 8000ade:	2001      	movls	r0, #1
 8000ae0:	2000      	movhi	r0, #0
 8000ae2:	f85d fb08 	ldr.w	pc, [sp], #8
 8000ae6:	bf00      	nop

08000ae8 <__aeabi_dcmpgt>:
 8000ae8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000aec:	f7ff ffc4 	bl	8000a78 <__aeabi_cdrcmple>
 8000af0:	bf34      	ite	cc
 8000af2:	2001      	movcc	r0, #1
 8000af4:	2000      	movcs	r0, #0
 8000af6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000afa:	bf00      	nop

08000afc <__aeabi_dcmpun>:
 8000afc:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b00:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b04:	d102      	bne.n	8000b0c <__aeabi_dcmpun+0x10>
 8000b06:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b0a:	d10a      	bne.n	8000b22 <__aeabi_dcmpun+0x26>
 8000b0c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b10:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b14:	d102      	bne.n	8000b1c <__aeabi_dcmpun+0x20>
 8000b16:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b1a:	d102      	bne.n	8000b22 <__aeabi_dcmpun+0x26>
 8000b1c:	f04f 0000 	mov.w	r0, #0
 8000b20:	4770      	bx	lr
 8000b22:	f04f 0001 	mov.w	r0, #1
 8000b26:	4770      	bx	lr

08000b28 <__aeabi_d2iz>:
 8000b28:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b2c:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000b30:	d215      	bcs.n	8000b5e <__aeabi_d2iz+0x36>
 8000b32:	d511      	bpl.n	8000b58 <__aeabi_d2iz+0x30>
 8000b34:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000b38:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b3c:	d912      	bls.n	8000b64 <__aeabi_d2iz+0x3c>
 8000b3e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b42:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000b46:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b4a:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000b4e:	fa23 f002 	lsr.w	r0, r3, r2
 8000b52:	bf18      	it	ne
 8000b54:	4240      	negne	r0, r0
 8000b56:	4770      	bx	lr
 8000b58:	f04f 0000 	mov.w	r0, #0
 8000b5c:	4770      	bx	lr
 8000b5e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000b62:	d105      	bne.n	8000b70 <__aeabi_d2iz+0x48>
 8000b64:	f011 4000 	ands.w	r0, r1, #2147483648	@ 0x80000000
 8000b68:	bf08      	it	eq
 8000b6a:	f06f 4000 	mvneq.w	r0, #2147483648	@ 0x80000000
 8000b6e:	4770      	bx	lr
 8000b70:	f04f 0000 	mov.w	r0, #0
 8000b74:	4770      	bx	lr
 8000b76:	bf00      	nop

08000b78 <deregister_tm_clones>:
 8000b78:	4803      	ldr	r0, [pc, #12]	@ (8000b88 <deregister_tm_clones+0x10>)
 8000b7a:	4b04      	ldr	r3, [pc, #16]	@ (8000b8c <deregister_tm_clones+0x14>)
 8000b7c:	4283      	cmp	r3, r0
 8000b7e:	d002      	beq.n	8000b86 <deregister_tm_clones+0xe>
 8000b80:	4b03      	ldr	r3, [pc, #12]	@ (8000b90 <deregister_tm_clones+0x18>)
 8000b82:	b103      	cbz	r3, 8000b86 <deregister_tm_clones+0xe>
 8000b84:	4718      	bx	r3
 8000b86:	4770      	bx	lr
 8000b88:	200001c8 	.word	0x200001c8
 8000b8c:	200001c8 	.word	0x200001c8
 8000b90:	00000000 	.word	0x00000000

08000b94 <register_tm_clones>:
 8000b94:	4805      	ldr	r0, [pc, #20]	@ (8000bac <register_tm_clones+0x18>)
 8000b96:	4b06      	ldr	r3, [pc, #24]	@ (8000bb0 <register_tm_clones+0x1c>)
 8000b98:	1a1b      	subs	r3, r3, r0
 8000b9a:	0fd9      	lsrs	r1, r3, #31
 8000b9c:	eb01 01a3 	add.w	r1, r1, r3, asr #2
 8000ba0:	1049      	asrs	r1, r1, #1
 8000ba2:	d002      	beq.n	8000baa <register_tm_clones+0x16>
 8000ba4:	4b03      	ldr	r3, [pc, #12]	@ (8000bb4 <register_tm_clones+0x20>)
 8000ba6:	b103      	cbz	r3, 8000baa <register_tm_clones+0x16>
 8000ba8:	4718      	bx	r3
 8000baa:	4770      	bx	lr
 8000bac:	200001c8 	.word	0x200001c8
 8000bb0:	200001c8 	.word	0x200001c8
 8000bb4:	00000000 	.word	0x00000000

08000bb8 <__do_global_dtors_aux>:
 8000bb8:	b510      	push	{r4, lr}
 8000bba:	4c06      	ldr	r4, [pc, #24]	@ (8000bd4 <__do_global_dtors_aux+0x1c>)
 8000bbc:	7823      	ldrb	r3, [r4, #0]
 8000bbe:	b943      	cbnz	r3, 8000bd2 <__do_global_dtors_aux+0x1a>
 8000bc0:	f7ff ffda 	bl	8000b78 <deregister_tm_clones>
 8000bc4:	4b04      	ldr	r3, [pc, #16]	@ (8000bd8 <__do_global_dtors_aux+0x20>)
 8000bc6:	b113      	cbz	r3, 8000bce <__do_global_dtors_aux+0x16>
 8000bc8:	4804      	ldr	r0, [pc, #16]	@ (8000bdc <__do_global_dtors_aux+0x24>)
 8000bca:	f3af 8000 	nop.w
 8000bce:	2301      	movs	r3, #1
 8000bd0:	7023      	strb	r3, [r4, #0]
 8000bd2:	bd10      	pop	{r4, pc}
 8000bd4:	200001c8 	.word	0x200001c8
 8000bd8:	00000000 	.word	0x00000000
 8000bdc:	080040a4 	.word	0x080040a4

08000be0 <frame_dummy>:
 8000be0:	b508      	push	{r3, lr}
 8000be2:	4b05      	ldr	r3, [pc, #20]	@ (8000bf8 <frame_dummy+0x18>)
 8000be4:	b11b      	cbz	r3, 8000bee <frame_dummy+0xe>
 8000be6:	4905      	ldr	r1, [pc, #20]	@ (8000bfc <frame_dummy+0x1c>)
 8000be8:	4805      	ldr	r0, [pc, #20]	@ (8000c00 <frame_dummy+0x20>)
 8000bea:	f3af 8000 	nop.w
 8000bee:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8000bf2:	f7ff bfcf 	b.w	8000b94 <register_tm_clones>
 8000bf6:	bf00      	nop
 8000bf8:	00000000 	.word	0x00000000
 8000bfc:	200001cc 	.word	0x200001cc
 8000c00:	080040a4 	.word	0x080040a4

08000c04 <__cvt>:
 8000c04:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8000c08:	ec57 6b10 	vmov	r6, r7, d0
 8000c0c:	2f00      	cmp	r7, #0
 8000c0e:	460c      	mov	r4, r1
 8000c10:	4619      	mov	r1, r3
 8000c12:	463b      	mov	r3, r7
 8000c14:	bfbb      	ittet	lt
 8000c16:	f107 4300 	addlt.w	r3, r7, #2147483648	@ 0x80000000
 8000c1a:	461f      	movlt	r7, r3
 8000c1c:	2300      	movge	r3, #0
 8000c1e:	232d      	movlt	r3, #45	@ 0x2d
 8000c20:	700b      	strb	r3, [r1, #0]
 8000c22:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8000c24:	f8dd a030 	ldr.w	sl, [sp, #48]	@ 0x30
 8000c28:	4691      	mov	r9, r2
 8000c2a:	f023 0820 	bic.w	r8, r3, #32
 8000c2e:	bfbc      	itt	lt
 8000c30:	4632      	movlt	r2, r6
 8000c32:	4616      	movlt	r6, r2
 8000c34:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 8000c38:	d005      	beq.n	8000c46 <__cvt+0x42>
 8000c3a:	f1b8 0f45 	cmp.w	r8, #69	@ 0x45
 8000c3e:	d100      	bne.n	8000c42 <__cvt+0x3e>
 8000c40:	3401      	adds	r4, #1
 8000c42:	2102      	movs	r1, #2
 8000c44:	e000      	b.n	8000c48 <__cvt+0x44>
 8000c46:	2103      	movs	r1, #3
 8000c48:	ab03      	add	r3, sp, #12
 8000c4a:	9301      	str	r3, [sp, #4]
 8000c4c:	ab02      	add	r3, sp, #8
 8000c4e:	9300      	str	r3, [sp, #0]
 8000c50:	ec47 6b10 	vmov	d0, r6, r7
 8000c54:	4653      	mov	r3, sl
 8000c56:	4622      	mov	r2, r4
 8000c58:	f000 fe36 	bl	80018c8 <_dtoa_r>
 8000c5c:	f1b8 0f47 	cmp.w	r8, #71	@ 0x47
 8000c60:	4605      	mov	r5, r0
 8000c62:	d119      	bne.n	8000c98 <__cvt+0x94>
 8000c64:	f019 0f01 	tst.w	r9, #1
 8000c68:	d00e      	beq.n	8000c88 <__cvt+0x84>
 8000c6a:	eb00 0904 	add.w	r9, r0, r4
 8000c6e:	2200      	movs	r2, #0
 8000c70:	2300      	movs	r3, #0
 8000c72:	4630      	mov	r0, r6
 8000c74:	4639      	mov	r1, r7
 8000c76:	f7ff ff0f 	bl	8000a98 <__aeabi_dcmpeq>
 8000c7a:	b108      	cbz	r0, 8000c80 <__cvt+0x7c>
 8000c7c:	f8cd 900c 	str.w	r9, [sp, #12]
 8000c80:	2230      	movs	r2, #48	@ 0x30
 8000c82:	9b03      	ldr	r3, [sp, #12]
 8000c84:	454b      	cmp	r3, r9
 8000c86:	d31e      	bcc.n	8000cc6 <__cvt+0xc2>
 8000c88:	9b03      	ldr	r3, [sp, #12]
 8000c8a:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8000c8c:	1b5b      	subs	r3, r3, r5
 8000c8e:	4628      	mov	r0, r5
 8000c90:	6013      	str	r3, [r2, #0]
 8000c92:	b004      	add	sp, #16
 8000c94:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000c98:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 8000c9c:	eb00 0904 	add.w	r9, r0, r4
 8000ca0:	d1e5      	bne.n	8000c6e <__cvt+0x6a>
 8000ca2:	7803      	ldrb	r3, [r0, #0]
 8000ca4:	2b30      	cmp	r3, #48	@ 0x30
 8000ca6:	d10a      	bne.n	8000cbe <__cvt+0xba>
 8000ca8:	2200      	movs	r2, #0
 8000caa:	2300      	movs	r3, #0
 8000cac:	4630      	mov	r0, r6
 8000cae:	4639      	mov	r1, r7
 8000cb0:	f7ff fef2 	bl	8000a98 <__aeabi_dcmpeq>
 8000cb4:	b918      	cbnz	r0, 8000cbe <__cvt+0xba>
 8000cb6:	f1c4 0401 	rsb	r4, r4, #1
 8000cba:	f8ca 4000 	str.w	r4, [sl]
 8000cbe:	f8da 3000 	ldr.w	r3, [sl]
 8000cc2:	4499      	add	r9, r3
 8000cc4:	e7d3      	b.n	8000c6e <__cvt+0x6a>
 8000cc6:	1c59      	adds	r1, r3, #1
 8000cc8:	9103      	str	r1, [sp, #12]
 8000cca:	701a      	strb	r2, [r3, #0]
 8000ccc:	e7d9      	b.n	8000c82 <__cvt+0x7e>

08000cce <__exponent>:
 8000cce:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8000cd0:	2900      	cmp	r1, #0
 8000cd2:	bfba      	itte	lt
 8000cd4:	4249      	neglt	r1, r1
 8000cd6:	232d      	movlt	r3, #45	@ 0x2d
 8000cd8:	232b      	movge	r3, #43	@ 0x2b
 8000cda:	2909      	cmp	r1, #9
 8000cdc:	7002      	strb	r2, [r0, #0]
 8000cde:	7043      	strb	r3, [r0, #1]
 8000ce0:	dd29      	ble.n	8000d36 <__exponent+0x68>
 8000ce2:	f10d 0407 	add.w	r4, sp, #7
 8000ce6:	4625      	mov	r5, r4
 8000ce8:	270a      	movs	r7, #10
 8000cea:	4622      	mov	r2, r4
 8000cec:	fbb1 f6f7 	udiv	r6, r1, r7
 8000cf0:	fb07 1316 	mls	r3, r7, r6, r1
 8000cf4:	3330      	adds	r3, #48	@ 0x30
 8000cf6:	f802 3c01 	strb.w	r3, [r2, #-1]
 8000cfa:	460b      	mov	r3, r1
 8000cfc:	2b63      	cmp	r3, #99	@ 0x63
 8000cfe:	f104 34ff 	add.w	r4, r4, #4294967295	@ 0xffffffff
 8000d02:	4631      	mov	r1, r6
 8000d04:	dcf1      	bgt.n	8000cea <__exponent+0x1c>
 8000d06:	3130      	adds	r1, #48	@ 0x30
 8000d08:	1e93      	subs	r3, r2, #2
 8000d0a:	f804 1c01 	strb.w	r1, [r4, #-1]
 8000d0e:	1c41      	adds	r1, r0, #1
 8000d10:	461c      	mov	r4, r3
 8000d12:	42ab      	cmp	r3, r5
 8000d14:	d30a      	bcc.n	8000d2c <__exponent+0x5e>
 8000d16:	f10d 0309 	add.w	r3, sp, #9
 8000d1a:	1a9b      	subs	r3, r3, r2
 8000d1c:	42a5      	cmp	r5, r4
 8000d1e:	bf38      	it	cc
 8000d20:	2300      	movcc	r3, #0
 8000d22:	1c82      	adds	r2, r0, #2
 8000d24:	4413      	add	r3, r2
 8000d26:	1a18      	subs	r0, r3, r0
 8000d28:	b003      	add	sp, #12
 8000d2a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000d2c:	f813 6b01 	ldrb.w	r6, [r3], #1
 8000d30:	f801 6f01 	strb.w	r6, [r1, #1]!
 8000d34:	e7ed      	b.n	8000d12 <__exponent+0x44>
 8000d36:	2330      	movs	r3, #48	@ 0x30
 8000d38:	3130      	adds	r1, #48	@ 0x30
 8000d3a:	7083      	strb	r3, [r0, #2]
 8000d3c:	70c1      	strb	r1, [r0, #3]
 8000d3e:	1d03      	adds	r3, r0, #4
 8000d40:	e7f1      	b.n	8000d26 <__exponent+0x58>
	...

08000d44 <_printf_float>:
 8000d44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000d48:	b08d      	sub	sp, #52	@ 0x34
 8000d4a:	460c      	mov	r4, r1
 8000d4c:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 8000d50:	4616      	mov	r6, r2
 8000d52:	461f      	mov	r7, r3
 8000d54:	4605      	mov	r5, r0
 8000d56:	f000 fcbb 	bl	80016d0 <_localeconv_r>
 8000d5a:	6803      	ldr	r3, [r0, #0]
 8000d5c:	9306      	str	r3, [sp, #24]
 8000d5e:	4618      	mov	r0, r3
 8000d60:	f7ff fa6e 	bl	8000240 <strlen>
 8000d64:	2300      	movs	r3, #0
 8000d66:	930a      	str	r3, [sp, #40]	@ 0x28
 8000d68:	f8d8 3000 	ldr.w	r3, [r8]
 8000d6c:	f894 a018 	ldrb.w	sl, [r4, #24]
 8000d70:	f8d4 b000 	ldr.w	fp, [r4]
 8000d74:	9007      	str	r0, [sp, #28]
 8000d76:	3307      	adds	r3, #7
 8000d78:	f023 0307 	bic.w	r3, r3, #7
 8000d7c:	ecb3 7b02 	vldmia	r3!, {d7}
 8000d80:	ed8d 7b04 	vstr	d7, [sp, #16]
 8000d84:	f8c8 3000 	str.w	r3, [r8]
 8000d88:	e9dd 8304 	ldrd	r8, r3, [sp, #16]
 8000d8c:	f023 4900 	bic.w	r9, r3, #2147483648	@ 0x80000000
 8000d90:	ed84 7b12 	vstr	d7, [r4, #72]	@ 0x48
 8000d94:	4b9c      	ldr	r3, [pc, #624]	@ (8001008 <_printf_float+0x2c4>)
 8000d96:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 8000d9a:	4640      	mov	r0, r8
 8000d9c:	4649      	mov	r1, r9
 8000d9e:	f7ff fead 	bl	8000afc <__aeabi_dcmpun>
 8000da2:	bb70      	cbnz	r0, 8000e02 <_printf_float+0xbe>
 8000da4:	4b98      	ldr	r3, [pc, #608]	@ (8001008 <_printf_float+0x2c4>)
 8000da6:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 8000daa:	4640      	mov	r0, r8
 8000dac:	4649      	mov	r1, r9
 8000dae:	f7ff fe87 	bl	8000ac0 <__aeabi_dcmple>
 8000db2:	bb30      	cbnz	r0, 8000e02 <_printf_float+0xbe>
 8000db4:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8000db8:	2200      	movs	r2, #0
 8000dba:	2300      	movs	r3, #0
 8000dbc:	f7ff fe76 	bl	8000aac <__aeabi_dcmplt>
 8000dc0:	b110      	cbz	r0, 8000dc8 <_printf_float+0x84>
 8000dc2:	232d      	movs	r3, #45	@ 0x2d
 8000dc4:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8000dc8:	4a90      	ldr	r2, [pc, #576]	@ (800100c <_printf_float+0x2c8>)
 8000dca:	4b91      	ldr	r3, [pc, #580]	@ (8001010 <_printf_float+0x2cc>)
 8000dcc:	f1ba 0f47 	cmp.w	sl, #71	@ 0x47
 8000dd0:	bf8c      	ite	hi
 8000dd2:	4690      	movhi	r8, r2
 8000dd4:	4698      	movls	r8, r3
 8000dd6:	2303      	movs	r3, #3
 8000dd8:	6123      	str	r3, [r4, #16]
 8000dda:	f02b 0304 	bic.w	r3, fp, #4
 8000dde:	6023      	str	r3, [r4, #0]
 8000de0:	f04f 0900 	mov.w	r9, #0
 8000de4:	9700      	str	r7, [sp, #0]
 8000de6:	4633      	mov	r3, r6
 8000de8:	aa0b      	add	r2, sp, #44	@ 0x2c
 8000dea:	4621      	mov	r1, r4
 8000dec:	4628      	mov	r0, r5
 8000dee:	f000 f9d1 	bl	8001194 <_printf_common>
 8000df2:	3001      	adds	r0, #1
 8000df4:	f040 808c 	bne.w	8000f10 <_printf_float+0x1cc>
 8000df8:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8000dfc:	b00d      	add	sp, #52	@ 0x34
 8000dfe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000e02:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8000e06:	4610      	mov	r0, r2
 8000e08:	4619      	mov	r1, r3
 8000e0a:	f7ff fe77 	bl	8000afc <__aeabi_dcmpun>
 8000e0e:	b140      	cbz	r0, 8000e22 <_printf_float+0xde>
 8000e10:	9b05      	ldr	r3, [sp, #20]
 8000e12:	4a80      	ldr	r2, [pc, #512]	@ (8001014 <_printf_float+0x2d0>)
 8000e14:	2b00      	cmp	r3, #0
 8000e16:	bfbc      	itt	lt
 8000e18:	232d      	movlt	r3, #45	@ 0x2d
 8000e1a:	f884 3043 	strblt.w	r3, [r4, #67]	@ 0x43
 8000e1e:	4b7e      	ldr	r3, [pc, #504]	@ (8001018 <_printf_float+0x2d4>)
 8000e20:	e7d4      	b.n	8000dcc <_printf_float+0x88>
 8000e22:	6863      	ldr	r3, [r4, #4]
 8000e24:	1c5a      	adds	r2, r3, #1
 8000e26:	f00a 09df 	and.w	r9, sl, #223	@ 0xdf
 8000e2a:	d13b      	bne.n	8000ea4 <_printf_float+0x160>
 8000e2c:	2306      	movs	r3, #6
 8000e2e:	6063      	str	r3, [r4, #4]
 8000e30:	f44b 6280 	orr.w	r2, fp, #1024	@ 0x400
 8000e34:	2300      	movs	r3, #0
 8000e36:	6022      	str	r2, [r4, #0]
 8000e38:	9303      	str	r3, [sp, #12]
 8000e3a:	ab0a      	add	r3, sp, #40	@ 0x28
 8000e3c:	e9cd a301 	strd	sl, r3, [sp, #4]
 8000e40:	ab09      	add	r3, sp, #36	@ 0x24
 8000e42:	9300      	str	r3, [sp, #0]
 8000e44:	6861      	ldr	r1, [r4, #4]
 8000e46:	ed9d 0b04 	vldr	d0, [sp, #16]
 8000e4a:	f10d 0323 	add.w	r3, sp, #35	@ 0x23
 8000e4e:	4628      	mov	r0, r5
 8000e50:	f7ff fed8 	bl	8000c04 <__cvt>
 8000e54:	f1b9 0f47 	cmp.w	r9, #71	@ 0x47
 8000e58:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8000e5a:	4680      	mov	r8, r0
 8000e5c:	d129      	bne.n	8000eb2 <_printf_float+0x16e>
 8000e5e:	1cc8      	adds	r0, r1, #3
 8000e60:	db02      	blt.n	8000e68 <_printf_float+0x124>
 8000e62:	6863      	ldr	r3, [r4, #4]
 8000e64:	428b      	cmp	r3, r1
 8000e66:	da41      	bge.n	8000eec <_printf_float+0x1a8>
 8000e68:	f1aa 0a02 	sub.w	sl, sl, #2
 8000e6c:	fa5f fa8a 	uxtb.w	sl, sl
 8000e70:	3901      	subs	r1, #1
 8000e72:	4652      	mov	r2, sl
 8000e74:	f104 0050 	add.w	r0, r4, #80	@ 0x50
 8000e78:	9109      	str	r1, [sp, #36]	@ 0x24
 8000e7a:	f7ff ff28 	bl	8000cce <__exponent>
 8000e7e:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8000e80:	1813      	adds	r3, r2, r0
 8000e82:	2a01      	cmp	r2, #1
 8000e84:	4681      	mov	r9, r0
 8000e86:	6123      	str	r3, [r4, #16]
 8000e88:	dc02      	bgt.n	8000e90 <_printf_float+0x14c>
 8000e8a:	6822      	ldr	r2, [r4, #0]
 8000e8c:	07d2      	lsls	r2, r2, #31
 8000e8e:	d501      	bpl.n	8000e94 <_printf_float+0x150>
 8000e90:	3301      	adds	r3, #1
 8000e92:	6123      	str	r3, [r4, #16]
 8000e94:	f89d 3023 	ldrb.w	r3, [sp, #35]	@ 0x23
 8000e98:	2b00      	cmp	r3, #0
 8000e9a:	d0a3      	beq.n	8000de4 <_printf_float+0xa0>
 8000e9c:	232d      	movs	r3, #45	@ 0x2d
 8000e9e:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8000ea2:	e79f      	b.n	8000de4 <_printf_float+0xa0>
 8000ea4:	f1b9 0f47 	cmp.w	r9, #71	@ 0x47
 8000ea8:	d1c2      	bne.n	8000e30 <_printf_float+0xec>
 8000eaa:	2b00      	cmp	r3, #0
 8000eac:	d1c0      	bne.n	8000e30 <_printf_float+0xec>
 8000eae:	2301      	movs	r3, #1
 8000eb0:	e7bd      	b.n	8000e2e <_printf_float+0xea>
 8000eb2:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 8000eb6:	d9db      	bls.n	8000e70 <_printf_float+0x12c>
 8000eb8:	f1ba 0f66 	cmp.w	sl, #102	@ 0x66
 8000ebc:	d118      	bne.n	8000ef0 <_printf_float+0x1ac>
 8000ebe:	2900      	cmp	r1, #0
 8000ec0:	6863      	ldr	r3, [r4, #4]
 8000ec2:	dd0b      	ble.n	8000edc <_printf_float+0x198>
 8000ec4:	6121      	str	r1, [r4, #16]
 8000ec6:	b913      	cbnz	r3, 8000ece <_printf_float+0x18a>
 8000ec8:	6822      	ldr	r2, [r4, #0]
 8000eca:	07d0      	lsls	r0, r2, #31
 8000ecc:	d502      	bpl.n	8000ed4 <_printf_float+0x190>
 8000ece:	3301      	adds	r3, #1
 8000ed0:	440b      	add	r3, r1
 8000ed2:	6123      	str	r3, [r4, #16]
 8000ed4:	65a1      	str	r1, [r4, #88]	@ 0x58
 8000ed6:	f04f 0900 	mov.w	r9, #0
 8000eda:	e7db      	b.n	8000e94 <_printf_float+0x150>
 8000edc:	b913      	cbnz	r3, 8000ee4 <_printf_float+0x1a0>
 8000ede:	6822      	ldr	r2, [r4, #0]
 8000ee0:	07d2      	lsls	r2, r2, #31
 8000ee2:	d501      	bpl.n	8000ee8 <_printf_float+0x1a4>
 8000ee4:	3302      	adds	r3, #2
 8000ee6:	e7f4      	b.n	8000ed2 <_printf_float+0x18e>
 8000ee8:	2301      	movs	r3, #1
 8000eea:	e7f2      	b.n	8000ed2 <_printf_float+0x18e>
 8000eec:	f04f 0a67 	mov.w	sl, #103	@ 0x67
 8000ef0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8000ef2:	428b      	cmp	r3, r1
 8000ef4:	dc05      	bgt.n	8000f02 <_printf_float+0x1be>
 8000ef6:	6823      	ldr	r3, [r4, #0]
 8000ef8:	6121      	str	r1, [r4, #16]
 8000efa:	07d8      	lsls	r0, r3, #31
 8000efc:	d5ea      	bpl.n	8000ed4 <_printf_float+0x190>
 8000efe:	1c4b      	adds	r3, r1, #1
 8000f00:	e7e7      	b.n	8000ed2 <_printf_float+0x18e>
 8000f02:	2900      	cmp	r1, #0
 8000f04:	bfd4      	ite	le
 8000f06:	f1c1 0202 	rsble	r2, r1, #2
 8000f0a:	2201      	movgt	r2, #1
 8000f0c:	4413      	add	r3, r2
 8000f0e:	e7e0      	b.n	8000ed2 <_printf_float+0x18e>
 8000f10:	6823      	ldr	r3, [r4, #0]
 8000f12:	055a      	lsls	r2, r3, #21
 8000f14:	d407      	bmi.n	8000f26 <_printf_float+0x1e2>
 8000f16:	6923      	ldr	r3, [r4, #16]
 8000f18:	4642      	mov	r2, r8
 8000f1a:	4631      	mov	r1, r6
 8000f1c:	4628      	mov	r0, r5
 8000f1e:	47b8      	blx	r7
 8000f20:	3001      	adds	r0, #1
 8000f22:	d12b      	bne.n	8000f7c <_printf_float+0x238>
 8000f24:	e768      	b.n	8000df8 <_printf_float+0xb4>
 8000f26:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 8000f2a:	f240 80dd 	bls.w	80010e8 <_printf_float+0x3a4>
 8000f2e:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 8000f32:	2200      	movs	r2, #0
 8000f34:	2300      	movs	r3, #0
 8000f36:	f7ff fdaf 	bl	8000a98 <__aeabi_dcmpeq>
 8000f3a:	2800      	cmp	r0, #0
 8000f3c:	d033      	beq.n	8000fa6 <_printf_float+0x262>
 8000f3e:	4a37      	ldr	r2, [pc, #220]	@ (800101c <_printf_float+0x2d8>)
 8000f40:	2301      	movs	r3, #1
 8000f42:	4631      	mov	r1, r6
 8000f44:	4628      	mov	r0, r5
 8000f46:	47b8      	blx	r7
 8000f48:	3001      	adds	r0, #1
 8000f4a:	f43f af55 	beq.w	8000df8 <_printf_float+0xb4>
 8000f4e:	e9dd 3809 	ldrd	r3, r8, [sp, #36]	@ 0x24
 8000f52:	4543      	cmp	r3, r8
 8000f54:	db02      	blt.n	8000f5c <_printf_float+0x218>
 8000f56:	6823      	ldr	r3, [r4, #0]
 8000f58:	07d8      	lsls	r0, r3, #31
 8000f5a:	d50f      	bpl.n	8000f7c <_printf_float+0x238>
 8000f5c:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8000f60:	4631      	mov	r1, r6
 8000f62:	4628      	mov	r0, r5
 8000f64:	47b8      	blx	r7
 8000f66:	3001      	adds	r0, #1
 8000f68:	f43f af46 	beq.w	8000df8 <_printf_float+0xb4>
 8000f6c:	f04f 0900 	mov.w	r9, #0
 8000f70:	f108 38ff 	add.w	r8, r8, #4294967295	@ 0xffffffff
 8000f74:	f104 0a1a 	add.w	sl, r4, #26
 8000f78:	45c8      	cmp	r8, r9
 8000f7a:	dc09      	bgt.n	8000f90 <_printf_float+0x24c>
 8000f7c:	6823      	ldr	r3, [r4, #0]
 8000f7e:	079b      	lsls	r3, r3, #30
 8000f80:	f100 8103 	bmi.w	800118a <_printf_float+0x446>
 8000f84:	68e0      	ldr	r0, [r4, #12]
 8000f86:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8000f88:	4298      	cmp	r0, r3
 8000f8a:	bfb8      	it	lt
 8000f8c:	4618      	movlt	r0, r3
 8000f8e:	e735      	b.n	8000dfc <_printf_float+0xb8>
 8000f90:	2301      	movs	r3, #1
 8000f92:	4652      	mov	r2, sl
 8000f94:	4631      	mov	r1, r6
 8000f96:	4628      	mov	r0, r5
 8000f98:	47b8      	blx	r7
 8000f9a:	3001      	adds	r0, #1
 8000f9c:	f43f af2c 	beq.w	8000df8 <_printf_float+0xb4>
 8000fa0:	f109 0901 	add.w	r9, r9, #1
 8000fa4:	e7e8      	b.n	8000f78 <_printf_float+0x234>
 8000fa6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8000fa8:	2b00      	cmp	r3, #0
 8000faa:	dc39      	bgt.n	8001020 <_printf_float+0x2dc>
 8000fac:	4a1b      	ldr	r2, [pc, #108]	@ (800101c <_printf_float+0x2d8>)
 8000fae:	2301      	movs	r3, #1
 8000fb0:	4631      	mov	r1, r6
 8000fb2:	4628      	mov	r0, r5
 8000fb4:	47b8      	blx	r7
 8000fb6:	3001      	adds	r0, #1
 8000fb8:	f43f af1e 	beq.w	8000df8 <_printf_float+0xb4>
 8000fbc:	e9dd 3909 	ldrd	r3, r9, [sp, #36]	@ 0x24
 8000fc0:	ea59 0303 	orrs.w	r3, r9, r3
 8000fc4:	d102      	bne.n	8000fcc <_printf_float+0x288>
 8000fc6:	6823      	ldr	r3, [r4, #0]
 8000fc8:	07d9      	lsls	r1, r3, #31
 8000fca:	d5d7      	bpl.n	8000f7c <_printf_float+0x238>
 8000fcc:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8000fd0:	4631      	mov	r1, r6
 8000fd2:	4628      	mov	r0, r5
 8000fd4:	47b8      	blx	r7
 8000fd6:	3001      	adds	r0, #1
 8000fd8:	f43f af0e 	beq.w	8000df8 <_printf_float+0xb4>
 8000fdc:	f04f 0a00 	mov.w	sl, #0
 8000fe0:	f104 0b1a 	add.w	fp, r4, #26
 8000fe4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8000fe6:	425b      	negs	r3, r3
 8000fe8:	4553      	cmp	r3, sl
 8000fea:	dc01      	bgt.n	8000ff0 <_printf_float+0x2ac>
 8000fec:	464b      	mov	r3, r9
 8000fee:	e793      	b.n	8000f18 <_printf_float+0x1d4>
 8000ff0:	2301      	movs	r3, #1
 8000ff2:	465a      	mov	r2, fp
 8000ff4:	4631      	mov	r1, r6
 8000ff6:	4628      	mov	r0, r5
 8000ff8:	47b8      	blx	r7
 8000ffa:	3001      	adds	r0, #1
 8000ffc:	f43f aefc 	beq.w	8000df8 <_printf_float+0xb4>
 8001000:	f10a 0a01 	add.w	sl, sl, #1
 8001004:	e7ee      	b.n	8000fe4 <_printf_float+0x2a0>
 8001006:	bf00      	nop
 8001008:	7fefffff 	.word	0x7fefffff
 800100c:	080040f0 	.word	0x080040f0
 8001010:	080040ec 	.word	0x080040ec
 8001014:	080040f8 	.word	0x080040f8
 8001018:	080040f4 	.word	0x080040f4
 800101c:	080040fc 	.word	0x080040fc
 8001020:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8001022:	f8dd a028 	ldr.w	sl, [sp, #40]	@ 0x28
 8001026:	4553      	cmp	r3, sl
 8001028:	bfa8      	it	ge
 800102a:	4653      	movge	r3, sl
 800102c:	2b00      	cmp	r3, #0
 800102e:	4699      	mov	r9, r3
 8001030:	dc36      	bgt.n	80010a0 <_printf_float+0x35c>
 8001032:	f04f 0b00 	mov.w	fp, #0
 8001036:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 800103a:	f104 021a 	add.w	r2, r4, #26
 800103e:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8001040:	9304      	str	r3, [sp, #16]
 8001042:	eba3 0309 	sub.w	r3, r3, r9
 8001046:	455b      	cmp	r3, fp
 8001048:	dc31      	bgt.n	80010ae <_printf_float+0x36a>
 800104a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800104c:	459a      	cmp	sl, r3
 800104e:	dc3a      	bgt.n	80010c6 <_printf_float+0x382>
 8001050:	6823      	ldr	r3, [r4, #0]
 8001052:	07da      	lsls	r2, r3, #31
 8001054:	d437      	bmi.n	80010c6 <_printf_float+0x382>
 8001056:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8001058:	ebaa 0903 	sub.w	r9, sl, r3
 800105c:	9b04      	ldr	r3, [sp, #16]
 800105e:	ebaa 0303 	sub.w	r3, sl, r3
 8001062:	4599      	cmp	r9, r3
 8001064:	bfa8      	it	ge
 8001066:	4699      	movge	r9, r3
 8001068:	f1b9 0f00 	cmp.w	r9, #0
 800106c:	dc33      	bgt.n	80010d6 <_printf_float+0x392>
 800106e:	f04f 0800 	mov.w	r8, #0
 8001072:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8001076:	f104 0b1a 	add.w	fp, r4, #26
 800107a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800107c:	ebaa 0303 	sub.w	r3, sl, r3
 8001080:	eba3 0309 	sub.w	r3, r3, r9
 8001084:	4543      	cmp	r3, r8
 8001086:	f77f af79 	ble.w	8000f7c <_printf_float+0x238>
 800108a:	2301      	movs	r3, #1
 800108c:	465a      	mov	r2, fp
 800108e:	4631      	mov	r1, r6
 8001090:	4628      	mov	r0, r5
 8001092:	47b8      	blx	r7
 8001094:	3001      	adds	r0, #1
 8001096:	f43f aeaf 	beq.w	8000df8 <_printf_float+0xb4>
 800109a:	f108 0801 	add.w	r8, r8, #1
 800109e:	e7ec      	b.n	800107a <_printf_float+0x336>
 80010a0:	4642      	mov	r2, r8
 80010a2:	4631      	mov	r1, r6
 80010a4:	4628      	mov	r0, r5
 80010a6:	47b8      	blx	r7
 80010a8:	3001      	adds	r0, #1
 80010aa:	d1c2      	bne.n	8001032 <_printf_float+0x2ee>
 80010ac:	e6a4      	b.n	8000df8 <_printf_float+0xb4>
 80010ae:	2301      	movs	r3, #1
 80010b0:	4631      	mov	r1, r6
 80010b2:	4628      	mov	r0, r5
 80010b4:	9204      	str	r2, [sp, #16]
 80010b6:	47b8      	blx	r7
 80010b8:	3001      	adds	r0, #1
 80010ba:	f43f ae9d 	beq.w	8000df8 <_printf_float+0xb4>
 80010be:	9a04      	ldr	r2, [sp, #16]
 80010c0:	f10b 0b01 	add.w	fp, fp, #1
 80010c4:	e7bb      	b.n	800103e <_printf_float+0x2fa>
 80010c6:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 80010ca:	4631      	mov	r1, r6
 80010cc:	4628      	mov	r0, r5
 80010ce:	47b8      	blx	r7
 80010d0:	3001      	adds	r0, #1
 80010d2:	d1c0      	bne.n	8001056 <_printf_float+0x312>
 80010d4:	e690      	b.n	8000df8 <_printf_float+0xb4>
 80010d6:	9a04      	ldr	r2, [sp, #16]
 80010d8:	464b      	mov	r3, r9
 80010da:	4442      	add	r2, r8
 80010dc:	4631      	mov	r1, r6
 80010de:	4628      	mov	r0, r5
 80010e0:	47b8      	blx	r7
 80010e2:	3001      	adds	r0, #1
 80010e4:	d1c3      	bne.n	800106e <_printf_float+0x32a>
 80010e6:	e687      	b.n	8000df8 <_printf_float+0xb4>
 80010e8:	f8dd a028 	ldr.w	sl, [sp, #40]	@ 0x28
 80010ec:	f1ba 0f01 	cmp.w	sl, #1
 80010f0:	dc01      	bgt.n	80010f6 <_printf_float+0x3b2>
 80010f2:	07db      	lsls	r3, r3, #31
 80010f4:	d536      	bpl.n	8001164 <_printf_float+0x420>
 80010f6:	2301      	movs	r3, #1
 80010f8:	4642      	mov	r2, r8
 80010fa:	4631      	mov	r1, r6
 80010fc:	4628      	mov	r0, r5
 80010fe:	47b8      	blx	r7
 8001100:	3001      	adds	r0, #1
 8001102:	f43f ae79 	beq.w	8000df8 <_printf_float+0xb4>
 8001106:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800110a:	4631      	mov	r1, r6
 800110c:	4628      	mov	r0, r5
 800110e:	47b8      	blx	r7
 8001110:	3001      	adds	r0, #1
 8001112:	f43f ae71 	beq.w	8000df8 <_printf_float+0xb4>
 8001116:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 800111a:	2200      	movs	r2, #0
 800111c:	2300      	movs	r3, #0
 800111e:	f10a 3aff 	add.w	sl, sl, #4294967295	@ 0xffffffff
 8001122:	f7ff fcb9 	bl	8000a98 <__aeabi_dcmpeq>
 8001126:	b9c0      	cbnz	r0, 800115a <_printf_float+0x416>
 8001128:	4653      	mov	r3, sl
 800112a:	f108 0201 	add.w	r2, r8, #1
 800112e:	4631      	mov	r1, r6
 8001130:	4628      	mov	r0, r5
 8001132:	47b8      	blx	r7
 8001134:	3001      	adds	r0, #1
 8001136:	d10c      	bne.n	8001152 <_printf_float+0x40e>
 8001138:	e65e      	b.n	8000df8 <_printf_float+0xb4>
 800113a:	2301      	movs	r3, #1
 800113c:	465a      	mov	r2, fp
 800113e:	4631      	mov	r1, r6
 8001140:	4628      	mov	r0, r5
 8001142:	47b8      	blx	r7
 8001144:	3001      	adds	r0, #1
 8001146:	f43f ae57 	beq.w	8000df8 <_printf_float+0xb4>
 800114a:	f108 0801 	add.w	r8, r8, #1
 800114e:	45d0      	cmp	r8, sl
 8001150:	dbf3      	blt.n	800113a <_printf_float+0x3f6>
 8001152:	464b      	mov	r3, r9
 8001154:	f104 0250 	add.w	r2, r4, #80	@ 0x50
 8001158:	e6df      	b.n	8000f1a <_printf_float+0x1d6>
 800115a:	f04f 0800 	mov.w	r8, #0
 800115e:	f104 0b1a 	add.w	fp, r4, #26
 8001162:	e7f4      	b.n	800114e <_printf_float+0x40a>
 8001164:	2301      	movs	r3, #1
 8001166:	4642      	mov	r2, r8
 8001168:	e7e1      	b.n	800112e <_printf_float+0x3ea>
 800116a:	2301      	movs	r3, #1
 800116c:	464a      	mov	r2, r9
 800116e:	4631      	mov	r1, r6
 8001170:	4628      	mov	r0, r5
 8001172:	47b8      	blx	r7
 8001174:	3001      	adds	r0, #1
 8001176:	f43f ae3f 	beq.w	8000df8 <_printf_float+0xb4>
 800117a:	f108 0801 	add.w	r8, r8, #1
 800117e:	68e3      	ldr	r3, [r4, #12]
 8001180:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8001182:	1a5b      	subs	r3, r3, r1
 8001184:	4543      	cmp	r3, r8
 8001186:	dcf0      	bgt.n	800116a <_printf_float+0x426>
 8001188:	e6fc      	b.n	8000f84 <_printf_float+0x240>
 800118a:	f04f 0800 	mov.w	r8, #0
 800118e:	f104 0919 	add.w	r9, r4, #25
 8001192:	e7f4      	b.n	800117e <_printf_float+0x43a>

08001194 <_printf_common>:
 8001194:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001198:	4616      	mov	r6, r2
 800119a:	4698      	mov	r8, r3
 800119c:	688a      	ldr	r2, [r1, #8]
 800119e:	690b      	ldr	r3, [r1, #16]
 80011a0:	f8dd 9020 	ldr.w	r9, [sp, #32]
 80011a4:	4293      	cmp	r3, r2
 80011a6:	bfb8      	it	lt
 80011a8:	4613      	movlt	r3, r2
 80011aa:	6033      	str	r3, [r6, #0]
 80011ac:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 80011b0:	4607      	mov	r7, r0
 80011b2:	460c      	mov	r4, r1
 80011b4:	b10a      	cbz	r2, 80011ba <_printf_common+0x26>
 80011b6:	3301      	adds	r3, #1
 80011b8:	6033      	str	r3, [r6, #0]
 80011ba:	6823      	ldr	r3, [r4, #0]
 80011bc:	0699      	lsls	r1, r3, #26
 80011be:	bf42      	ittt	mi
 80011c0:	6833      	ldrmi	r3, [r6, #0]
 80011c2:	3302      	addmi	r3, #2
 80011c4:	6033      	strmi	r3, [r6, #0]
 80011c6:	6825      	ldr	r5, [r4, #0]
 80011c8:	f015 0506 	ands.w	r5, r5, #6
 80011cc:	d106      	bne.n	80011dc <_printf_common+0x48>
 80011ce:	f104 0a19 	add.w	sl, r4, #25
 80011d2:	68e3      	ldr	r3, [r4, #12]
 80011d4:	6832      	ldr	r2, [r6, #0]
 80011d6:	1a9b      	subs	r3, r3, r2
 80011d8:	42ab      	cmp	r3, r5
 80011da:	dc26      	bgt.n	800122a <_printf_common+0x96>
 80011dc:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 80011e0:	6822      	ldr	r2, [r4, #0]
 80011e2:	3b00      	subs	r3, #0
 80011e4:	bf18      	it	ne
 80011e6:	2301      	movne	r3, #1
 80011e8:	0692      	lsls	r2, r2, #26
 80011ea:	d42b      	bmi.n	8001244 <_printf_common+0xb0>
 80011ec:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 80011f0:	4641      	mov	r1, r8
 80011f2:	4638      	mov	r0, r7
 80011f4:	47c8      	blx	r9
 80011f6:	3001      	adds	r0, #1
 80011f8:	d01e      	beq.n	8001238 <_printf_common+0xa4>
 80011fa:	6823      	ldr	r3, [r4, #0]
 80011fc:	6922      	ldr	r2, [r4, #16]
 80011fe:	f003 0306 	and.w	r3, r3, #6
 8001202:	2b04      	cmp	r3, #4
 8001204:	bf02      	ittt	eq
 8001206:	68e5      	ldreq	r5, [r4, #12]
 8001208:	6833      	ldreq	r3, [r6, #0]
 800120a:	1aed      	subeq	r5, r5, r3
 800120c:	68a3      	ldr	r3, [r4, #8]
 800120e:	bf0c      	ite	eq
 8001210:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8001214:	2500      	movne	r5, #0
 8001216:	4293      	cmp	r3, r2
 8001218:	bfc4      	itt	gt
 800121a:	1a9b      	subgt	r3, r3, r2
 800121c:	18ed      	addgt	r5, r5, r3
 800121e:	2600      	movs	r6, #0
 8001220:	341a      	adds	r4, #26
 8001222:	42b5      	cmp	r5, r6
 8001224:	d11a      	bne.n	800125c <_printf_common+0xc8>
 8001226:	2000      	movs	r0, #0
 8001228:	e008      	b.n	800123c <_printf_common+0xa8>
 800122a:	2301      	movs	r3, #1
 800122c:	4652      	mov	r2, sl
 800122e:	4641      	mov	r1, r8
 8001230:	4638      	mov	r0, r7
 8001232:	47c8      	blx	r9
 8001234:	3001      	adds	r0, #1
 8001236:	d103      	bne.n	8001240 <_printf_common+0xac>
 8001238:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 800123c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001240:	3501      	adds	r5, #1
 8001242:	e7c6      	b.n	80011d2 <_printf_common+0x3e>
 8001244:	18e1      	adds	r1, r4, r3
 8001246:	1c5a      	adds	r2, r3, #1
 8001248:	2030      	movs	r0, #48	@ 0x30
 800124a:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 800124e:	4422      	add	r2, r4
 8001250:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8001254:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8001258:	3302      	adds	r3, #2
 800125a:	e7c7      	b.n	80011ec <_printf_common+0x58>
 800125c:	2301      	movs	r3, #1
 800125e:	4622      	mov	r2, r4
 8001260:	4641      	mov	r1, r8
 8001262:	4638      	mov	r0, r7
 8001264:	47c8      	blx	r9
 8001266:	3001      	adds	r0, #1
 8001268:	d0e6      	beq.n	8001238 <_printf_common+0xa4>
 800126a:	3601      	adds	r6, #1
 800126c:	e7d9      	b.n	8001222 <_printf_common+0x8e>
	...

08001270 <_printf_i>:
 8001270:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8001274:	7e0f      	ldrb	r7, [r1, #24]
 8001276:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8001278:	2f78      	cmp	r7, #120	@ 0x78
 800127a:	4691      	mov	r9, r2
 800127c:	4680      	mov	r8, r0
 800127e:	460c      	mov	r4, r1
 8001280:	469a      	mov	sl, r3
 8001282:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8001286:	d807      	bhi.n	8001298 <_printf_i+0x28>
 8001288:	2f62      	cmp	r7, #98	@ 0x62
 800128a:	d80a      	bhi.n	80012a2 <_printf_i+0x32>
 800128c:	2f00      	cmp	r7, #0
 800128e:	f000 80d2 	beq.w	8001436 <_printf_i+0x1c6>
 8001292:	2f58      	cmp	r7, #88	@ 0x58
 8001294:	f000 80b7 	beq.w	8001406 <_printf_i+0x196>
 8001298:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 800129c:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 80012a0:	e03a      	b.n	8001318 <_printf_i+0xa8>
 80012a2:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 80012a6:	2b15      	cmp	r3, #21
 80012a8:	d8f6      	bhi.n	8001298 <_printf_i+0x28>
 80012aa:	a101      	add	r1, pc, #4	@ (adr r1, 80012b0 <_printf_i+0x40>)
 80012ac:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 80012b0:	08001309 	.word	0x08001309
 80012b4:	0800131d 	.word	0x0800131d
 80012b8:	08001299 	.word	0x08001299
 80012bc:	08001299 	.word	0x08001299
 80012c0:	08001299 	.word	0x08001299
 80012c4:	08001299 	.word	0x08001299
 80012c8:	0800131d 	.word	0x0800131d
 80012cc:	08001299 	.word	0x08001299
 80012d0:	08001299 	.word	0x08001299
 80012d4:	08001299 	.word	0x08001299
 80012d8:	08001299 	.word	0x08001299
 80012dc:	0800141d 	.word	0x0800141d
 80012e0:	08001347 	.word	0x08001347
 80012e4:	080013d3 	.word	0x080013d3
 80012e8:	08001299 	.word	0x08001299
 80012ec:	08001299 	.word	0x08001299
 80012f0:	0800143f 	.word	0x0800143f
 80012f4:	08001299 	.word	0x08001299
 80012f8:	08001347 	.word	0x08001347
 80012fc:	08001299 	.word	0x08001299
 8001300:	08001299 	.word	0x08001299
 8001304:	080013db 	.word	0x080013db
 8001308:	6833      	ldr	r3, [r6, #0]
 800130a:	1d1a      	adds	r2, r3, #4
 800130c:	681b      	ldr	r3, [r3, #0]
 800130e:	6032      	str	r2, [r6, #0]
 8001310:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8001314:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8001318:	2301      	movs	r3, #1
 800131a:	e09d      	b.n	8001458 <_printf_i+0x1e8>
 800131c:	6833      	ldr	r3, [r6, #0]
 800131e:	6820      	ldr	r0, [r4, #0]
 8001320:	1d19      	adds	r1, r3, #4
 8001322:	6031      	str	r1, [r6, #0]
 8001324:	0606      	lsls	r6, r0, #24
 8001326:	d501      	bpl.n	800132c <_printf_i+0xbc>
 8001328:	681d      	ldr	r5, [r3, #0]
 800132a:	e003      	b.n	8001334 <_printf_i+0xc4>
 800132c:	0645      	lsls	r5, r0, #25
 800132e:	d5fb      	bpl.n	8001328 <_printf_i+0xb8>
 8001330:	f9b3 5000 	ldrsh.w	r5, [r3]
 8001334:	2d00      	cmp	r5, #0
 8001336:	da03      	bge.n	8001340 <_printf_i+0xd0>
 8001338:	232d      	movs	r3, #45	@ 0x2d
 800133a:	426d      	negs	r5, r5
 800133c:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8001340:	4859      	ldr	r0, [pc, #356]	@ (80014a8 <_printf_i+0x238>)
 8001342:	230a      	movs	r3, #10
 8001344:	e010      	b.n	8001368 <_printf_i+0xf8>
 8001346:	6821      	ldr	r1, [r4, #0]
 8001348:	6833      	ldr	r3, [r6, #0]
 800134a:	0608      	lsls	r0, r1, #24
 800134c:	f853 5b04 	ldr.w	r5, [r3], #4
 8001350:	d402      	bmi.n	8001358 <_printf_i+0xe8>
 8001352:	0649      	lsls	r1, r1, #25
 8001354:	bf48      	it	mi
 8001356:	b2ad      	uxthmi	r5, r5
 8001358:	2f6f      	cmp	r7, #111	@ 0x6f
 800135a:	4853      	ldr	r0, [pc, #332]	@ (80014a8 <_printf_i+0x238>)
 800135c:	6033      	str	r3, [r6, #0]
 800135e:	d159      	bne.n	8001414 <_printf_i+0x1a4>
 8001360:	2308      	movs	r3, #8
 8001362:	2100      	movs	r1, #0
 8001364:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8001368:	6866      	ldr	r6, [r4, #4]
 800136a:	60a6      	str	r6, [r4, #8]
 800136c:	2e00      	cmp	r6, #0
 800136e:	db05      	blt.n	800137c <_printf_i+0x10c>
 8001370:	6821      	ldr	r1, [r4, #0]
 8001372:	432e      	orrs	r6, r5
 8001374:	f021 0104 	bic.w	r1, r1, #4
 8001378:	6021      	str	r1, [r4, #0]
 800137a:	d04d      	beq.n	8001418 <_printf_i+0x1a8>
 800137c:	4616      	mov	r6, r2
 800137e:	fbb5 f1f3 	udiv	r1, r5, r3
 8001382:	fb03 5711 	mls	r7, r3, r1, r5
 8001386:	5dc7      	ldrb	r7, [r0, r7]
 8001388:	f806 7d01 	strb.w	r7, [r6, #-1]!
 800138c:	462f      	mov	r7, r5
 800138e:	42bb      	cmp	r3, r7
 8001390:	460d      	mov	r5, r1
 8001392:	d9f4      	bls.n	800137e <_printf_i+0x10e>
 8001394:	2b08      	cmp	r3, #8
 8001396:	d10b      	bne.n	80013b0 <_printf_i+0x140>
 8001398:	6823      	ldr	r3, [r4, #0]
 800139a:	07df      	lsls	r7, r3, #31
 800139c:	d508      	bpl.n	80013b0 <_printf_i+0x140>
 800139e:	6923      	ldr	r3, [r4, #16]
 80013a0:	6861      	ldr	r1, [r4, #4]
 80013a2:	4299      	cmp	r1, r3
 80013a4:	bfde      	ittt	le
 80013a6:	2330      	movle	r3, #48	@ 0x30
 80013a8:	f806 3c01 	strble.w	r3, [r6, #-1]
 80013ac:	f106 36ff 	addle.w	r6, r6, #4294967295	@ 0xffffffff
 80013b0:	1b92      	subs	r2, r2, r6
 80013b2:	6122      	str	r2, [r4, #16]
 80013b4:	f8cd a000 	str.w	sl, [sp]
 80013b8:	464b      	mov	r3, r9
 80013ba:	aa03      	add	r2, sp, #12
 80013bc:	4621      	mov	r1, r4
 80013be:	4640      	mov	r0, r8
 80013c0:	f7ff fee8 	bl	8001194 <_printf_common>
 80013c4:	3001      	adds	r0, #1
 80013c6:	d14c      	bne.n	8001462 <_printf_i+0x1f2>
 80013c8:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 80013cc:	b004      	add	sp, #16
 80013ce:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80013d2:	6823      	ldr	r3, [r4, #0]
 80013d4:	f043 0320 	orr.w	r3, r3, #32
 80013d8:	6023      	str	r3, [r4, #0]
 80013da:	4834      	ldr	r0, [pc, #208]	@ (80014ac <_printf_i+0x23c>)
 80013dc:	2778      	movs	r7, #120	@ 0x78
 80013de:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 80013e2:	6823      	ldr	r3, [r4, #0]
 80013e4:	6831      	ldr	r1, [r6, #0]
 80013e6:	061f      	lsls	r7, r3, #24
 80013e8:	f851 5b04 	ldr.w	r5, [r1], #4
 80013ec:	d402      	bmi.n	80013f4 <_printf_i+0x184>
 80013ee:	065f      	lsls	r7, r3, #25
 80013f0:	bf48      	it	mi
 80013f2:	b2ad      	uxthmi	r5, r5
 80013f4:	6031      	str	r1, [r6, #0]
 80013f6:	07d9      	lsls	r1, r3, #31
 80013f8:	bf44      	itt	mi
 80013fa:	f043 0320 	orrmi.w	r3, r3, #32
 80013fe:	6023      	strmi	r3, [r4, #0]
 8001400:	b11d      	cbz	r5, 800140a <_printf_i+0x19a>
 8001402:	2310      	movs	r3, #16
 8001404:	e7ad      	b.n	8001362 <_printf_i+0xf2>
 8001406:	4828      	ldr	r0, [pc, #160]	@ (80014a8 <_printf_i+0x238>)
 8001408:	e7e9      	b.n	80013de <_printf_i+0x16e>
 800140a:	6823      	ldr	r3, [r4, #0]
 800140c:	f023 0320 	bic.w	r3, r3, #32
 8001410:	6023      	str	r3, [r4, #0]
 8001412:	e7f6      	b.n	8001402 <_printf_i+0x192>
 8001414:	230a      	movs	r3, #10
 8001416:	e7a4      	b.n	8001362 <_printf_i+0xf2>
 8001418:	4616      	mov	r6, r2
 800141a:	e7bb      	b.n	8001394 <_printf_i+0x124>
 800141c:	6833      	ldr	r3, [r6, #0]
 800141e:	6825      	ldr	r5, [r4, #0]
 8001420:	6961      	ldr	r1, [r4, #20]
 8001422:	1d18      	adds	r0, r3, #4
 8001424:	6030      	str	r0, [r6, #0]
 8001426:	062e      	lsls	r6, r5, #24
 8001428:	681b      	ldr	r3, [r3, #0]
 800142a:	d501      	bpl.n	8001430 <_printf_i+0x1c0>
 800142c:	6019      	str	r1, [r3, #0]
 800142e:	e002      	b.n	8001436 <_printf_i+0x1c6>
 8001430:	0668      	lsls	r0, r5, #25
 8001432:	d5fb      	bpl.n	800142c <_printf_i+0x1bc>
 8001434:	8019      	strh	r1, [r3, #0]
 8001436:	2300      	movs	r3, #0
 8001438:	6123      	str	r3, [r4, #16]
 800143a:	4616      	mov	r6, r2
 800143c:	e7ba      	b.n	80013b4 <_printf_i+0x144>
 800143e:	6833      	ldr	r3, [r6, #0]
 8001440:	1d1a      	adds	r2, r3, #4
 8001442:	6032      	str	r2, [r6, #0]
 8001444:	681e      	ldr	r6, [r3, #0]
 8001446:	6862      	ldr	r2, [r4, #4]
 8001448:	2100      	movs	r1, #0
 800144a:	4630      	mov	r0, r6
 800144c:	f7fe fea8 	bl	80001a0 <memchr>
 8001450:	b108      	cbz	r0, 8001456 <_printf_i+0x1e6>
 8001452:	1b80      	subs	r0, r0, r6
 8001454:	6060      	str	r0, [r4, #4]
 8001456:	6863      	ldr	r3, [r4, #4]
 8001458:	6123      	str	r3, [r4, #16]
 800145a:	2300      	movs	r3, #0
 800145c:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8001460:	e7a8      	b.n	80013b4 <_printf_i+0x144>
 8001462:	6923      	ldr	r3, [r4, #16]
 8001464:	4632      	mov	r2, r6
 8001466:	4649      	mov	r1, r9
 8001468:	4640      	mov	r0, r8
 800146a:	47d0      	blx	sl
 800146c:	3001      	adds	r0, #1
 800146e:	d0ab      	beq.n	80013c8 <_printf_i+0x158>
 8001470:	6823      	ldr	r3, [r4, #0]
 8001472:	079b      	lsls	r3, r3, #30
 8001474:	d413      	bmi.n	800149e <_printf_i+0x22e>
 8001476:	68e0      	ldr	r0, [r4, #12]
 8001478:	9b03      	ldr	r3, [sp, #12]
 800147a:	4298      	cmp	r0, r3
 800147c:	bfb8      	it	lt
 800147e:	4618      	movlt	r0, r3
 8001480:	e7a4      	b.n	80013cc <_printf_i+0x15c>
 8001482:	2301      	movs	r3, #1
 8001484:	4632      	mov	r2, r6
 8001486:	4649      	mov	r1, r9
 8001488:	4640      	mov	r0, r8
 800148a:	47d0      	blx	sl
 800148c:	3001      	adds	r0, #1
 800148e:	d09b      	beq.n	80013c8 <_printf_i+0x158>
 8001490:	3501      	adds	r5, #1
 8001492:	68e3      	ldr	r3, [r4, #12]
 8001494:	9903      	ldr	r1, [sp, #12]
 8001496:	1a5b      	subs	r3, r3, r1
 8001498:	42ab      	cmp	r3, r5
 800149a:	dcf2      	bgt.n	8001482 <_printf_i+0x212>
 800149c:	e7eb      	b.n	8001476 <_printf_i+0x206>
 800149e:	2500      	movs	r5, #0
 80014a0:	f104 0619 	add.w	r6, r4, #25
 80014a4:	e7f5      	b.n	8001492 <_printf_i+0x222>
 80014a6:	bf00      	nop
 80014a8:	080040fe 	.word	0x080040fe
 80014ac:	0800410f 	.word	0x0800410f

080014b0 <std>:
 80014b0:	2300      	movs	r3, #0
 80014b2:	b510      	push	{r4, lr}
 80014b4:	4604      	mov	r4, r0
 80014b6:	e9c0 3300 	strd	r3, r3, [r0]
 80014ba:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80014be:	6083      	str	r3, [r0, #8]
 80014c0:	8181      	strh	r1, [r0, #12]
 80014c2:	6643      	str	r3, [r0, #100]	@ 0x64
 80014c4:	81c2      	strh	r2, [r0, #14]
 80014c6:	6183      	str	r3, [r0, #24]
 80014c8:	4619      	mov	r1, r3
 80014ca:	2208      	movs	r2, #8
 80014cc:	305c      	adds	r0, #92	@ 0x5c
 80014ce:	f000 f8f7 	bl	80016c0 <memset>
 80014d2:	4b0d      	ldr	r3, [pc, #52]	@ (8001508 <std+0x58>)
 80014d4:	6263      	str	r3, [r4, #36]	@ 0x24
 80014d6:	4b0d      	ldr	r3, [pc, #52]	@ (800150c <std+0x5c>)
 80014d8:	62a3      	str	r3, [r4, #40]	@ 0x28
 80014da:	4b0d      	ldr	r3, [pc, #52]	@ (8001510 <std+0x60>)
 80014dc:	62e3      	str	r3, [r4, #44]	@ 0x2c
 80014de:	4b0d      	ldr	r3, [pc, #52]	@ (8001514 <std+0x64>)
 80014e0:	6323      	str	r3, [r4, #48]	@ 0x30
 80014e2:	4b0d      	ldr	r3, [pc, #52]	@ (8001518 <std+0x68>)
 80014e4:	6224      	str	r4, [r4, #32]
 80014e6:	429c      	cmp	r4, r3
 80014e8:	d006      	beq.n	80014f8 <std+0x48>
 80014ea:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 80014ee:	4294      	cmp	r4, r2
 80014f0:	d002      	beq.n	80014f8 <std+0x48>
 80014f2:	33d0      	adds	r3, #208	@ 0xd0
 80014f4:	429c      	cmp	r4, r3
 80014f6:	d105      	bne.n	8001504 <std+0x54>
 80014f8:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 80014fc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001500:	f000 b954 	b.w	80017ac <__retarget_lock_init_recursive>
 8001504:	bd10      	pop	{r4, pc}
 8001506:	bf00      	nop
 8001508:	08001639 	.word	0x08001639
 800150c:	0800165b 	.word	0x0800165b
 8001510:	08001693 	.word	0x08001693
 8001514:	080016b9 	.word	0x080016b9
 8001518:	200001e4 	.word	0x200001e4

0800151c <stdio_exit_handler>:
 800151c:	4a02      	ldr	r2, [pc, #8]	@ (8001528 <stdio_exit_handler+0xc>)
 800151e:	4903      	ldr	r1, [pc, #12]	@ (800152c <stdio_exit_handler+0x10>)
 8001520:	4803      	ldr	r0, [pc, #12]	@ (8001530 <stdio_exit_handler+0x14>)
 8001522:	f000 b86b 	b.w	80015fc <_fwalk_sglue>
 8001526:	bf00      	nop
 8001528:	20000000 	.word	0x20000000
 800152c:	08002e9d 	.word	0x08002e9d
 8001530:	20000010 	.word	0x20000010

08001534 <cleanup_stdio>:
 8001534:	6841      	ldr	r1, [r0, #4]
 8001536:	4b0c      	ldr	r3, [pc, #48]	@ (8001568 <cleanup_stdio+0x34>)
 8001538:	4299      	cmp	r1, r3
 800153a:	b510      	push	{r4, lr}
 800153c:	4604      	mov	r4, r0
 800153e:	d001      	beq.n	8001544 <cleanup_stdio+0x10>
 8001540:	f001 fcac 	bl	8002e9c <_fflush_r>
 8001544:	68a1      	ldr	r1, [r4, #8]
 8001546:	4b09      	ldr	r3, [pc, #36]	@ (800156c <cleanup_stdio+0x38>)
 8001548:	4299      	cmp	r1, r3
 800154a:	d002      	beq.n	8001552 <cleanup_stdio+0x1e>
 800154c:	4620      	mov	r0, r4
 800154e:	f001 fca5 	bl	8002e9c <_fflush_r>
 8001552:	68e1      	ldr	r1, [r4, #12]
 8001554:	4b06      	ldr	r3, [pc, #24]	@ (8001570 <cleanup_stdio+0x3c>)
 8001556:	4299      	cmp	r1, r3
 8001558:	d004      	beq.n	8001564 <cleanup_stdio+0x30>
 800155a:	4620      	mov	r0, r4
 800155c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001560:	f001 bc9c 	b.w	8002e9c <_fflush_r>
 8001564:	bd10      	pop	{r4, pc}
 8001566:	bf00      	nop
 8001568:	200001e4 	.word	0x200001e4
 800156c:	2000024c 	.word	0x2000024c
 8001570:	200002b4 	.word	0x200002b4

08001574 <global_stdio_init.part.0>:
 8001574:	4b0c      	ldr	r3, [pc, #48]	@ (80015a8 <global_stdio_init.part.0+0x34>)
 8001576:	4a0d      	ldr	r2, [pc, #52]	@ (80015ac <global_stdio_init.part.0+0x38>)
 8001578:	480d      	ldr	r0, [pc, #52]	@ (80015b0 <global_stdio_init.part.0+0x3c>)
 800157a:	b510      	push	{r4, lr}
 800157c:	2104      	movs	r1, #4
 800157e:	601a      	str	r2, [r3, #0]
 8001580:	2200      	movs	r2, #0
 8001582:	f7ff ff95 	bl	80014b0 <std>
 8001586:	4b0a      	ldr	r3, [pc, #40]	@ (80015b0 <global_stdio_init.part.0+0x3c>)
 8001588:	2201      	movs	r2, #1
 800158a:	461c      	mov	r4, r3
 800158c:	2109      	movs	r1, #9
 800158e:	f103 0068 	add.w	r0, r3, #104	@ 0x68
 8001592:	f7ff ff8d 	bl	80014b0 <std>
 8001596:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 800159a:	2202      	movs	r2, #2
 800159c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80015a0:	2112      	movs	r1, #18
 80015a2:	f7ff bf85 	b.w	80014b0 <std>
 80015a6:	bf00      	nop
 80015a8:	2000031c 	.word	0x2000031c
 80015ac:	0800151d 	.word	0x0800151d
 80015b0:	200001e4 	.word	0x200001e4

080015b4 <__sfp_lock_acquire>:
 80015b4:	4801      	ldr	r0, [pc, #4]	@ (80015bc <__sfp_lock_acquire+0x8>)
 80015b6:	f000 b8fa 	b.w	80017ae <__retarget_lock_acquire_recursive>
 80015ba:	bf00      	nop
 80015bc:	20000325 	.word	0x20000325

080015c0 <__sfp_lock_release>:
 80015c0:	4801      	ldr	r0, [pc, #4]	@ (80015c8 <__sfp_lock_release+0x8>)
 80015c2:	f000 b8f5 	b.w	80017b0 <__retarget_lock_release_recursive>
 80015c6:	bf00      	nop
 80015c8:	20000325 	.word	0x20000325

080015cc <__sinit>:
 80015cc:	b510      	push	{r4, lr}
 80015ce:	4604      	mov	r4, r0
 80015d0:	f7ff fff0 	bl	80015b4 <__sfp_lock_acquire>
 80015d4:	6a23      	ldr	r3, [r4, #32]
 80015d6:	b11b      	cbz	r3, 80015e0 <__sinit+0x14>
 80015d8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80015dc:	f7ff bff0 	b.w	80015c0 <__sfp_lock_release>
 80015e0:	4b04      	ldr	r3, [pc, #16]	@ (80015f4 <__sinit+0x28>)
 80015e2:	6223      	str	r3, [r4, #32]
 80015e4:	4b04      	ldr	r3, [pc, #16]	@ (80015f8 <__sinit+0x2c>)
 80015e6:	681b      	ldr	r3, [r3, #0]
 80015e8:	2b00      	cmp	r3, #0
 80015ea:	d1f5      	bne.n	80015d8 <__sinit+0xc>
 80015ec:	f7ff ffc2 	bl	8001574 <global_stdio_init.part.0>
 80015f0:	e7f2      	b.n	80015d8 <__sinit+0xc>
 80015f2:	bf00      	nop
 80015f4:	08001535 	.word	0x08001535
 80015f8:	2000031c 	.word	0x2000031c

080015fc <_fwalk_sglue>:
 80015fc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8001600:	4607      	mov	r7, r0
 8001602:	4688      	mov	r8, r1
 8001604:	4614      	mov	r4, r2
 8001606:	2600      	movs	r6, #0
 8001608:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 800160c:	f1b9 0901 	subs.w	r9, r9, #1
 8001610:	d505      	bpl.n	800161e <_fwalk_sglue+0x22>
 8001612:	6824      	ldr	r4, [r4, #0]
 8001614:	2c00      	cmp	r4, #0
 8001616:	d1f7      	bne.n	8001608 <_fwalk_sglue+0xc>
 8001618:	4630      	mov	r0, r6
 800161a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800161e:	89ab      	ldrh	r3, [r5, #12]
 8001620:	2b01      	cmp	r3, #1
 8001622:	d907      	bls.n	8001634 <_fwalk_sglue+0x38>
 8001624:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8001628:	3301      	adds	r3, #1
 800162a:	d003      	beq.n	8001634 <_fwalk_sglue+0x38>
 800162c:	4629      	mov	r1, r5
 800162e:	4638      	mov	r0, r7
 8001630:	47c0      	blx	r8
 8001632:	4306      	orrs	r6, r0
 8001634:	3568      	adds	r5, #104	@ 0x68
 8001636:	e7e9      	b.n	800160c <_fwalk_sglue+0x10>

08001638 <__sread>:
 8001638:	b510      	push	{r4, lr}
 800163a:	460c      	mov	r4, r1
 800163c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001640:	f000 f86c 	bl	800171c <_read_r>
 8001644:	2800      	cmp	r0, #0
 8001646:	bfab      	itete	ge
 8001648:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 800164a:	89a3      	ldrhlt	r3, [r4, #12]
 800164c:	181b      	addge	r3, r3, r0
 800164e:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 8001652:	bfac      	ite	ge
 8001654:	6563      	strge	r3, [r4, #84]	@ 0x54
 8001656:	81a3      	strhlt	r3, [r4, #12]
 8001658:	bd10      	pop	{r4, pc}

0800165a <__swrite>:
 800165a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800165e:	461f      	mov	r7, r3
 8001660:	898b      	ldrh	r3, [r1, #12]
 8001662:	05db      	lsls	r3, r3, #23
 8001664:	4605      	mov	r5, r0
 8001666:	460c      	mov	r4, r1
 8001668:	4616      	mov	r6, r2
 800166a:	d505      	bpl.n	8001678 <__swrite+0x1e>
 800166c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001670:	2302      	movs	r3, #2
 8001672:	2200      	movs	r2, #0
 8001674:	f000 f840 	bl	80016f8 <_lseek_r>
 8001678:	89a3      	ldrh	r3, [r4, #12]
 800167a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800167e:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8001682:	81a3      	strh	r3, [r4, #12]
 8001684:	4632      	mov	r2, r6
 8001686:	463b      	mov	r3, r7
 8001688:	4628      	mov	r0, r5
 800168a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800168e:	f000 b857 	b.w	8001740 <_write_r>

08001692 <__sseek>:
 8001692:	b510      	push	{r4, lr}
 8001694:	460c      	mov	r4, r1
 8001696:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800169a:	f000 f82d 	bl	80016f8 <_lseek_r>
 800169e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80016a2:	1c42      	adds	r2, r0, #1
 80016a4:	bf0b      	itete	eq
 80016a6:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 80016aa:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 80016ae:	81a3      	strheq	r3, [r4, #12]
 80016b0:	81a3      	strhne	r3, [r4, #12]
 80016b2:	bf18      	it	ne
 80016b4:	6560      	strne	r0, [r4, #84]	@ 0x54
 80016b6:	bd10      	pop	{r4, pc}

080016b8 <__sclose>:
 80016b8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80016bc:	f000 b80c 	b.w	80016d8 <_close_r>

080016c0 <memset>:
 80016c0:	4402      	add	r2, r0
 80016c2:	4603      	mov	r3, r0
 80016c4:	4293      	cmp	r3, r2
 80016c6:	d100      	bne.n	80016ca <memset+0xa>
 80016c8:	4770      	bx	lr
 80016ca:	f803 1b01 	strb.w	r1, [r3], #1
 80016ce:	e7f9      	b.n	80016c4 <memset+0x4>

080016d0 <_localeconv_r>:
 80016d0:	4800      	ldr	r0, [pc, #0]	@ (80016d4 <_localeconv_r+0x4>)
 80016d2:	4770      	bx	lr
 80016d4:	2000014c 	.word	0x2000014c

080016d8 <_close_r>:
 80016d8:	b538      	push	{r3, r4, r5, lr}
 80016da:	4d06      	ldr	r5, [pc, #24]	@ (80016f4 <_close_r+0x1c>)
 80016dc:	2300      	movs	r3, #0
 80016de:	4604      	mov	r4, r0
 80016e0:	4608      	mov	r0, r1
 80016e2:	602b      	str	r3, [r5, #0]
 80016e4:	f002 fa1a 	bl	8003b1c <_close>
 80016e8:	1c43      	adds	r3, r0, #1
 80016ea:	d102      	bne.n	80016f2 <_close_r+0x1a>
 80016ec:	682b      	ldr	r3, [r5, #0]
 80016ee:	b103      	cbz	r3, 80016f2 <_close_r+0x1a>
 80016f0:	6023      	str	r3, [r4, #0]
 80016f2:	bd38      	pop	{r3, r4, r5, pc}
 80016f4:	20000320 	.word	0x20000320

080016f8 <_lseek_r>:
 80016f8:	b538      	push	{r3, r4, r5, lr}
 80016fa:	4d07      	ldr	r5, [pc, #28]	@ (8001718 <_lseek_r+0x20>)
 80016fc:	4604      	mov	r4, r0
 80016fe:	4608      	mov	r0, r1
 8001700:	4611      	mov	r1, r2
 8001702:	2200      	movs	r2, #0
 8001704:	602a      	str	r2, [r5, #0]
 8001706:	461a      	mov	r2, r3
 8001708:	f002 fa2f 	bl	8003b6a <_lseek>
 800170c:	1c43      	adds	r3, r0, #1
 800170e:	d102      	bne.n	8001716 <_lseek_r+0x1e>
 8001710:	682b      	ldr	r3, [r5, #0]
 8001712:	b103      	cbz	r3, 8001716 <_lseek_r+0x1e>
 8001714:	6023      	str	r3, [r4, #0]
 8001716:	bd38      	pop	{r3, r4, r5, pc}
 8001718:	20000320 	.word	0x20000320

0800171c <_read_r>:
 800171c:	b538      	push	{r3, r4, r5, lr}
 800171e:	4d07      	ldr	r5, [pc, #28]	@ (800173c <_read_r+0x20>)
 8001720:	4604      	mov	r4, r0
 8001722:	4608      	mov	r0, r1
 8001724:	4611      	mov	r1, r2
 8001726:	2200      	movs	r2, #0
 8001728:	602a      	str	r2, [r5, #0]
 800172a:	461a      	mov	r2, r3
 800172c:	f002 f9bd 	bl	8003aaa <_read>
 8001730:	1c43      	adds	r3, r0, #1
 8001732:	d102      	bne.n	800173a <_read_r+0x1e>
 8001734:	682b      	ldr	r3, [r5, #0]
 8001736:	b103      	cbz	r3, 800173a <_read_r+0x1e>
 8001738:	6023      	str	r3, [r4, #0]
 800173a:	bd38      	pop	{r3, r4, r5, pc}
 800173c:	20000320 	.word	0x20000320

08001740 <_write_r>:
 8001740:	b538      	push	{r3, r4, r5, lr}
 8001742:	4d07      	ldr	r5, [pc, #28]	@ (8001760 <_write_r+0x20>)
 8001744:	4604      	mov	r4, r0
 8001746:	4608      	mov	r0, r1
 8001748:	4611      	mov	r1, r2
 800174a:	2200      	movs	r2, #0
 800174c:	602a      	str	r2, [r5, #0]
 800174e:	461a      	mov	r2, r3
 8001750:	f002 f9c8 	bl	8003ae4 <_write>
 8001754:	1c43      	adds	r3, r0, #1
 8001756:	d102      	bne.n	800175e <_write_r+0x1e>
 8001758:	682b      	ldr	r3, [r5, #0]
 800175a:	b103      	cbz	r3, 800175e <_write_r+0x1e>
 800175c:	6023      	str	r3, [r4, #0]
 800175e:	bd38      	pop	{r3, r4, r5, pc}
 8001760:	20000320 	.word	0x20000320

08001764 <__libc_init_array>:
 8001764:	b570      	push	{r4, r5, r6, lr}
 8001766:	4b0d      	ldr	r3, [pc, #52]	@ (800179c <__libc_init_array+0x38>)
 8001768:	4d0d      	ldr	r5, [pc, #52]	@ (80017a0 <__libc_init_array+0x3c>)
 800176a:	1b5b      	subs	r3, r3, r5
 800176c:	109c      	asrs	r4, r3, #2
 800176e:	2600      	movs	r6, #0
 8001770:	42a6      	cmp	r6, r4
 8001772:	d109      	bne.n	8001788 <__libc_init_array+0x24>
 8001774:	f002 fc96 	bl	80040a4 <_init>
 8001778:	4d0a      	ldr	r5, [pc, #40]	@ (80017a4 <__libc_init_array+0x40>)
 800177a:	4b0b      	ldr	r3, [pc, #44]	@ (80017a8 <__libc_init_array+0x44>)
 800177c:	1b5b      	subs	r3, r3, r5
 800177e:	109c      	asrs	r4, r3, #2
 8001780:	2600      	movs	r6, #0
 8001782:	42a6      	cmp	r6, r4
 8001784:	d105      	bne.n	8001792 <__libc_init_array+0x2e>
 8001786:	bd70      	pop	{r4, r5, r6, pc}
 8001788:	f855 3b04 	ldr.w	r3, [r5], #4
 800178c:	4798      	blx	r3
 800178e:	3601      	adds	r6, #1
 8001790:	e7ee      	b.n	8001770 <__libc_init_array+0xc>
 8001792:	f855 3b04 	ldr.w	r3, [r5], #4
 8001796:	4798      	blx	r3
 8001798:	3601      	adds	r6, #1
 800179a:	e7f2      	b.n	8001782 <__libc_init_array+0x1e>
 800179c:	0800446c 	.word	0x0800446c
 80017a0:	0800446c 	.word	0x0800446c
 80017a4:	0800446c 	.word	0x0800446c
 80017a8:	08004470 	.word	0x08004470

080017ac <__retarget_lock_init_recursive>:
 80017ac:	4770      	bx	lr

080017ae <__retarget_lock_acquire_recursive>:
 80017ae:	4770      	bx	lr

080017b0 <__retarget_lock_release_recursive>:
 80017b0:	4770      	bx	lr

080017b2 <quorem>:
 80017b2:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80017b6:	6903      	ldr	r3, [r0, #16]
 80017b8:	690c      	ldr	r4, [r1, #16]
 80017ba:	42a3      	cmp	r3, r4
 80017bc:	4607      	mov	r7, r0
 80017be:	db7e      	blt.n	80018be <quorem+0x10c>
 80017c0:	3c01      	subs	r4, #1
 80017c2:	f101 0814 	add.w	r8, r1, #20
 80017c6:	00a3      	lsls	r3, r4, #2
 80017c8:	f100 0514 	add.w	r5, r0, #20
 80017cc:	9300      	str	r3, [sp, #0]
 80017ce:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 80017d2:	9301      	str	r3, [sp, #4]
 80017d4:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 80017d8:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 80017dc:	3301      	adds	r3, #1
 80017de:	429a      	cmp	r2, r3
 80017e0:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 80017e4:	fbb2 f6f3 	udiv	r6, r2, r3
 80017e8:	d32e      	bcc.n	8001848 <quorem+0x96>
 80017ea:	f04f 0a00 	mov.w	sl, #0
 80017ee:	46c4      	mov	ip, r8
 80017f0:	46ae      	mov	lr, r5
 80017f2:	46d3      	mov	fp, sl
 80017f4:	f85c 3b04 	ldr.w	r3, [ip], #4
 80017f8:	b298      	uxth	r0, r3
 80017fa:	fb06 a000 	mla	r0, r6, r0, sl
 80017fe:	0c02      	lsrs	r2, r0, #16
 8001800:	0c1b      	lsrs	r3, r3, #16
 8001802:	fb06 2303 	mla	r3, r6, r3, r2
 8001806:	f8de 2000 	ldr.w	r2, [lr]
 800180a:	b280      	uxth	r0, r0
 800180c:	b292      	uxth	r2, r2
 800180e:	1a12      	subs	r2, r2, r0
 8001810:	445a      	add	r2, fp
 8001812:	f8de 0000 	ldr.w	r0, [lr]
 8001816:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 800181a:	b29b      	uxth	r3, r3
 800181c:	ebc3 4322 	rsb	r3, r3, r2, asr #16
 8001820:	eb03 4310 	add.w	r3, r3, r0, lsr #16
 8001824:	b292      	uxth	r2, r2
 8001826:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
 800182a:	45e1      	cmp	r9, ip
 800182c:	f84e 2b04 	str.w	r2, [lr], #4
 8001830:	ea4f 4b23 	mov.w	fp, r3, asr #16
 8001834:	d2de      	bcs.n	80017f4 <quorem+0x42>
 8001836:	9b00      	ldr	r3, [sp, #0]
 8001838:	58eb      	ldr	r3, [r5, r3]
 800183a:	b92b      	cbnz	r3, 8001848 <quorem+0x96>
 800183c:	9b01      	ldr	r3, [sp, #4]
 800183e:	3b04      	subs	r3, #4
 8001840:	429d      	cmp	r5, r3
 8001842:	461a      	mov	r2, r3
 8001844:	d32f      	bcc.n	80018a6 <quorem+0xf4>
 8001846:	613c      	str	r4, [r7, #16]
 8001848:	4638      	mov	r0, r7
 800184a:	f001 f999 	bl	8002b80 <__mcmp>
 800184e:	2800      	cmp	r0, #0
 8001850:	db25      	blt.n	800189e <quorem+0xec>
 8001852:	4629      	mov	r1, r5
 8001854:	2000      	movs	r0, #0
 8001856:	f858 2b04 	ldr.w	r2, [r8], #4
 800185a:	f8d1 c000 	ldr.w	ip, [r1]
 800185e:	fa1f fe82 	uxth.w	lr, r2
 8001862:	fa1f f38c 	uxth.w	r3, ip
 8001866:	eba3 030e 	sub.w	r3, r3, lr
 800186a:	4403      	add	r3, r0
 800186c:	0c12      	lsrs	r2, r2, #16
 800186e:	ebc2 4223 	rsb	r2, r2, r3, asr #16
 8001872:	eb02 421c 	add.w	r2, r2, ip, lsr #16
 8001876:	b29b      	uxth	r3, r3
 8001878:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800187c:	45c1      	cmp	r9, r8
 800187e:	f841 3b04 	str.w	r3, [r1], #4
 8001882:	ea4f 4022 	mov.w	r0, r2, asr #16
 8001886:	d2e6      	bcs.n	8001856 <quorem+0xa4>
 8001888:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 800188c:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8001890:	b922      	cbnz	r2, 800189c <quorem+0xea>
 8001892:	3b04      	subs	r3, #4
 8001894:	429d      	cmp	r5, r3
 8001896:	461a      	mov	r2, r3
 8001898:	d30b      	bcc.n	80018b2 <quorem+0x100>
 800189a:	613c      	str	r4, [r7, #16]
 800189c:	3601      	adds	r6, #1
 800189e:	4630      	mov	r0, r6
 80018a0:	b003      	add	sp, #12
 80018a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80018a6:	6812      	ldr	r2, [r2, #0]
 80018a8:	3b04      	subs	r3, #4
 80018aa:	2a00      	cmp	r2, #0
 80018ac:	d1cb      	bne.n	8001846 <quorem+0x94>
 80018ae:	3c01      	subs	r4, #1
 80018b0:	e7c6      	b.n	8001840 <quorem+0x8e>
 80018b2:	6812      	ldr	r2, [r2, #0]
 80018b4:	3b04      	subs	r3, #4
 80018b6:	2a00      	cmp	r2, #0
 80018b8:	d1ef      	bne.n	800189a <quorem+0xe8>
 80018ba:	3c01      	subs	r4, #1
 80018bc:	e7ea      	b.n	8001894 <quorem+0xe2>
 80018be:	2000      	movs	r0, #0
 80018c0:	e7ee      	b.n	80018a0 <quorem+0xee>
 80018c2:	0000      	movs	r0, r0
 80018c4:	0000      	movs	r0, r0
	...

080018c8 <_dtoa_r>:
 80018c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80018cc:	b099      	sub	sp, #100	@ 0x64
 80018ce:	ed8d 0b0e 	vstr	d0, [sp, #56]	@ 0x38
 80018d2:	920c      	str	r2, [sp, #48]	@ 0x30
 80018d4:	69c2      	ldr	r2, [r0, #28]
 80018d6:	9c22      	ldr	r4, [sp, #136]	@ 0x88
 80018d8:	910a      	str	r1, [sp, #40]	@ 0x28
 80018da:	ec57 6b10 	vmov	r6, r7, d0
 80018de:	4681      	mov	r9, r0
 80018e0:	9313      	str	r3, [sp, #76]	@ 0x4c
 80018e2:	b982      	cbnz	r2, 8001906 <_dtoa_r+0x3e>
 80018e4:	2010      	movs	r0, #16
 80018e6:	f000 fe19 	bl	800251c <malloc>
 80018ea:	4602      	mov	r2, r0
 80018ec:	f8c9 001c 	str.w	r0, [r9, #28]
 80018f0:	b920      	cbnz	r0, 80018fc <_dtoa_r+0x34>
 80018f2:	4bad      	ldr	r3, [pc, #692]	@ (8001ba8 <_dtoa_r+0x2e0>)
 80018f4:	21ef      	movs	r1, #239	@ 0xef
 80018f6:	48ad      	ldr	r0, [pc, #692]	@ (8001bac <_dtoa_r+0x2e4>)
 80018f8:	f001 fb16 	bl	8002f28 <__assert_func>
 80018fc:	2300      	movs	r3, #0
 80018fe:	e9c0 3301 	strd	r3, r3, [r0, #4]
 8001902:	6003      	str	r3, [r0, #0]
 8001904:	60c3      	str	r3, [r0, #12]
 8001906:	6811      	ldr	r1, [r2, #0]
 8001908:	b159      	cbz	r1, 8001922 <_dtoa_r+0x5a>
 800190a:	6852      	ldr	r2, [r2, #4]
 800190c:	604a      	str	r2, [r1, #4]
 800190e:	2301      	movs	r3, #1
 8001910:	4093      	lsls	r3, r2
 8001912:	608b      	str	r3, [r1, #8]
 8001914:	4648      	mov	r0, r9
 8001916:	f000 fef5 	bl	8002704 <_Bfree>
 800191a:	f8d9 301c 	ldr.w	r3, [r9, #28]
 800191e:	2200      	movs	r2, #0
 8001920:	601a      	str	r2, [r3, #0]
 8001922:	f1b7 0800 	subs.w	r8, r7, #0
 8001926:	bfb5      	itete	lt
 8001928:	2301      	movlt	r3, #1
 800192a:	2300      	movge	r3, #0
 800192c:	6023      	strlt	r3, [r4, #0]
 800192e:	6023      	strge	r3, [r4, #0]
 8001930:	4b9f      	ldr	r3, [pc, #636]	@ (8001bb0 <_dtoa_r+0x2e8>)
 8001932:	bfbc      	itt	lt
 8001934:	f028 4800 	biclt.w	r8, r8, #2147483648	@ 0x80000000
 8001938:	f8cd 803c 	strlt.w	r8, [sp, #60]	@ 0x3c
 800193c:	ea33 0308 	bics.w	r3, r3, r8
 8001940:	d11a      	bne.n	8001978 <_dtoa_r+0xb0>
 8001942:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8001944:	f3c8 0813 	ubfx	r8, r8, #0, #20
 8001948:	f242 730f 	movw	r3, #9999	@ 0x270f
 800194c:	ea58 0806 	orrs.w	r8, r8, r6
 8001950:	6013      	str	r3, [r2, #0]
 8001952:	f000 856c 	beq.w	800242e <_dtoa_r+0xb66>
 8001956:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 8001958:	b953      	cbnz	r3, 8001970 <_dtoa_r+0xa8>
 800195a:	4b96      	ldr	r3, [pc, #600]	@ (8001bb4 <_dtoa_r+0x2ec>)
 800195c:	e021      	b.n	80019a2 <_dtoa_r+0xda>
 800195e:	4b96      	ldr	r3, [pc, #600]	@ (8001bb8 <_dtoa_r+0x2f0>)
 8001960:	9300      	str	r3, [sp, #0]
 8001962:	3308      	adds	r3, #8
 8001964:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 8001966:	6013      	str	r3, [r2, #0]
 8001968:	9800      	ldr	r0, [sp, #0]
 800196a:	b019      	add	sp, #100	@ 0x64
 800196c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001970:	4b90      	ldr	r3, [pc, #576]	@ (8001bb4 <_dtoa_r+0x2ec>)
 8001972:	9300      	str	r3, [sp, #0]
 8001974:	3303      	adds	r3, #3
 8001976:	e7f5      	b.n	8001964 <_dtoa_r+0x9c>
 8001978:	ed9d 7b0e 	vldr	d7, [sp, #56]	@ 0x38
 800197c:	2200      	movs	r2, #0
 800197e:	ec51 0b17 	vmov	r0, r1, d7
 8001982:	2300      	movs	r3, #0
 8001984:	ed8d 7b06 	vstr	d7, [sp, #24]
 8001988:	f7ff f886 	bl	8000a98 <__aeabi_dcmpeq>
 800198c:	4682      	mov	sl, r0
 800198e:	b150      	cbz	r0, 80019a6 <_dtoa_r+0xde>
 8001990:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8001992:	2301      	movs	r3, #1
 8001994:	6013      	str	r3, [r2, #0]
 8001996:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 8001998:	b113      	cbz	r3, 80019a0 <_dtoa_r+0xd8>
 800199a:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 800199c:	4b87      	ldr	r3, [pc, #540]	@ (8001bbc <_dtoa_r+0x2f4>)
 800199e:	6013      	str	r3, [r2, #0]
 80019a0:	4b87      	ldr	r3, [pc, #540]	@ (8001bc0 <_dtoa_r+0x2f8>)
 80019a2:	9300      	str	r3, [sp, #0]
 80019a4:	e7e0      	b.n	8001968 <_dtoa_r+0xa0>
 80019a6:	ed9d 0b06 	vldr	d0, [sp, #24]
 80019aa:	aa16      	add	r2, sp, #88	@ 0x58
 80019ac:	a917      	add	r1, sp, #92	@ 0x5c
 80019ae:	4648      	mov	r0, r9
 80019b0:	f001 f99a 	bl	8002ce8 <__d2b>
 80019b4:	ea5f 5418 	movs.w	r4, r8, lsr #20
 80019b8:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 80019ba:	9001      	str	r0, [sp, #4]
 80019bc:	d079      	beq.n	8001ab2 <_dtoa_r+0x1ea>
 80019be:	9b07      	ldr	r3, [sp, #28]
 80019c0:	f8cd a050 	str.w	sl, [sp, #80]	@ 0x50
 80019c4:	f3c3 0313 	ubfx	r3, r3, #0, #20
 80019c8:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 80019cc:	f043 537f 	orr.w	r3, r3, #1069547520	@ 0x3fc00000
 80019d0:	f443 1340 	orr.w	r3, r3, #3145728	@ 0x300000
 80019d4:	f2a4 34ff 	subw	r4, r4, #1023	@ 0x3ff
 80019d8:	4619      	mov	r1, r3
 80019da:	2200      	movs	r2, #0
 80019dc:	4b79      	ldr	r3, [pc, #484]	@ (8001bc4 <_dtoa_r+0x2fc>)
 80019de:	f7fe fc3b 	bl	8000258 <__aeabi_dsub>
 80019e2:	a36b      	add	r3, pc, #428	@ (adr r3, 8001b90 <_dtoa_r+0x2c8>)
 80019e4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80019e8:	f7fe fdee 	bl	80005c8 <__aeabi_dmul>
 80019ec:	a36a      	add	r3, pc, #424	@ (adr r3, 8001b98 <_dtoa_r+0x2d0>)
 80019ee:	e9d3 2300 	ldrd	r2, r3, [r3]
 80019f2:	f7fe fc33 	bl	800025c <__adddf3>
 80019f6:	4606      	mov	r6, r0
 80019f8:	4620      	mov	r0, r4
 80019fa:	460f      	mov	r7, r1
 80019fc:	f7fe fd7a 	bl	80004f4 <__aeabi_i2d>
 8001a00:	a367      	add	r3, pc, #412	@ (adr r3, 8001ba0 <_dtoa_r+0x2d8>)
 8001a02:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001a06:	f7fe fddf 	bl	80005c8 <__aeabi_dmul>
 8001a0a:	4602      	mov	r2, r0
 8001a0c:	460b      	mov	r3, r1
 8001a0e:	4630      	mov	r0, r6
 8001a10:	4639      	mov	r1, r7
 8001a12:	f7fe fc23 	bl	800025c <__adddf3>
 8001a16:	4606      	mov	r6, r0
 8001a18:	460f      	mov	r7, r1
 8001a1a:	f7ff f885 	bl	8000b28 <__aeabi_d2iz>
 8001a1e:	2200      	movs	r2, #0
 8001a20:	4680      	mov	r8, r0
 8001a22:	2300      	movs	r3, #0
 8001a24:	4630      	mov	r0, r6
 8001a26:	4639      	mov	r1, r7
 8001a28:	f7ff f840 	bl	8000aac <__aeabi_dcmplt>
 8001a2c:	b148      	cbz	r0, 8001a42 <_dtoa_r+0x17a>
 8001a2e:	4640      	mov	r0, r8
 8001a30:	f7fe fd60 	bl	80004f4 <__aeabi_i2d>
 8001a34:	4632      	mov	r2, r6
 8001a36:	463b      	mov	r3, r7
 8001a38:	f7ff f82e 	bl	8000a98 <__aeabi_dcmpeq>
 8001a3c:	b908      	cbnz	r0, 8001a42 <_dtoa_r+0x17a>
 8001a3e:	f108 38ff 	add.w	r8, r8, #4294967295	@ 0xffffffff
 8001a42:	f1b8 0f16 	cmp.w	r8, #22
 8001a46:	d851      	bhi.n	8001aec <_dtoa_r+0x224>
 8001a48:	4b5f      	ldr	r3, [pc, #380]	@ (8001bc8 <_dtoa_r+0x300>)
 8001a4a:	eb03 03c8 	add.w	r3, r3, r8, lsl #3
 8001a4e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001a52:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8001a56:	f7ff f829 	bl	8000aac <__aeabi_dcmplt>
 8001a5a:	2800      	cmp	r0, #0
 8001a5c:	d048      	beq.n	8001af0 <_dtoa_r+0x228>
 8001a5e:	f108 38ff 	add.w	r8, r8, #4294967295	@ 0xffffffff
 8001a62:	2300      	movs	r3, #0
 8001a64:	9312      	str	r3, [sp, #72]	@ 0x48
 8001a66:	1b2d      	subs	r5, r5, r4
 8001a68:	1e6b      	subs	r3, r5, #1
 8001a6a:	9308      	str	r3, [sp, #32]
 8001a6c:	bf43      	ittte	mi
 8001a6e:	2300      	movmi	r3, #0
 8001a70:	f1c5 0701 	rsbmi	r7, r5, #1
 8001a74:	9308      	strmi	r3, [sp, #32]
 8001a76:	2700      	movpl	r7, #0
 8001a78:	f1b8 0f00 	cmp.w	r8, #0
 8001a7c:	db3a      	blt.n	8001af4 <_dtoa_r+0x22c>
 8001a7e:	9b08      	ldr	r3, [sp, #32]
 8001a80:	f8cd 8034 	str.w	r8, [sp, #52]	@ 0x34
 8001a84:	4443      	add	r3, r8
 8001a86:	9308      	str	r3, [sp, #32]
 8001a88:	2300      	movs	r3, #0
 8001a8a:	9309      	str	r3, [sp, #36]	@ 0x24
 8001a8c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8001a8e:	2b09      	cmp	r3, #9
 8001a90:	d864      	bhi.n	8001b5c <_dtoa_r+0x294>
 8001a92:	2b05      	cmp	r3, #5
 8001a94:	bfc4      	itt	gt
 8001a96:	3b04      	subgt	r3, #4
 8001a98:	930a      	strgt	r3, [sp, #40]	@ 0x28
 8001a9a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8001a9c:	f1a3 0302 	sub.w	r3, r3, #2
 8001aa0:	bfcc      	ite	gt
 8001aa2:	2400      	movgt	r4, #0
 8001aa4:	2401      	movle	r4, #1
 8001aa6:	2b03      	cmp	r3, #3
 8001aa8:	d864      	bhi.n	8001b74 <_dtoa_r+0x2ac>
 8001aaa:	e8df f003 	tbb	[pc, r3]
 8001aae:	5553      	.short	0x5553
 8001ab0:	2b36      	.short	0x2b36
 8001ab2:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 8001ab4:	442c      	add	r4, r5
 8001ab6:	f204 4332 	addw	r3, r4, #1074	@ 0x432
 8001aba:	2b20      	cmp	r3, #32
 8001abc:	bfc1      	itttt	gt
 8001abe:	f1c3 0340 	rsbgt	r3, r3, #64	@ 0x40
 8001ac2:	fa08 f803 	lslgt.w	r8, r8, r3
 8001ac6:	f204 4312 	addwgt	r3, r4, #1042	@ 0x412
 8001aca:	fa26 f303 	lsrgt.w	r3, r6, r3
 8001ace:	bfd6      	itet	le
 8001ad0:	f1c3 0320 	rsble	r3, r3, #32
 8001ad4:	ea48 0003 	orrgt.w	r0, r8, r3
 8001ad8:	fa06 f003 	lslle.w	r0, r6, r3
 8001adc:	f7fe fcfa 	bl	80004d4 <__aeabi_ui2d>
 8001ae0:	2201      	movs	r2, #1
 8001ae2:	f1a1 73f8 	sub.w	r3, r1, #32505856	@ 0x1f00000
 8001ae6:	3c01      	subs	r4, #1
 8001ae8:	9214      	str	r2, [sp, #80]	@ 0x50
 8001aea:	e775      	b.n	80019d8 <_dtoa_r+0x110>
 8001aec:	2301      	movs	r3, #1
 8001aee:	e7b9      	b.n	8001a64 <_dtoa_r+0x19c>
 8001af0:	9012      	str	r0, [sp, #72]	@ 0x48
 8001af2:	e7b8      	b.n	8001a66 <_dtoa_r+0x19e>
 8001af4:	f1c8 0300 	rsb	r3, r8, #0
 8001af8:	9309      	str	r3, [sp, #36]	@ 0x24
 8001afa:	2300      	movs	r3, #0
 8001afc:	eba7 0708 	sub.w	r7, r7, r8
 8001b00:	930d      	str	r3, [sp, #52]	@ 0x34
 8001b02:	e7c3      	b.n	8001a8c <_dtoa_r+0x1c4>
 8001b04:	2301      	movs	r3, #1
 8001b06:	930b      	str	r3, [sp, #44]	@ 0x2c
 8001b08:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8001b0a:	4443      	add	r3, r8
 8001b0c:	9305      	str	r3, [sp, #20]
 8001b0e:	3301      	adds	r3, #1
 8001b10:	2b01      	cmp	r3, #1
 8001b12:	9304      	str	r3, [sp, #16]
 8001b14:	bfb8      	it	lt
 8001b16:	2301      	movlt	r3, #1
 8001b18:	e006      	b.n	8001b28 <_dtoa_r+0x260>
 8001b1a:	2301      	movs	r3, #1
 8001b1c:	930b      	str	r3, [sp, #44]	@ 0x2c
 8001b1e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8001b20:	2b00      	cmp	r3, #0
 8001b22:	dd2a      	ble.n	8001b7a <_dtoa_r+0x2b2>
 8001b24:	e9cd 3304 	strd	r3, r3, [sp, #16]
 8001b28:	f8d9 001c 	ldr.w	r0, [r9, #28]
 8001b2c:	2100      	movs	r1, #0
 8001b2e:	2204      	movs	r2, #4
 8001b30:	f102 0514 	add.w	r5, r2, #20
 8001b34:	429d      	cmp	r5, r3
 8001b36:	f101 0601 	add.w	r6, r1, #1
 8001b3a:	d923      	bls.n	8001b84 <_dtoa_r+0x2bc>
 8001b3c:	6041      	str	r1, [r0, #4]
 8001b3e:	4648      	mov	r0, r9
 8001b40:	f000 fda2 	bl	8002688 <_Balloc>
 8001b44:	9000      	str	r0, [sp, #0]
 8001b46:	2800      	cmp	r0, #0
 8001b48:	d142      	bne.n	8001bd0 <_dtoa_r+0x308>
 8001b4a:	4b20      	ldr	r3, [pc, #128]	@ (8001bcc <_dtoa_r+0x304>)
 8001b4c:	4602      	mov	r2, r0
 8001b4e:	f240 11af 	movw	r1, #431	@ 0x1af
 8001b52:	e6d0      	b.n	80018f6 <_dtoa_r+0x2e>
 8001b54:	2300      	movs	r3, #0
 8001b56:	e7e1      	b.n	8001b1c <_dtoa_r+0x254>
 8001b58:	2300      	movs	r3, #0
 8001b5a:	e7d4      	b.n	8001b06 <_dtoa_r+0x23e>
 8001b5c:	2401      	movs	r4, #1
 8001b5e:	2300      	movs	r3, #0
 8001b60:	e9cd 340a 	strd	r3, r4, [sp, #40]	@ 0x28
 8001b64:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 8001b68:	e9cd 3304 	strd	r3, r3, [sp, #16]
 8001b6c:	2200      	movs	r2, #0
 8001b6e:	2312      	movs	r3, #18
 8001b70:	920c      	str	r2, [sp, #48]	@ 0x30
 8001b72:	e7d9      	b.n	8001b28 <_dtoa_r+0x260>
 8001b74:	2301      	movs	r3, #1
 8001b76:	930b      	str	r3, [sp, #44]	@ 0x2c
 8001b78:	e7f4      	b.n	8001b64 <_dtoa_r+0x29c>
 8001b7a:	2301      	movs	r3, #1
 8001b7c:	e9cd 3304 	strd	r3, r3, [sp, #16]
 8001b80:	461a      	mov	r2, r3
 8001b82:	e7f5      	b.n	8001b70 <_dtoa_r+0x2a8>
 8001b84:	0052      	lsls	r2, r2, #1
 8001b86:	4631      	mov	r1, r6
 8001b88:	e7d2      	b.n	8001b30 <_dtoa_r+0x268>
 8001b8a:	bf00      	nop
 8001b8c:	f3af 8000 	nop.w
 8001b90:	636f4361 	.word	0x636f4361
 8001b94:	3fd287a7 	.word	0x3fd287a7
 8001b98:	8b60c8b3 	.word	0x8b60c8b3
 8001b9c:	3fc68a28 	.word	0x3fc68a28
 8001ba0:	509f79fb 	.word	0x509f79fb
 8001ba4:	3fd34413 	.word	0x3fd34413
 8001ba8:	0800412d 	.word	0x0800412d
 8001bac:	08004144 	.word	0x08004144
 8001bb0:	7ff00000 	.word	0x7ff00000
 8001bb4:	08004129 	.word	0x08004129
 8001bb8:	08004120 	.word	0x08004120
 8001bbc:	080040fd 	.word	0x080040fd
 8001bc0:	080040fc 	.word	0x080040fc
 8001bc4:	3ff80000 	.word	0x3ff80000
 8001bc8:	08004298 	.word	0x08004298
 8001bcc:	0800419d 	.word	0x0800419d
 8001bd0:	f8d9 301c 	ldr.w	r3, [r9, #28]
 8001bd4:	9a00      	ldr	r2, [sp, #0]
 8001bd6:	601a      	str	r2, [r3, #0]
 8001bd8:	9b04      	ldr	r3, [sp, #16]
 8001bda:	2b0e      	cmp	r3, #14
 8001bdc:	f200 80a1 	bhi.w	8001d22 <_dtoa_r+0x45a>
 8001be0:	2c00      	cmp	r4, #0
 8001be2:	f000 809e 	beq.w	8001d22 <_dtoa_r+0x45a>
 8001be6:	f1b8 0f00 	cmp.w	r8, #0
 8001bea:	dd36      	ble.n	8001c5a <_dtoa_r+0x392>
 8001bec:	4b9e      	ldr	r3, [pc, #632]	@ (8001e68 <_dtoa_r+0x5a0>)
 8001bee:	f008 020f 	and.w	r2, r8, #15
 8001bf2:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8001bf6:	f418 7f80 	tst.w	r8, #256	@ 0x100
 8001bfa:	e9d3 ab00 	ldrd	sl, fp, [r3]
 8001bfe:	ea4f 1528 	mov.w	r5, r8, asr #4
 8001c02:	d016      	beq.n	8001c32 <_dtoa_r+0x36a>
 8001c04:	4b99      	ldr	r3, [pc, #612]	@ (8001e6c <_dtoa_r+0x5a4>)
 8001c06:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8001c0a:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 8001c0e:	f7fe fe05 	bl	800081c <__aeabi_ddiv>
 8001c12:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8001c16:	f005 050f 	and.w	r5, r5, #15
 8001c1a:	2403      	movs	r4, #3
 8001c1c:	4e93      	ldr	r6, [pc, #588]	@ (8001e6c <_dtoa_r+0x5a4>)
 8001c1e:	b975      	cbnz	r5, 8001c3e <_dtoa_r+0x376>
 8001c20:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8001c24:	4652      	mov	r2, sl
 8001c26:	465b      	mov	r3, fp
 8001c28:	f7fe fdf8 	bl	800081c <__aeabi_ddiv>
 8001c2c:	4682      	mov	sl, r0
 8001c2e:	468b      	mov	fp, r1
 8001c30:	e02d      	b.n	8001c8e <_dtoa_r+0x3c6>
 8001c32:	ed9d 7b06 	vldr	d7, [sp, #24]
 8001c36:	2402      	movs	r4, #2
 8001c38:	ed8d 7b02 	vstr	d7, [sp, #8]
 8001c3c:	e7ee      	b.n	8001c1c <_dtoa_r+0x354>
 8001c3e:	07e9      	lsls	r1, r5, #31
 8001c40:	d508      	bpl.n	8001c54 <_dtoa_r+0x38c>
 8001c42:	4650      	mov	r0, sl
 8001c44:	4659      	mov	r1, fp
 8001c46:	e9d6 2300 	ldrd	r2, r3, [r6]
 8001c4a:	f7fe fcbd 	bl	80005c8 <__aeabi_dmul>
 8001c4e:	3401      	adds	r4, #1
 8001c50:	4682      	mov	sl, r0
 8001c52:	468b      	mov	fp, r1
 8001c54:	106d      	asrs	r5, r5, #1
 8001c56:	3608      	adds	r6, #8
 8001c58:	e7e1      	b.n	8001c1e <_dtoa_r+0x356>
 8001c5a:	f000 80ad 	beq.w	8001db8 <_dtoa_r+0x4f0>
 8001c5e:	f1c8 0500 	rsb	r5, r8, #0
 8001c62:	4b81      	ldr	r3, [pc, #516]	@ (8001e68 <_dtoa_r+0x5a0>)
 8001c64:	4e81      	ldr	r6, [pc, #516]	@ (8001e6c <_dtoa_r+0x5a4>)
 8001c66:	f005 020f 	and.w	r2, r5, #15
 8001c6a:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8001c6e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001c72:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8001c76:	f7fe fca7 	bl	80005c8 <__aeabi_dmul>
 8001c7a:	112d      	asrs	r5, r5, #4
 8001c7c:	4682      	mov	sl, r0
 8001c7e:	468b      	mov	fp, r1
 8001c80:	2300      	movs	r3, #0
 8001c82:	2402      	movs	r4, #2
 8001c84:	2d00      	cmp	r5, #0
 8001c86:	f040 808c 	bne.w	8001da2 <_dtoa_r+0x4da>
 8001c8a:	2b00      	cmp	r3, #0
 8001c8c:	d1ce      	bne.n	8001c2c <_dtoa_r+0x364>
 8001c8e:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8001c90:	2b00      	cmp	r3, #0
 8001c92:	f000 8095 	beq.w	8001dc0 <_dtoa_r+0x4f8>
 8001c96:	4b76      	ldr	r3, [pc, #472]	@ (8001e70 <_dtoa_r+0x5a8>)
 8001c98:	2200      	movs	r2, #0
 8001c9a:	4650      	mov	r0, sl
 8001c9c:	4659      	mov	r1, fp
 8001c9e:	f7fe ff05 	bl	8000aac <__aeabi_dcmplt>
 8001ca2:	2800      	cmp	r0, #0
 8001ca4:	f000 808c 	beq.w	8001dc0 <_dtoa_r+0x4f8>
 8001ca8:	9b04      	ldr	r3, [sp, #16]
 8001caa:	2b00      	cmp	r3, #0
 8001cac:	f000 8088 	beq.w	8001dc0 <_dtoa_r+0x4f8>
 8001cb0:	9b05      	ldr	r3, [sp, #20]
 8001cb2:	2b00      	cmp	r3, #0
 8001cb4:	dd35      	ble.n	8001d22 <_dtoa_r+0x45a>
 8001cb6:	f108 33ff 	add.w	r3, r8, #4294967295	@ 0xffffffff
 8001cba:	9302      	str	r3, [sp, #8]
 8001cbc:	4650      	mov	r0, sl
 8001cbe:	4659      	mov	r1, fp
 8001cc0:	4b6c      	ldr	r3, [pc, #432]	@ (8001e74 <_dtoa_r+0x5ac>)
 8001cc2:	2200      	movs	r2, #0
 8001cc4:	f7fe fc80 	bl	80005c8 <__aeabi_dmul>
 8001cc8:	9e05      	ldr	r6, [sp, #20]
 8001cca:	4682      	mov	sl, r0
 8001ccc:	468b      	mov	fp, r1
 8001cce:	3401      	adds	r4, #1
 8001cd0:	4620      	mov	r0, r4
 8001cd2:	f7fe fc0f 	bl	80004f4 <__aeabi_i2d>
 8001cd6:	4652      	mov	r2, sl
 8001cd8:	465b      	mov	r3, fp
 8001cda:	f7fe fc75 	bl	80005c8 <__aeabi_dmul>
 8001cde:	4b66      	ldr	r3, [pc, #408]	@ (8001e78 <_dtoa_r+0x5b0>)
 8001ce0:	2200      	movs	r2, #0
 8001ce2:	f7fe fabb 	bl	800025c <__adddf3>
 8001ce6:	4604      	mov	r4, r0
 8001ce8:	f1a1 7550 	sub.w	r5, r1, #54525952	@ 0x3400000
 8001cec:	e9cd 4510 	strd	r4, r5, [sp, #64]	@ 0x40
 8001cf0:	2e00      	cmp	r6, #0
 8001cf2:	d169      	bne.n	8001dc8 <_dtoa_r+0x500>
 8001cf4:	4b61      	ldr	r3, [pc, #388]	@ (8001e7c <_dtoa_r+0x5b4>)
 8001cf6:	2200      	movs	r2, #0
 8001cf8:	4650      	mov	r0, sl
 8001cfa:	4659      	mov	r1, fp
 8001cfc:	f7fe faac 	bl	8000258 <__aeabi_dsub>
 8001d00:	4622      	mov	r2, r4
 8001d02:	462b      	mov	r3, r5
 8001d04:	4682      	mov	sl, r0
 8001d06:	468b      	mov	fp, r1
 8001d08:	f7fe feee 	bl	8000ae8 <__aeabi_dcmpgt>
 8001d0c:	2800      	cmp	r0, #0
 8001d0e:	f040 8294 	bne.w	800223a <_dtoa_r+0x972>
 8001d12:	4622      	mov	r2, r4
 8001d14:	f105 4300 	add.w	r3, r5, #2147483648	@ 0x80000000
 8001d18:	4650      	mov	r0, sl
 8001d1a:	4659      	mov	r1, fp
 8001d1c:	f7fe fec6 	bl	8000aac <__aeabi_dcmplt>
 8001d20:	bb20      	cbnz	r0, 8001d6c <_dtoa_r+0x4a4>
 8001d22:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8001d24:	2b00      	cmp	r3, #0
 8001d26:	f2c0 8160 	blt.w	8001fea <_dtoa_r+0x722>
 8001d2a:	f1b8 0f0e 	cmp.w	r8, #14
 8001d2e:	f300 815c 	bgt.w	8001fea <_dtoa_r+0x722>
 8001d32:	4b4d      	ldr	r3, [pc, #308]	@ (8001e68 <_dtoa_r+0x5a0>)
 8001d34:	eb03 03c8 	add.w	r3, r3, r8, lsl #3
 8001d38:	e9d3 ab00 	ldrd	sl, fp, [r3]
 8001d3c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8001d3e:	2b00      	cmp	r3, #0
 8001d40:	f280 80ee 	bge.w	8001f20 <_dtoa_r+0x658>
 8001d44:	9b04      	ldr	r3, [sp, #16]
 8001d46:	2b00      	cmp	r3, #0
 8001d48:	f300 80ea 	bgt.w	8001f20 <_dtoa_r+0x658>
 8001d4c:	d10e      	bne.n	8001d6c <_dtoa_r+0x4a4>
 8001d4e:	4b4b      	ldr	r3, [pc, #300]	@ (8001e7c <_dtoa_r+0x5b4>)
 8001d50:	2200      	movs	r2, #0
 8001d52:	4650      	mov	r0, sl
 8001d54:	4659      	mov	r1, fp
 8001d56:	f7fe fc37 	bl	80005c8 <__aeabi_dmul>
 8001d5a:	4602      	mov	r2, r0
 8001d5c:	460b      	mov	r3, r1
 8001d5e:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8001d62:	f7fe fead 	bl	8000ac0 <__aeabi_dcmple>
 8001d66:	2800      	cmp	r0, #0
 8001d68:	f000 826a 	beq.w	8002240 <_dtoa_r+0x978>
 8001d6c:	2500      	movs	r5, #0
 8001d6e:	462c      	mov	r4, r5
 8001d70:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8001d72:	9e00      	ldr	r6, [sp, #0]
 8001d74:	43db      	mvns	r3, r3
 8001d76:	9302      	str	r3, [sp, #8]
 8001d78:	4627      	mov	r7, r4
 8001d7a:	2400      	movs	r4, #0
 8001d7c:	4629      	mov	r1, r5
 8001d7e:	4648      	mov	r0, r9
 8001d80:	f000 fcc0 	bl	8002704 <_Bfree>
 8001d84:	2f00      	cmp	r7, #0
 8001d86:	f000 80c1 	beq.w	8001f0c <_dtoa_r+0x644>
 8001d8a:	b12c      	cbz	r4, 8001d98 <_dtoa_r+0x4d0>
 8001d8c:	42bc      	cmp	r4, r7
 8001d8e:	d003      	beq.n	8001d98 <_dtoa_r+0x4d0>
 8001d90:	4621      	mov	r1, r4
 8001d92:	4648      	mov	r0, r9
 8001d94:	f000 fcb6 	bl	8002704 <_Bfree>
 8001d98:	4639      	mov	r1, r7
 8001d9a:	4648      	mov	r0, r9
 8001d9c:	f000 fcb2 	bl	8002704 <_Bfree>
 8001da0:	e0b4      	b.n	8001f0c <_dtoa_r+0x644>
 8001da2:	07ea      	lsls	r2, r5, #31
 8001da4:	d505      	bpl.n	8001db2 <_dtoa_r+0x4ea>
 8001da6:	e9d6 2300 	ldrd	r2, r3, [r6]
 8001daa:	f7fe fc0d 	bl	80005c8 <__aeabi_dmul>
 8001dae:	3401      	adds	r4, #1
 8001db0:	2301      	movs	r3, #1
 8001db2:	106d      	asrs	r5, r5, #1
 8001db4:	3608      	adds	r6, #8
 8001db6:	e765      	b.n	8001c84 <_dtoa_r+0x3bc>
 8001db8:	e9dd ab06 	ldrd	sl, fp, [sp, #24]
 8001dbc:	2402      	movs	r4, #2
 8001dbe:	e766      	b.n	8001c8e <_dtoa_r+0x3c6>
 8001dc0:	9e04      	ldr	r6, [sp, #16]
 8001dc2:	f8cd 8008 	str.w	r8, [sp, #8]
 8001dc6:	e783      	b.n	8001cd0 <_dtoa_r+0x408>
 8001dc8:	4b27      	ldr	r3, [pc, #156]	@ (8001e68 <_dtoa_r+0x5a0>)
 8001dca:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
 8001dce:	e953 0102 	ldrd	r0, r1, [r3, #-8]
 8001dd2:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8001dd4:	2b00      	cmp	r3, #0
 8001dd6:	d055      	beq.n	8001e84 <_dtoa_r+0x5bc>
 8001dd8:	4602      	mov	r2, r0
 8001dda:	460b      	mov	r3, r1
 8001ddc:	2000      	movs	r0, #0
 8001dde:	4928      	ldr	r1, [pc, #160]	@ (8001e80 <_dtoa_r+0x5b8>)
 8001de0:	f7fe fd1c 	bl	800081c <__aeabi_ddiv>
 8001de4:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 8001de8:	f7fe fa36 	bl	8000258 <__aeabi_dsub>
 8001dec:	9b00      	ldr	r3, [sp, #0]
 8001dee:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 8001df2:	199d      	adds	r5, r3, r6
 8001df4:	461e      	mov	r6, r3
 8001df6:	4659      	mov	r1, fp
 8001df8:	4650      	mov	r0, sl
 8001dfa:	f7fe fe95 	bl	8000b28 <__aeabi_d2iz>
 8001dfe:	4604      	mov	r4, r0
 8001e00:	f7fe fb78 	bl	80004f4 <__aeabi_i2d>
 8001e04:	4602      	mov	r2, r0
 8001e06:	460b      	mov	r3, r1
 8001e08:	4650      	mov	r0, sl
 8001e0a:	4659      	mov	r1, fp
 8001e0c:	f7fe fa24 	bl	8000258 <__aeabi_dsub>
 8001e10:	3430      	adds	r4, #48	@ 0x30
 8001e12:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 8001e16:	f806 4b01 	strb.w	r4, [r6], #1
 8001e1a:	4682      	mov	sl, r0
 8001e1c:	468b      	mov	fp, r1
 8001e1e:	f7fe fe45 	bl	8000aac <__aeabi_dcmplt>
 8001e22:	2800      	cmp	r0, #0
 8001e24:	d172      	bne.n	8001f0c <_dtoa_r+0x644>
 8001e26:	4652      	mov	r2, sl
 8001e28:	465b      	mov	r3, fp
 8001e2a:	4911      	ldr	r1, [pc, #68]	@ (8001e70 <_dtoa_r+0x5a8>)
 8001e2c:	2000      	movs	r0, #0
 8001e2e:	f7fe fa13 	bl	8000258 <__aeabi_dsub>
 8001e32:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 8001e36:	f7fe fe39 	bl	8000aac <__aeabi_dcmplt>
 8001e3a:	2800      	cmp	r0, #0
 8001e3c:	f040 80b6 	bne.w	8001fac <_dtoa_r+0x6e4>
 8001e40:	42ae      	cmp	r6, r5
 8001e42:	f43f af6e 	beq.w	8001d22 <_dtoa_r+0x45a>
 8001e46:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 8001e4a:	4b0a      	ldr	r3, [pc, #40]	@ (8001e74 <_dtoa_r+0x5ac>)
 8001e4c:	2200      	movs	r2, #0
 8001e4e:	f7fe fbbb 	bl	80005c8 <__aeabi_dmul>
 8001e52:	4b08      	ldr	r3, [pc, #32]	@ (8001e74 <_dtoa_r+0x5ac>)
 8001e54:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 8001e58:	2200      	movs	r2, #0
 8001e5a:	4650      	mov	r0, sl
 8001e5c:	4659      	mov	r1, fp
 8001e5e:	f7fe fbb3 	bl	80005c8 <__aeabi_dmul>
 8001e62:	4682      	mov	sl, r0
 8001e64:	468b      	mov	fp, r1
 8001e66:	e7c6      	b.n	8001df6 <_dtoa_r+0x52e>
 8001e68:	08004298 	.word	0x08004298
 8001e6c:	08004270 	.word	0x08004270
 8001e70:	3ff00000 	.word	0x3ff00000
 8001e74:	40240000 	.word	0x40240000
 8001e78:	401c0000 	.word	0x401c0000
 8001e7c:	40140000 	.word	0x40140000
 8001e80:	3fe00000 	.word	0x3fe00000
 8001e84:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 8001e88:	f7fe fb9e 	bl	80005c8 <__aeabi_dmul>
 8001e8c:	9b00      	ldr	r3, [sp, #0]
 8001e8e:	9d00      	ldr	r5, [sp, #0]
 8001e90:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 8001e94:	4433      	add	r3, r6
 8001e96:	9315      	str	r3, [sp, #84]	@ 0x54
 8001e98:	4659      	mov	r1, fp
 8001e9a:	4650      	mov	r0, sl
 8001e9c:	f7fe fe44 	bl	8000b28 <__aeabi_d2iz>
 8001ea0:	4604      	mov	r4, r0
 8001ea2:	f7fe fb27 	bl	80004f4 <__aeabi_i2d>
 8001ea6:	3430      	adds	r4, #48	@ 0x30
 8001ea8:	460b      	mov	r3, r1
 8001eaa:	4602      	mov	r2, r0
 8001eac:	4659      	mov	r1, fp
 8001eae:	4650      	mov	r0, sl
 8001eb0:	f7fe f9d2 	bl	8000258 <__aeabi_dsub>
 8001eb4:	f805 4b01 	strb.w	r4, [r5], #1
 8001eb8:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 8001eba:	429d      	cmp	r5, r3
 8001ebc:	4682      	mov	sl, r0
 8001ebe:	468b      	mov	fp, r1
 8001ec0:	d127      	bne.n	8001f12 <_dtoa_r+0x64a>
 8001ec2:	9b00      	ldr	r3, [sp, #0]
 8001ec4:	2200      	movs	r2, #0
 8001ec6:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 8001eca:	441e      	add	r6, r3
 8001ecc:	4bb3      	ldr	r3, [pc, #716]	@ (800219c <_dtoa_r+0x8d4>)
 8001ece:	f7fe f9c5 	bl	800025c <__adddf3>
 8001ed2:	4602      	mov	r2, r0
 8001ed4:	460b      	mov	r3, r1
 8001ed6:	4650      	mov	r0, sl
 8001ed8:	4659      	mov	r1, fp
 8001eda:	f7fe fe05 	bl	8000ae8 <__aeabi_dcmpgt>
 8001ede:	2800      	cmp	r0, #0
 8001ee0:	d164      	bne.n	8001fac <_dtoa_r+0x6e4>
 8001ee2:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 8001ee6:	49ad      	ldr	r1, [pc, #692]	@ (800219c <_dtoa_r+0x8d4>)
 8001ee8:	2000      	movs	r0, #0
 8001eea:	f7fe f9b5 	bl	8000258 <__aeabi_dsub>
 8001eee:	4602      	mov	r2, r0
 8001ef0:	460b      	mov	r3, r1
 8001ef2:	4650      	mov	r0, sl
 8001ef4:	4659      	mov	r1, fp
 8001ef6:	f7fe fdd9 	bl	8000aac <__aeabi_dcmplt>
 8001efa:	2800      	cmp	r0, #0
 8001efc:	f43f af11 	beq.w	8001d22 <_dtoa_r+0x45a>
 8001f00:	4633      	mov	r3, r6
 8001f02:	f816 2d01 	ldrb.w	r2, [r6, #-1]!
 8001f06:	2a30      	cmp	r2, #48	@ 0x30
 8001f08:	d0fa      	beq.n	8001f00 <_dtoa_r+0x638>
 8001f0a:	461e      	mov	r6, r3
 8001f0c:	f8dd 8008 	ldr.w	r8, [sp, #8]
 8001f10:	e03a      	b.n	8001f88 <_dtoa_r+0x6c0>
 8001f12:	4ba3      	ldr	r3, [pc, #652]	@ (80021a0 <_dtoa_r+0x8d8>)
 8001f14:	2200      	movs	r2, #0
 8001f16:	f7fe fb57 	bl	80005c8 <__aeabi_dmul>
 8001f1a:	4682      	mov	sl, r0
 8001f1c:	468b      	mov	fp, r1
 8001f1e:	e7bb      	b.n	8001e98 <_dtoa_r+0x5d0>
 8001f20:	9e00      	ldr	r6, [sp, #0]
 8001f22:	4652      	mov	r2, sl
 8001f24:	465b      	mov	r3, fp
 8001f26:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8001f2a:	f7fe fc77 	bl	800081c <__aeabi_ddiv>
 8001f2e:	f7fe fdfb 	bl	8000b28 <__aeabi_d2iz>
 8001f32:	4607      	mov	r7, r0
 8001f34:	f7fe fade 	bl	80004f4 <__aeabi_i2d>
 8001f38:	4652      	mov	r2, sl
 8001f3a:	465b      	mov	r3, fp
 8001f3c:	f7fe fb44 	bl	80005c8 <__aeabi_dmul>
 8001f40:	4602      	mov	r2, r0
 8001f42:	460b      	mov	r3, r1
 8001f44:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8001f48:	f7fe f986 	bl	8000258 <__aeabi_dsub>
 8001f4c:	f107 0c30 	add.w	ip, r7, #48	@ 0x30
 8001f50:	9c00      	ldr	r4, [sp, #0]
 8001f52:	f806 cb01 	strb.w	ip, [r6], #1
 8001f56:	eba6 0c04 	sub.w	ip, r6, r4
 8001f5a:	9c04      	ldr	r4, [sp, #16]
 8001f5c:	4564      	cmp	r4, ip
 8001f5e:	4602      	mov	r2, r0
 8001f60:	460b      	mov	r3, r1
 8001f62:	d133      	bne.n	8001fcc <_dtoa_r+0x704>
 8001f64:	f7fe f97a 	bl	800025c <__adddf3>
 8001f68:	4652      	mov	r2, sl
 8001f6a:	465b      	mov	r3, fp
 8001f6c:	4604      	mov	r4, r0
 8001f6e:	460d      	mov	r5, r1
 8001f70:	f7fe fdba 	bl	8000ae8 <__aeabi_dcmpgt>
 8001f74:	b9c0      	cbnz	r0, 8001fa8 <_dtoa_r+0x6e0>
 8001f76:	4652      	mov	r2, sl
 8001f78:	465b      	mov	r3, fp
 8001f7a:	4620      	mov	r0, r4
 8001f7c:	4629      	mov	r1, r5
 8001f7e:	f7fe fd8b 	bl	8000a98 <__aeabi_dcmpeq>
 8001f82:	b108      	cbz	r0, 8001f88 <_dtoa_r+0x6c0>
 8001f84:	07fb      	lsls	r3, r7, #31
 8001f86:	d40f      	bmi.n	8001fa8 <_dtoa_r+0x6e0>
 8001f88:	9901      	ldr	r1, [sp, #4]
 8001f8a:	4648      	mov	r0, r9
 8001f8c:	f000 fbba 	bl	8002704 <_Bfree>
 8001f90:	2300      	movs	r3, #0
 8001f92:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8001f94:	7033      	strb	r3, [r6, #0]
 8001f96:	f108 0301 	add.w	r3, r8, #1
 8001f9a:	6013      	str	r3, [r2, #0]
 8001f9c:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 8001f9e:	2b00      	cmp	r3, #0
 8001fa0:	f43f ace2 	beq.w	8001968 <_dtoa_r+0xa0>
 8001fa4:	601e      	str	r6, [r3, #0]
 8001fa6:	e4df      	b.n	8001968 <_dtoa_r+0xa0>
 8001fa8:	f8cd 8008 	str.w	r8, [sp, #8]
 8001fac:	4633      	mov	r3, r6
 8001fae:	461e      	mov	r6, r3
 8001fb0:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8001fb4:	2a39      	cmp	r2, #57	@ 0x39
 8001fb6:	d106      	bne.n	8001fc6 <_dtoa_r+0x6fe>
 8001fb8:	9a00      	ldr	r2, [sp, #0]
 8001fba:	429a      	cmp	r2, r3
 8001fbc:	d1f7      	bne.n	8001fae <_dtoa_r+0x6e6>
 8001fbe:	9a02      	ldr	r2, [sp, #8]
 8001fc0:	3201      	adds	r2, #1
 8001fc2:	9202      	str	r2, [sp, #8]
 8001fc4:	2230      	movs	r2, #48	@ 0x30
 8001fc6:	3201      	adds	r2, #1
 8001fc8:	701a      	strb	r2, [r3, #0]
 8001fca:	e79f      	b.n	8001f0c <_dtoa_r+0x644>
 8001fcc:	4b74      	ldr	r3, [pc, #464]	@ (80021a0 <_dtoa_r+0x8d8>)
 8001fce:	2200      	movs	r2, #0
 8001fd0:	f7fe fafa 	bl	80005c8 <__aeabi_dmul>
 8001fd4:	4602      	mov	r2, r0
 8001fd6:	460b      	mov	r3, r1
 8001fd8:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8001fdc:	2200      	movs	r2, #0
 8001fde:	2300      	movs	r3, #0
 8001fe0:	f7fe fd5a 	bl	8000a98 <__aeabi_dcmpeq>
 8001fe4:	2800      	cmp	r0, #0
 8001fe6:	d09c      	beq.n	8001f22 <_dtoa_r+0x65a>
 8001fe8:	e7ce      	b.n	8001f88 <_dtoa_r+0x6c0>
 8001fea:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8001fec:	2a00      	cmp	r2, #0
 8001fee:	f000 80e3 	beq.w	80021b8 <_dtoa_r+0x8f0>
 8001ff2:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8001ff4:	2a01      	cmp	r2, #1
 8001ff6:	f300 80c2 	bgt.w	800217e <_dtoa_r+0x8b6>
 8001ffa:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8001ffc:	2a00      	cmp	r2, #0
 8001ffe:	f000 80ba 	beq.w	8002176 <_dtoa_r+0x8ae>
 8002002:	f203 4333 	addw	r3, r3, #1075	@ 0x433
 8002006:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8002008:	463e      	mov	r6, r7
 800200a:	9a08      	ldr	r2, [sp, #32]
 800200c:	2101      	movs	r1, #1
 800200e:	441a      	add	r2, r3
 8002010:	4648      	mov	r0, r9
 8002012:	441f      	add	r7, r3
 8002014:	9208      	str	r2, [sp, #32]
 8002016:	f000 fc29 	bl	800286c <__i2b>
 800201a:	4604      	mov	r4, r0
 800201c:	b156      	cbz	r6, 8002034 <_dtoa_r+0x76c>
 800201e:	9b08      	ldr	r3, [sp, #32]
 8002020:	2b00      	cmp	r3, #0
 8002022:	dd07      	ble.n	8002034 <_dtoa_r+0x76c>
 8002024:	42b3      	cmp	r3, r6
 8002026:	9a08      	ldr	r2, [sp, #32]
 8002028:	bfa8      	it	ge
 800202a:	4633      	movge	r3, r6
 800202c:	1aff      	subs	r7, r7, r3
 800202e:	1af6      	subs	r6, r6, r3
 8002030:	1ad3      	subs	r3, r2, r3
 8002032:	9308      	str	r3, [sp, #32]
 8002034:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8002036:	b30b      	cbz	r3, 800207c <_dtoa_r+0x7b4>
 8002038:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800203a:	2b00      	cmp	r3, #0
 800203c:	f000 80c3 	beq.w	80021c6 <_dtoa_r+0x8fe>
 8002040:	2d00      	cmp	r5, #0
 8002042:	f000 80bd 	beq.w	80021c0 <_dtoa_r+0x8f8>
 8002046:	4621      	mov	r1, r4
 8002048:	462a      	mov	r2, r5
 800204a:	4648      	mov	r0, r9
 800204c:	f000 fcce 	bl	80029ec <__pow5mult>
 8002050:	9a01      	ldr	r2, [sp, #4]
 8002052:	4601      	mov	r1, r0
 8002054:	4604      	mov	r4, r0
 8002056:	4648      	mov	r0, r9
 8002058:	f000 fc1e 	bl	8002898 <__multiply>
 800205c:	9901      	ldr	r1, [sp, #4]
 800205e:	4682      	mov	sl, r0
 8002060:	4648      	mov	r0, r9
 8002062:	f000 fb4f 	bl	8002704 <_Bfree>
 8002066:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8002068:	1b5b      	subs	r3, r3, r5
 800206a:	9309      	str	r3, [sp, #36]	@ 0x24
 800206c:	f000 80ae 	beq.w	80021cc <_dtoa_r+0x904>
 8002070:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8002072:	4651      	mov	r1, sl
 8002074:	4648      	mov	r0, r9
 8002076:	f000 fcb9 	bl	80029ec <__pow5mult>
 800207a:	9001      	str	r0, [sp, #4]
 800207c:	2101      	movs	r1, #1
 800207e:	4648      	mov	r0, r9
 8002080:	f000 fbf4 	bl	800286c <__i2b>
 8002084:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8002086:	4605      	mov	r5, r0
 8002088:	2b00      	cmp	r3, #0
 800208a:	f000 81d7 	beq.w	800243c <_dtoa_r+0xb74>
 800208e:	461a      	mov	r2, r3
 8002090:	4601      	mov	r1, r0
 8002092:	4648      	mov	r0, r9
 8002094:	f000 fcaa 	bl	80029ec <__pow5mult>
 8002098:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800209a:	2b01      	cmp	r3, #1
 800209c:	4605      	mov	r5, r0
 800209e:	f300 809d 	bgt.w	80021dc <_dtoa_r+0x914>
 80020a2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80020a4:	2b00      	cmp	r3, #0
 80020a6:	f040 8094 	bne.w	80021d2 <_dtoa_r+0x90a>
 80020aa:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80020ac:	f3c3 0313 	ubfx	r3, r3, #0, #20
 80020b0:	2b00      	cmp	r3, #0
 80020b2:	f040 808e 	bne.w	80021d2 <_dtoa_r+0x90a>
 80020b6:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80020b8:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 80020bc:	0d1b      	lsrs	r3, r3, #20
 80020be:	051b      	lsls	r3, r3, #20
 80020c0:	2b00      	cmp	r3, #0
 80020c2:	f000 8089 	beq.w	80021d8 <_dtoa_r+0x910>
 80020c6:	9b08      	ldr	r3, [sp, #32]
 80020c8:	3301      	adds	r3, #1
 80020ca:	3701      	adds	r7, #1
 80020cc:	9308      	str	r3, [sp, #32]
 80020ce:	f04f 0a01 	mov.w	sl, #1
 80020d2:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80020d4:	2b00      	cmp	r3, #0
 80020d6:	f000 81b7 	beq.w	8002448 <_dtoa_r+0xb80>
 80020da:	692b      	ldr	r3, [r5, #16]
 80020dc:	eb05 0383 	add.w	r3, r5, r3, lsl #2
 80020e0:	6918      	ldr	r0, [r3, #16]
 80020e2:	f000 fb77 	bl	80027d4 <__hi0bits>
 80020e6:	f1c0 0020 	rsb	r0, r0, #32
 80020ea:	9b08      	ldr	r3, [sp, #32]
 80020ec:	4418      	add	r0, r3
 80020ee:	f010 001f 	ands.w	r0, r0, #31
 80020f2:	d07e      	beq.n	80021f2 <_dtoa_r+0x92a>
 80020f4:	f1c0 0320 	rsb	r3, r0, #32
 80020f8:	2b04      	cmp	r3, #4
 80020fa:	dd72      	ble.n	80021e2 <_dtoa_r+0x91a>
 80020fc:	9b08      	ldr	r3, [sp, #32]
 80020fe:	f1c0 001c 	rsb	r0, r0, #28
 8002102:	4403      	add	r3, r0
 8002104:	4407      	add	r7, r0
 8002106:	4406      	add	r6, r0
 8002108:	9308      	str	r3, [sp, #32]
 800210a:	2f00      	cmp	r7, #0
 800210c:	dd05      	ble.n	800211a <_dtoa_r+0x852>
 800210e:	9901      	ldr	r1, [sp, #4]
 8002110:	463a      	mov	r2, r7
 8002112:	4648      	mov	r0, r9
 8002114:	f000 fcc6 	bl	8002aa4 <__lshift>
 8002118:	9001      	str	r0, [sp, #4]
 800211a:	9b08      	ldr	r3, [sp, #32]
 800211c:	2b00      	cmp	r3, #0
 800211e:	dd05      	ble.n	800212c <_dtoa_r+0x864>
 8002120:	4629      	mov	r1, r5
 8002122:	461a      	mov	r2, r3
 8002124:	4648      	mov	r0, r9
 8002126:	f000 fcbd 	bl	8002aa4 <__lshift>
 800212a:	4605      	mov	r5, r0
 800212c:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 800212e:	2b00      	cmp	r3, #0
 8002130:	d061      	beq.n	80021f6 <_dtoa_r+0x92e>
 8002132:	9801      	ldr	r0, [sp, #4]
 8002134:	4629      	mov	r1, r5
 8002136:	f000 fd23 	bl	8002b80 <__mcmp>
 800213a:	2800      	cmp	r0, #0
 800213c:	da5b      	bge.n	80021f6 <_dtoa_r+0x92e>
 800213e:	f108 33ff 	add.w	r3, r8, #4294967295	@ 0xffffffff
 8002142:	9302      	str	r3, [sp, #8]
 8002144:	9901      	ldr	r1, [sp, #4]
 8002146:	2300      	movs	r3, #0
 8002148:	220a      	movs	r2, #10
 800214a:	4648      	mov	r0, r9
 800214c:	f000 fafc 	bl	8002748 <__multadd>
 8002150:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8002152:	9001      	str	r0, [sp, #4]
 8002154:	2b00      	cmp	r3, #0
 8002156:	f000 8179 	beq.w	800244c <_dtoa_r+0xb84>
 800215a:	2300      	movs	r3, #0
 800215c:	4621      	mov	r1, r4
 800215e:	220a      	movs	r2, #10
 8002160:	4648      	mov	r0, r9
 8002162:	f000 faf1 	bl	8002748 <__multadd>
 8002166:	9b05      	ldr	r3, [sp, #20]
 8002168:	2b00      	cmp	r3, #0
 800216a:	4604      	mov	r4, r0
 800216c:	dc72      	bgt.n	8002254 <_dtoa_r+0x98c>
 800216e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8002170:	2b02      	cmp	r3, #2
 8002172:	dc49      	bgt.n	8002208 <_dtoa_r+0x940>
 8002174:	e06e      	b.n	8002254 <_dtoa_r+0x98c>
 8002176:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8002178:	f1c3 0336 	rsb	r3, r3, #54	@ 0x36
 800217c:	e743      	b.n	8002006 <_dtoa_r+0x73e>
 800217e:	9b04      	ldr	r3, [sp, #16]
 8002180:	1e5d      	subs	r5, r3, #1
 8002182:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8002184:	42ab      	cmp	r3, r5
 8002186:	db0d      	blt.n	80021a4 <_dtoa_r+0x8dc>
 8002188:	1b5d      	subs	r5, r3, r5
 800218a:	9b04      	ldr	r3, [sp, #16]
 800218c:	2b00      	cmp	r3, #0
 800218e:	f6bf af3b 	bge.w	8002008 <_dtoa_r+0x740>
 8002192:	9b04      	ldr	r3, [sp, #16]
 8002194:	1afe      	subs	r6, r7, r3
 8002196:	2300      	movs	r3, #0
 8002198:	e737      	b.n	800200a <_dtoa_r+0x742>
 800219a:	bf00      	nop
 800219c:	3fe00000 	.word	0x3fe00000
 80021a0:	40240000 	.word	0x40240000
 80021a4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80021a6:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 80021a8:	9509      	str	r5, [sp, #36]	@ 0x24
 80021aa:	1aeb      	subs	r3, r5, r3
 80021ac:	441a      	add	r2, r3
 80021ae:	920d      	str	r2, [sp, #52]	@ 0x34
 80021b0:	9b04      	ldr	r3, [sp, #16]
 80021b2:	463e      	mov	r6, r7
 80021b4:	2500      	movs	r5, #0
 80021b6:	e728      	b.n	800200a <_dtoa_r+0x742>
 80021b8:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 80021ba:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 80021bc:	463e      	mov	r6, r7
 80021be:	e72d      	b.n	800201c <_dtoa_r+0x754>
 80021c0:	f8dd a004 	ldr.w	sl, [sp, #4]
 80021c4:	e754      	b.n	8002070 <_dtoa_r+0x7a8>
 80021c6:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80021c8:	9901      	ldr	r1, [sp, #4]
 80021ca:	e753      	b.n	8002074 <_dtoa_r+0x7ac>
 80021cc:	f8cd a004 	str.w	sl, [sp, #4]
 80021d0:	e754      	b.n	800207c <_dtoa_r+0x7b4>
 80021d2:	f04f 0a00 	mov.w	sl, #0
 80021d6:	e77c      	b.n	80020d2 <_dtoa_r+0x80a>
 80021d8:	469a      	mov	sl, r3
 80021da:	e77a      	b.n	80020d2 <_dtoa_r+0x80a>
 80021dc:	f04f 0a00 	mov.w	sl, #0
 80021e0:	e77b      	b.n	80020da <_dtoa_r+0x812>
 80021e2:	d092      	beq.n	800210a <_dtoa_r+0x842>
 80021e4:	9a08      	ldr	r2, [sp, #32]
 80021e6:	331c      	adds	r3, #28
 80021e8:	441a      	add	r2, r3
 80021ea:	441f      	add	r7, r3
 80021ec:	441e      	add	r6, r3
 80021ee:	9208      	str	r2, [sp, #32]
 80021f0:	e78b      	b.n	800210a <_dtoa_r+0x842>
 80021f2:	4603      	mov	r3, r0
 80021f4:	e7f6      	b.n	80021e4 <_dtoa_r+0x91c>
 80021f6:	9b04      	ldr	r3, [sp, #16]
 80021f8:	f8cd 8008 	str.w	r8, [sp, #8]
 80021fc:	2b00      	cmp	r3, #0
 80021fe:	dc23      	bgt.n	8002248 <_dtoa_r+0x980>
 8002200:	9305      	str	r3, [sp, #20]
 8002202:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8002204:	2b02      	cmp	r3, #2
 8002206:	dd21      	ble.n	800224c <_dtoa_r+0x984>
 8002208:	9b05      	ldr	r3, [sp, #20]
 800220a:	2b00      	cmp	r3, #0
 800220c:	f47f adb0 	bne.w	8001d70 <_dtoa_r+0x4a8>
 8002210:	4629      	mov	r1, r5
 8002212:	2205      	movs	r2, #5
 8002214:	4648      	mov	r0, r9
 8002216:	f000 fa97 	bl	8002748 <__multadd>
 800221a:	4601      	mov	r1, r0
 800221c:	4605      	mov	r5, r0
 800221e:	9801      	ldr	r0, [sp, #4]
 8002220:	f000 fcae 	bl	8002b80 <__mcmp>
 8002224:	2800      	cmp	r0, #0
 8002226:	f77f ada3 	ble.w	8001d70 <_dtoa_r+0x4a8>
 800222a:	9e00      	ldr	r6, [sp, #0]
 800222c:	2331      	movs	r3, #49	@ 0x31
 800222e:	f806 3b01 	strb.w	r3, [r6], #1
 8002232:	9b02      	ldr	r3, [sp, #8]
 8002234:	3301      	adds	r3, #1
 8002236:	9302      	str	r3, [sp, #8]
 8002238:	e59e      	b.n	8001d78 <_dtoa_r+0x4b0>
 800223a:	4635      	mov	r5, r6
 800223c:	462c      	mov	r4, r5
 800223e:	e7f4      	b.n	800222a <_dtoa_r+0x962>
 8002240:	9d04      	ldr	r5, [sp, #16]
 8002242:	f8cd 8008 	str.w	r8, [sp, #8]
 8002246:	e7f9      	b.n	800223c <_dtoa_r+0x974>
 8002248:	9b04      	ldr	r3, [sp, #16]
 800224a:	9305      	str	r3, [sp, #20]
 800224c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800224e:	2b00      	cmp	r3, #0
 8002250:	f000 8100 	beq.w	8002454 <_dtoa_r+0xb8c>
 8002254:	2e00      	cmp	r6, #0
 8002256:	dd05      	ble.n	8002264 <_dtoa_r+0x99c>
 8002258:	4621      	mov	r1, r4
 800225a:	4632      	mov	r2, r6
 800225c:	4648      	mov	r0, r9
 800225e:	f000 fc21 	bl	8002aa4 <__lshift>
 8002262:	4604      	mov	r4, r0
 8002264:	f1ba 0f00 	cmp.w	sl, #0
 8002268:	d05a      	beq.n	8002320 <_dtoa_r+0xa58>
 800226a:	6861      	ldr	r1, [r4, #4]
 800226c:	4648      	mov	r0, r9
 800226e:	f000 fa0b 	bl	8002688 <_Balloc>
 8002272:	4606      	mov	r6, r0
 8002274:	b928      	cbnz	r0, 8002282 <_dtoa_r+0x9ba>
 8002276:	4b82      	ldr	r3, [pc, #520]	@ (8002480 <_dtoa_r+0xbb8>)
 8002278:	4602      	mov	r2, r0
 800227a:	f240 21ef 	movw	r1, #751	@ 0x2ef
 800227e:	f7ff bb3a 	b.w	80018f6 <_dtoa_r+0x2e>
 8002282:	6922      	ldr	r2, [r4, #16]
 8002284:	3202      	adds	r2, #2
 8002286:	0092      	lsls	r2, r2, #2
 8002288:	f104 010c 	add.w	r1, r4, #12
 800228c:	300c      	adds	r0, #12
 800228e:	f000 fe3d 	bl	8002f0c <memcpy>
 8002292:	2201      	movs	r2, #1
 8002294:	4631      	mov	r1, r6
 8002296:	4648      	mov	r0, r9
 8002298:	f000 fc04 	bl	8002aa4 <__lshift>
 800229c:	4607      	mov	r7, r0
 800229e:	9b00      	ldr	r3, [sp, #0]
 80022a0:	9a00      	ldr	r2, [sp, #0]
 80022a2:	f103 0b01 	add.w	fp, r3, #1
 80022a6:	9b05      	ldr	r3, [sp, #20]
 80022a8:	4413      	add	r3, r2
 80022aa:	9306      	str	r3, [sp, #24]
 80022ac:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80022ae:	f003 0301 	and.w	r3, r3, #1
 80022b2:	9308      	str	r3, [sp, #32]
 80022b4:	f10b 33ff 	add.w	r3, fp, #4294967295	@ 0xffffffff
 80022b8:	4629      	mov	r1, r5
 80022ba:	9801      	ldr	r0, [sp, #4]
 80022bc:	9304      	str	r3, [sp, #16]
 80022be:	f7ff fa78 	bl	80017b2 <quorem>
 80022c2:	4621      	mov	r1, r4
 80022c4:	9005      	str	r0, [sp, #20]
 80022c6:	f100 0a30 	add.w	sl, r0, #48	@ 0x30
 80022ca:	9801      	ldr	r0, [sp, #4]
 80022cc:	f000 fc58 	bl	8002b80 <__mcmp>
 80022d0:	463a      	mov	r2, r7
 80022d2:	4680      	mov	r8, r0
 80022d4:	4629      	mov	r1, r5
 80022d6:	4648      	mov	r0, r9
 80022d8:	f000 fc6e 	bl	8002bb8 <__mdiff>
 80022dc:	68c2      	ldr	r2, [r0, #12]
 80022de:	4606      	mov	r6, r0
 80022e0:	bb02      	cbnz	r2, 8002324 <_dtoa_r+0xa5c>
 80022e2:	4601      	mov	r1, r0
 80022e4:	9801      	ldr	r0, [sp, #4]
 80022e6:	f000 fc4b 	bl	8002b80 <__mcmp>
 80022ea:	4602      	mov	r2, r0
 80022ec:	4631      	mov	r1, r6
 80022ee:	4648      	mov	r0, r9
 80022f0:	9209      	str	r2, [sp, #36]	@ 0x24
 80022f2:	f000 fa07 	bl	8002704 <_Bfree>
 80022f6:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	@ 0x24
 80022fa:	ea42 0103 	orr.w	r1, r2, r3
 80022fe:	9b08      	ldr	r3, [sp, #32]
 8002300:	4319      	orrs	r1, r3
 8002302:	465e      	mov	r6, fp
 8002304:	d110      	bne.n	8002328 <_dtoa_r+0xa60>
 8002306:	f1ba 0f39 	cmp.w	sl, #57	@ 0x39
 800230a:	d02b      	beq.n	8002364 <_dtoa_r+0xa9c>
 800230c:	f1b8 0f00 	cmp.w	r8, #0
 8002310:	dd02      	ble.n	8002318 <_dtoa_r+0xa50>
 8002312:	9b05      	ldr	r3, [sp, #20]
 8002314:	f103 0a31 	add.w	sl, r3, #49	@ 0x31
 8002318:	9b04      	ldr	r3, [sp, #16]
 800231a:	f883 a000 	strb.w	sl, [r3]
 800231e:	e52d      	b.n	8001d7c <_dtoa_r+0x4b4>
 8002320:	4627      	mov	r7, r4
 8002322:	e7bc      	b.n	800229e <_dtoa_r+0x9d6>
 8002324:	2201      	movs	r2, #1
 8002326:	e7e1      	b.n	80022ec <_dtoa_r+0xa24>
 8002328:	f1b8 0f00 	cmp.w	r8, #0
 800232c:	db06      	blt.n	800233c <_dtoa_r+0xa74>
 800232e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8002330:	ea48 0803 	orr.w	r8, r8, r3
 8002334:	9b08      	ldr	r3, [sp, #32]
 8002336:	ea58 0803 	orrs.w	r8, r8, r3
 800233a:	d120      	bne.n	800237e <_dtoa_r+0xab6>
 800233c:	2a00      	cmp	r2, #0
 800233e:	ddeb      	ble.n	8002318 <_dtoa_r+0xa50>
 8002340:	9901      	ldr	r1, [sp, #4]
 8002342:	2201      	movs	r2, #1
 8002344:	4648      	mov	r0, r9
 8002346:	f000 fbad 	bl	8002aa4 <__lshift>
 800234a:	4629      	mov	r1, r5
 800234c:	9001      	str	r0, [sp, #4]
 800234e:	f000 fc17 	bl	8002b80 <__mcmp>
 8002352:	2800      	cmp	r0, #0
 8002354:	dc03      	bgt.n	800235e <_dtoa_r+0xa96>
 8002356:	d1df      	bne.n	8002318 <_dtoa_r+0xa50>
 8002358:	f01a 0f01 	tst.w	sl, #1
 800235c:	d0dc      	beq.n	8002318 <_dtoa_r+0xa50>
 800235e:	f1ba 0f39 	cmp.w	sl, #57	@ 0x39
 8002362:	d1d6      	bne.n	8002312 <_dtoa_r+0xa4a>
 8002364:	9a04      	ldr	r2, [sp, #16]
 8002366:	2339      	movs	r3, #57	@ 0x39
 8002368:	7013      	strb	r3, [r2, #0]
 800236a:	4633      	mov	r3, r6
 800236c:	461e      	mov	r6, r3
 800236e:	3b01      	subs	r3, #1
 8002370:	f816 2c01 	ldrb.w	r2, [r6, #-1]
 8002374:	2a39      	cmp	r2, #57	@ 0x39
 8002376:	d052      	beq.n	800241e <_dtoa_r+0xb56>
 8002378:	3201      	adds	r2, #1
 800237a:	701a      	strb	r2, [r3, #0]
 800237c:	e4fe      	b.n	8001d7c <_dtoa_r+0x4b4>
 800237e:	2a00      	cmp	r2, #0
 8002380:	dd07      	ble.n	8002392 <_dtoa_r+0xaca>
 8002382:	f1ba 0f39 	cmp.w	sl, #57	@ 0x39
 8002386:	d0ed      	beq.n	8002364 <_dtoa_r+0xa9c>
 8002388:	9a04      	ldr	r2, [sp, #16]
 800238a:	f10a 0301 	add.w	r3, sl, #1
 800238e:	7013      	strb	r3, [r2, #0]
 8002390:	e4f4      	b.n	8001d7c <_dtoa_r+0x4b4>
 8002392:	9b06      	ldr	r3, [sp, #24]
 8002394:	f80b ac01 	strb.w	sl, [fp, #-1]
 8002398:	455b      	cmp	r3, fp
 800239a:	d02a      	beq.n	80023f2 <_dtoa_r+0xb2a>
 800239c:	9901      	ldr	r1, [sp, #4]
 800239e:	2300      	movs	r3, #0
 80023a0:	220a      	movs	r2, #10
 80023a2:	4648      	mov	r0, r9
 80023a4:	f000 f9d0 	bl	8002748 <__multadd>
 80023a8:	42bc      	cmp	r4, r7
 80023aa:	9001      	str	r0, [sp, #4]
 80023ac:	f04f 0300 	mov.w	r3, #0
 80023b0:	f04f 020a 	mov.w	r2, #10
 80023b4:	4621      	mov	r1, r4
 80023b6:	4648      	mov	r0, r9
 80023b8:	d106      	bne.n	80023c8 <_dtoa_r+0xb00>
 80023ba:	f000 f9c5 	bl	8002748 <__multadd>
 80023be:	4604      	mov	r4, r0
 80023c0:	4607      	mov	r7, r0
 80023c2:	f10b 0b01 	add.w	fp, fp, #1
 80023c6:	e775      	b.n	80022b4 <_dtoa_r+0x9ec>
 80023c8:	f000 f9be 	bl	8002748 <__multadd>
 80023cc:	4639      	mov	r1, r7
 80023ce:	4604      	mov	r4, r0
 80023d0:	2300      	movs	r3, #0
 80023d2:	220a      	movs	r2, #10
 80023d4:	4648      	mov	r0, r9
 80023d6:	f000 f9b7 	bl	8002748 <__multadd>
 80023da:	4607      	mov	r7, r0
 80023dc:	e7f1      	b.n	80023c2 <_dtoa_r+0xafa>
 80023de:	9b05      	ldr	r3, [sp, #20]
 80023e0:	1e5e      	subs	r6, r3, #1
 80023e2:	2b00      	cmp	r3, #0
 80023e4:	9b00      	ldr	r3, [sp, #0]
 80023e6:	bfd8      	it	le
 80023e8:	2600      	movle	r6, #0
 80023ea:	1c5a      	adds	r2, r3, #1
 80023ec:	4627      	mov	r7, r4
 80023ee:	4416      	add	r6, r2
 80023f0:	2400      	movs	r4, #0
 80023f2:	9901      	ldr	r1, [sp, #4]
 80023f4:	2201      	movs	r2, #1
 80023f6:	4648      	mov	r0, r9
 80023f8:	f000 fb54 	bl	8002aa4 <__lshift>
 80023fc:	4629      	mov	r1, r5
 80023fe:	9001      	str	r0, [sp, #4]
 8002400:	f000 fbbe 	bl	8002b80 <__mcmp>
 8002404:	2800      	cmp	r0, #0
 8002406:	dcb0      	bgt.n	800236a <_dtoa_r+0xaa2>
 8002408:	d102      	bne.n	8002410 <_dtoa_r+0xb48>
 800240a:	f01a 0f01 	tst.w	sl, #1
 800240e:	d1ac      	bne.n	800236a <_dtoa_r+0xaa2>
 8002410:	4633      	mov	r3, r6
 8002412:	461e      	mov	r6, r3
 8002414:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8002418:	2a30      	cmp	r2, #48	@ 0x30
 800241a:	d0fa      	beq.n	8002412 <_dtoa_r+0xb4a>
 800241c:	e4ae      	b.n	8001d7c <_dtoa_r+0x4b4>
 800241e:	9a00      	ldr	r2, [sp, #0]
 8002420:	429a      	cmp	r2, r3
 8002422:	d1a3      	bne.n	800236c <_dtoa_r+0xaa4>
 8002424:	9b02      	ldr	r3, [sp, #8]
 8002426:	3301      	adds	r3, #1
 8002428:	9302      	str	r3, [sp, #8]
 800242a:	2331      	movs	r3, #49	@ 0x31
 800242c:	e7af      	b.n	800238e <_dtoa_r+0xac6>
 800242e:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 8002430:	2b00      	cmp	r3, #0
 8002432:	f47f aa94 	bne.w	800195e <_dtoa_r+0x96>
 8002436:	4b13      	ldr	r3, [pc, #76]	@ (8002484 <_dtoa_r+0xbbc>)
 8002438:	f7ff bab3 	b.w	80019a2 <_dtoa_r+0xda>
 800243c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800243e:	2b01      	cmp	r3, #1
 8002440:	f77f ae2f 	ble.w	80020a2 <_dtoa_r+0x7da>
 8002444:	f8dd a034 	ldr.w	sl, [sp, #52]	@ 0x34
 8002448:	2001      	movs	r0, #1
 800244a:	e64e      	b.n	80020ea <_dtoa_r+0x822>
 800244c:	9b05      	ldr	r3, [sp, #20]
 800244e:	2b00      	cmp	r3, #0
 8002450:	f77f aed7 	ble.w	8002202 <_dtoa_r+0x93a>
 8002454:	9e00      	ldr	r6, [sp, #0]
 8002456:	9801      	ldr	r0, [sp, #4]
 8002458:	4629      	mov	r1, r5
 800245a:	f7ff f9aa 	bl	80017b2 <quorem>
 800245e:	f100 0a30 	add.w	sl, r0, #48	@ 0x30
 8002462:	9b00      	ldr	r3, [sp, #0]
 8002464:	f806 ab01 	strb.w	sl, [r6], #1
 8002468:	1af2      	subs	r2, r6, r3
 800246a:	9b05      	ldr	r3, [sp, #20]
 800246c:	4293      	cmp	r3, r2
 800246e:	ddb6      	ble.n	80023de <_dtoa_r+0xb16>
 8002470:	9901      	ldr	r1, [sp, #4]
 8002472:	2300      	movs	r3, #0
 8002474:	220a      	movs	r2, #10
 8002476:	4648      	mov	r0, r9
 8002478:	f000 f966 	bl	8002748 <__multadd>
 800247c:	9001      	str	r0, [sp, #4]
 800247e:	e7ea      	b.n	8002456 <_dtoa_r+0xb8e>
 8002480:	0800419d 	.word	0x0800419d
 8002484:	08004120 	.word	0x08004120

08002488 <_free_r>:
 8002488:	b538      	push	{r3, r4, r5, lr}
 800248a:	4605      	mov	r5, r0
 800248c:	2900      	cmp	r1, #0
 800248e:	d041      	beq.n	8002514 <_free_r+0x8c>
 8002490:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8002494:	1f0c      	subs	r4, r1, #4
 8002496:	2b00      	cmp	r3, #0
 8002498:	bfb8      	it	lt
 800249a:	18e4      	addlt	r4, r4, r3
 800249c:	f000 f8e8 	bl	8002670 <__malloc_lock>
 80024a0:	4a1d      	ldr	r2, [pc, #116]	@ (8002518 <_free_r+0x90>)
 80024a2:	6813      	ldr	r3, [r2, #0]
 80024a4:	b933      	cbnz	r3, 80024b4 <_free_r+0x2c>
 80024a6:	6063      	str	r3, [r4, #4]
 80024a8:	6014      	str	r4, [r2, #0]
 80024aa:	4628      	mov	r0, r5
 80024ac:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80024b0:	f000 b8e4 	b.w	800267c <__malloc_unlock>
 80024b4:	42a3      	cmp	r3, r4
 80024b6:	d908      	bls.n	80024ca <_free_r+0x42>
 80024b8:	6820      	ldr	r0, [r4, #0]
 80024ba:	1821      	adds	r1, r4, r0
 80024bc:	428b      	cmp	r3, r1
 80024be:	bf01      	itttt	eq
 80024c0:	6819      	ldreq	r1, [r3, #0]
 80024c2:	685b      	ldreq	r3, [r3, #4]
 80024c4:	1809      	addeq	r1, r1, r0
 80024c6:	6021      	streq	r1, [r4, #0]
 80024c8:	e7ed      	b.n	80024a6 <_free_r+0x1e>
 80024ca:	461a      	mov	r2, r3
 80024cc:	685b      	ldr	r3, [r3, #4]
 80024ce:	b10b      	cbz	r3, 80024d4 <_free_r+0x4c>
 80024d0:	42a3      	cmp	r3, r4
 80024d2:	d9fa      	bls.n	80024ca <_free_r+0x42>
 80024d4:	6811      	ldr	r1, [r2, #0]
 80024d6:	1850      	adds	r0, r2, r1
 80024d8:	42a0      	cmp	r0, r4
 80024da:	d10b      	bne.n	80024f4 <_free_r+0x6c>
 80024dc:	6820      	ldr	r0, [r4, #0]
 80024de:	4401      	add	r1, r0
 80024e0:	1850      	adds	r0, r2, r1
 80024e2:	4283      	cmp	r3, r0
 80024e4:	6011      	str	r1, [r2, #0]
 80024e6:	d1e0      	bne.n	80024aa <_free_r+0x22>
 80024e8:	6818      	ldr	r0, [r3, #0]
 80024ea:	685b      	ldr	r3, [r3, #4]
 80024ec:	6053      	str	r3, [r2, #4]
 80024ee:	4408      	add	r0, r1
 80024f0:	6010      	str	r0, [r2, #0]
 80024f2:	e7da      	b.n	80024aa <_free_r+0x22>
 80024f4:	d902      	bls.n	80024fc <_free_r+0x74>
 80024f6:	230c      	movs	r3, #12
 80024f8:	602b      	str	r3, [r5, #0]
 80024fa:	e7d6      	b.n	80024aa <_free_r+0x22>
 80024fc:	6820      	ldr	r0, [r4, #0]
 80024fe:	1821      	adds	r1, r4, r0
 8002500:	428b      	cmp	r3, r1
 8002502:	bf04      	itt	eq
 8002504:	6819      	ldreq	r1, [r3, #0]
 8002506:	685b      	ldreq	r3, [r3, #4]
 8002508:	6063      	str	r3, [r4, #4]
 800250a:	bf04      	itt	eq
 800250c:	1809      	addeq	r1, r1, r0
 800250e:	6021      	streq	r1, [r4, #0]
 8002510:	6054      	str	r4, [r2, #4]
 8002512:	e7ca      	b.n	80024aa <_free_r+0x22>
 8002514:	bd38      	pop	{r3, r4, r5, pc}
 8002516:	bf00      	nop
 8002518:	2000032c 	.word	0x2000032c

0800251c <malloc>:
 800251c:	4b02      	ldr	r3, [pc, #8]	@ (8002528 <malloc+0xc>)
 800251e:	4601      	mov	r1, r0
 8002520:	6818      	ldr	r0, [r3, #0]
 8002522:	f000 b825 	b.w	8002570 <_malloc_r>
 8002526:	bf00      	nop
 8002528:	2000000c 	.word	0x2000000c

0800252c <sbrk_aligned>:
 800252c:	b570      	push	{r4, r5, r6, lr}
 800252e:	4e0f      	ldr	r6, [pc, #60]	@ (800256c <sbrk_aligned+0x40>)
 8002530:	460c      	mov	r4, r1
 8002532:	6831      	ldr	r1, [r6, #0]
 8002534:	4605      	mov	r5, r0
 8002536:	b911      	cbnz	r1, 800253e <sbrk_aligned+0x12>
 8002538:	f000 fcd8 	bl	8002eec <_sbrk_r>
 800253c:	6030      	str	r0, [r6, #0]
 800253e:	4621      	mov	r1, r4
 8002540:	4628      	mov	r0, r5
 8002542:	f000 fcd3 	bl	8002eec <_sbrk_r>
 8002546:	1c43      	adds	r3, r0, #1
 8002548:	d103      	bne.n	8002552 <sbrk_aligned+0x26>
 800254a:	f04f 34ff 	mov.w	r4, #4294967295	@ 0xffffffff
 800254e:	4620      	mov	r0, r4
 8002550:	bd70      	pop	{r4, r5, r6, pc}
 8002552:	1cc4      	adds	r4, r0, #3
 8002554:	f024 0403 	bic.w	r4, r4, #3
 8002558:	42a0      	cmp	r0, r4
 800255a:	d0f8      	beq.n	800254e <sbrk_aligned+0x22>
 800255c:	1a21      	subs	r1, r4, r0
 800255e:	4628      	mov	r0, r5
 8002560:	f000 fcc4 	bl	8002eec <_sbrk_r>
 8002564:	3001      	adds	r0, #1
 8002566:	d1f2      	bne.n	800254e <sbrk_aligned+0x22>
 8002568:	e7ef      	b.n	800254a <sbrk_aligned+0x1e>
 800256a:	bf00      	nop
 800256c:	20000328 	.word	0x20000328

08002570 <_malloc_r>:
 8002570:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8002574:	1ccd      	adds	r5, r1, #3
 8002576:	f025 0503 	bic.w	r5, r5, #3
 800257a:	3508      	adds	r5, #8
 800257c:	2d0c      	cmp	r5, #12
 800257e:	bf38      	it	cc
 8002580:	250c      	movcc	r5, #12
 8002582:	2d00      	cmp	r5, #0
 8002584:	4606      	mov	r6, r0
 8002586:	db01      	blt.n	800258c <_malloc_r+0x1c>
 8002588:	42a9      	cmp	r1, r5
 800258a:	d904      	bls.n	8002596 <_malloc_r+0x26>
 800258c:	230c      	movs	r3, #12
 800258e:	6033      	str	r3, [r6, #0]
 8002590:	2000      	movs	r0, #0
 8002592:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8002596:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 800266c <_malloc_r+0xfc>
 800259a:	f000 f869 	bl	8002670 <__malloc_lock>
 800259e:	f8d8 3000 	ldr.w	r3, [r8]
 80025a2:	461c      	mov	r4, r3
 80025a4:	bb44      	cbnz	r4, 80025f8 <_malloc_r+0x88>
 80025a6:	4629      	mov	r1, r5
 80025a8:	4630      	mov	r0, r6
 80025aa:	f7ff ffbf 	bl	800252c <sbrk_aligned>
 80025ae:	1c43      	adds	r3, r0, #1
 80025b0:	4604      	mov	r4, r0
 80025b2:	d158      	bne.n	8002666 <_malloc_r+0xf6>
 80025b4:	f8d8 4000 	ldr.w	r4, [r8]
 80025b8:	4627      	mov	r7, r4
 80025ba:	2f00      	cmp	r7, #0
 80025bc:	d143      	bne.n	8002646 <_malloc_r+0xd6>
 80025be:	2c00      	cmp	r4, #0
 80025c0:	d04b      	beq.n	800265a <_malloc_r+0xea>
 80025c2:	6823      	ldr	r3, [r4, #0]
 80025c4:	4639      	mov	r1, r7
 80025c6:	4630      	mov	r0, r6
 80025c8:	eb04 0903 	add.w	r9, r4, r3
 80025cc:	f000 fc8e 	bl	8002eec <_sbrk_r>
 80025d0:	4581      	cmp	r9, r0
 80025d2:	d142      	bne.n	800265a <_malloc_r+0xea>
 80025d4:	6821      	ldr	r1, [r4, #0]
 80025d6:	1a6d      	subs	r5, r5, r1
 80025d8:	4629      	mov	r1, r5
 80025da:	4630      	mov	r0, r6
 80025dc:	f7ff ffa6 	bl	800252c <sbrk_aligned>
 80025e0:	3001      	adds	r0, #1
 80025e2:	d03a      	beq.n	800265a <_malloc_r+0xea>
 80025e4:	6823      	ldr	r3, [r4, #0]
 80025e6:	442b      	add	r3, r5
 80025e8:	6023      	str	r3, [r4, #0]
 80025ea:	f8d8 3000 	ldr.w	r3, [r8]
 80025ee:	685a      	ldr	r2, [r3, #4]
 80025f0:	bb62      	cbnz	r2, 800264c <_malloc_r+0xdc>
 80025f2:	f8c8 7000 	str.w	r7, [r8]
 80025f6:	e00f      	b.n	8002618 <_malloc_r+0xa8>
 80025f8:	6822      	ldr	r2, [r4, #0]
 80025fa:	1b52      	subs	r2, r2, r5
 80025fc:	d420      	bmi.n	8002640 <_malloc_r+0xd0>
 80025fe:	2a0b      	cmp	r2, #11
 8002600:	d917      	bls.n	8002632 <_malloc_r+0xc2>
 8002602:	1961      	adds	r1, r4, r5
 8002604:	42a3      	cmp	r3, r4
 8002606:	6025      	str	r5, [r4, #0]
 8002608:	bf18      	it	ne
 800260a:	6059      	strne	r1, [r3, #4]
 800260c:	6863      	ldr	r3, [r4, #4]
 800260e:	bf08      	it	eq
 8002610:	f8c8 1000 	streq.w	r1, [r8]
 8002614:	5162      	str	r2, [r4, r5]
 8002616:	604b      	str	r3, [r1, #4]
 8002618:	4630      	mov	r0, r6
 800261a:	f000 f82f 	bl	800267c <__malloc_unlock>
 800261e:	f104 000b 	add.w	r0, r4, #11
 8002622:	1d23      	adds	r3, r4, #4
 8002624:	f020 0007 	bic.w	r0, r0, #7
 8002628:	1ac2      	subs	r2, r0, r3
 800262a:	bf1c      	itt	ne
 800262c:	1a1b      	subne	r3, r3, r0
 800262e:	50a3      	strne	r3, [r4, r2]
 8002630:	e7af      	b.n	8002592 <_malloc_r+0x22>
 8002632:	6862      	ldr	r2, [r4, #4]
 8002634:	42a3      	cmp	r3, r4
 8002636:	bf0c      	ite	eq
 8002638:	f8c8 2000 	streq.w	r2, [r8]
 800263c:	605a      	strne	r2, [r3, #4]
 800263e:	e7eb      	b.n	8002618 <_malloc_r+0xa8>
 8002640:	4623      	mov	r3, r4
 8002642:	6864      	ldr	r4, [r4, #4]
 8002644:	e7ae      	b.n	80025a4 <_malloc_r+0x34>
 8002646:	463c      	mov	r4, r7
 8002648:	687f      	ldr	r7, [r7, #4]
 800264a:	e7b6      	b.n	80025ba <_malloc_r+0x4a>
 800264c:	461a      	mov	r2, r3
 800264e:	685b      	ldr	r3, [r3, #4]
 8002650:	42a3      	cmp	r3, r4
 8002652:	d1fb      	bne.n	800264c <_malloc_r+0xdc>
 8002654:	2300      	movs	r3, #0
 8002656:	6053      	str	r3, [r2, #4]
 8002658:	e7de      	b.n	8002618 <_malloc_r+0xa8>
 800265a:	230c      	movs	r3, #12
 800265c:	6033      	str	r3, [r6, #0]
 800265e:	4630      	mov	r0, r6
 8002660:	f000 f80c 	bl	800267c <__malloc_unlock>
 8002664:	e794      	b.n	8002590 <_malloc_r+0x20>
 8002666:	6005      	str	r5, [r0, #0]
 8002668:	e7d6      	b.n	8002618 <_malloc_r+0xa8>
 800266a:	bf00      	nop
 800266c:	2000032c 	.word	0x2000032c

08002670 <__malloc_lock>:
 8002670:	4801      	ldr	r0, [pc, #4]	@ (8002678 <__malloc_lock+0x8>)
 8002672:	f7ff b89c 	b.w	80017ae <__retarget_lock_acquire_recursive>
 8002676:	bf00      	nop
 8002678:	20000324 	.word	0x20000324

0800267c <__malloc_unlock>:
 800267c:	4801      	ldr	r0, [pc, #4]	@ (8002684 <__malloc_unlock+0x8>)
 800267e:	f7ff b897 	b.w	80017b0 <__retarget_lock_release_recursive>
 8002682:	bf00      	nop
 8002684:	20000324 	.word	0x20000324

08002688 <_Balloc>:
 8002688:	b570      	push	{r4, r5, r6, lr}
 800268a:	69c4      	ldr	r4, [r0, #28]
 800268c:	4605      	mov	r5, r0
 800268e:	460e      	mov	r6, r1
 8002690:	b984      	cbnz	r4, 80026b4 <_Balloc+0x2c>
 8002692:	2010      	movs	r0, #16
 8002694:	f7ff ff42 	bl	800251c <malloc>
 8002698:	4604      	mov	r4, r0
 800269a:	61e8      	str	r0, [r5, #28]
 800269c:	b928      	cbnz	r0, 80026aa <_Balloc+0x22>
 800269e:	4602      	mov	r2, r0
 80026a0:	4b16      	ldr	r3, [pc, #88]	@ (80026fc <_Balloc+0x74>)
 80026a2:	4817      	ldr	r0, [pc, #92]	@ (8002700 <_Balloc+0x78>)
 80026a4:	216b      	movs	r1, #107	@ 0x6b
 80026a6:	f000 fc3f 	bl	8002f28 <__assert_func>
 80026aa:	2300      	movs	r3, #0
 80026ac:	e9c0 3301 	strd	r3, r3, [r0, #4]
 80026b0:	6003      	str	r3, [r0, #0]
 80026b2:	60c3      	str	r3, [r0, #12]
 80026b4:	68e3      	ldr	r3, [r4, #12]
 80026b6:	b953      	cbnz	r3, 80026ce <_Balloc+0x46>
 80026b8:	2221      	movs	r2, #33	@ 0x21
 80026ba:	2104      	movs	r1, #4
 80026bc:	4628      	mov	r0, r5
 80026be:	f000 fc51 	bl	8002f64 <_calloc_r>
 80026c2:	69eb      	ldr	r3, [r5, #28]
 80026c4:	60e0      	str	r0, [r4, #12]
 80026c6:	68db      	ldr	r3, [r3, #12]
 80026c8:	b90b      	cbnz	r3, 80026ce <_Balloc+0x46>
 80026ca:	2000      	movs	r0, #0
 80026cc:	bd70      	pop	{r4, r5, r6, pc}
 80026ce:	f853 0026 	ldr.w	r0, [r3, r6, lsl #2]
 80026d2:	b130      	cbz	r0, 80026e2 <_Balloc+0x5a>
 80026d4:	6802      	ldr	r2, [r0, #0]
 80026d6:	f843 2026 	str.w	r2, [r3, r6, lsl #2]
 80026da:	2300      	movs	r3, #0
 80026dc:	e9c0 3303 	strd	r3, r3, [r0, #12]
 80026e0:	e7f4      	b.n	80026cc <_Balloc+0x44>
 80026e2:	2101      	movs	r1, #1
 80026e4:	fa01 f406 	lsl.w	r4, r1, r6
 80026e8:	1d62      	adds	r2, r4, #5
 80026ea:	0092      	lsls	r2, r2, #2
 80026ec:	4628      	mov	r0, r5
 80026ee:	f000 fc39 	bl	8002f64 <_calloc_r>
 80026f2:	2800      	cmp	r0, #0
 80026f4:	d0e9      	beq.n	80026ca <_Balloc+0x42>
 80026f6:	e9c0 6401 	strd	r6, r4, [r0, #4]
 80026fa:	e7ee      	b.n	80026da <_Balloc+0x52>
 80026fc:	0800412d 	.word	0x0800412d
 8002700:	080041ae 	.word	0x080041ae

08002704 <_Bfree>:
 8002704:	b570      	push	{r4, r5, r6, lr}
 8002706:	69c6      	ldr	r6, [r0, #28]
 8002708:	4605      	mov	r5, r0
 800270a:	460c      	mov	r4, r1
 800270c:	b976      	cbnz	r6, 800272c <_Bfree+0x28>
 800270e:	2010      	movs	r0, #16
 8002710:	f7ff ff04 	bl	800251c <malloc>
 8002714:	4602      	mov	r2, r0
 8002716:	61e8      	str	r0, [r5, #28]
 8002718:	b920      	cbnz	r0, 8002724 <_Bfree+0x20>
 800271a:	4b09      	ldr	r3, [pc, #36]	@ (8002740 <_Bfree+0x3c>)
 800271c:	4809      	ldr	r0, [pc, #36]	@ (8002744 <_Bfree+0x40>)
 800271e:	218f      	movs	r1, #143	@ 0x8f
 8002720:	f000 fc02 	bl	8002f28 <__assert_func>
 8002724:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8002728:	6006      	str	r6, [r0, #0]
 800272a:	60c6      	str	r6, [r0, #12]
 800272c:	b13c      	cbz	r4, 800273e <_Bfree+0x3a>
 800272e:	69eb      	ldr	r3, [r5, #28]
 8002730:	6862      	ldr	r2, [r4, #4]
 8002732:	68db      	ldr	r3, [r3, #12]
 8002734:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8002738:	6021      	str	r1, [r4, #0]
 800273a:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 800273e:	bd70      	pop	{r4, r5, r6, pc}
 8002740:	0800412d 	.word	0x0800412d
 8002744:	080041ae 	.word	0x080041ae

08002748 <__multadd>:
 8002748:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800274c:	690d      	ldr	r5, [r1, #16]
 800274e:	4607      	mov	r7, r0
 8002750:	460c      	mov	r4, r1
 8002752:	461e      	mov	r6, r3
 8002754:	f101 0c14 	add.w	ip, r1, #20
 8002758:	2000      	movs	r0, #0
 800275a:	f8dc 3000 	ldr.w	r3, [ip]
 800275e:	b299      	uxth	r1, r3
 8002760:	fb02 6101 	mla	r1, r2, r1, r6
 8002764:	0c1e      	lsrs	r6, r3, #16
 8002766:	0c0b      	lsrs	r3, r1, #16
 8002768:	fb02 3306 	mla	r3, r2, r6, r3
 800276c:	b289      	uxth	r1, r1
 800276e:	3001      	adds	r0, #1
 8002770:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 8002774:	4285      	cmp	r5, r0
 8002776:	f84c 1b04 	str.w	r1, [ip], #4
 800277a:	ea4f 4613 	mov.w	r6, r3, lsr #16
 800277e:	dcec      	bgt.n	800275a <__multadd+0x12>
 8002780:	b30e      	cbz	r6, 80027c6 <__multadd+0x7e>
 8002782:	68a3      	ldr	r3, [r4, #8]
 8002784:	42ab      	cmp	r3, r5
 8002786:	dc19      	bgt.n	80027bc <__multadd+0x74>
 8002788:	6861      	ldr	r1, [r4, #4]
 800278a:	4638      	mov	r0, r7
 800278c:	3101      	adds	r1, #1
 800278e:	f7ff ff7b 	bl	8002688 <_Balloc>
 8002792:	4680      	mov	r8, r0
 8002794:	b928      	cbnz	r0, 80027a2 <__multadd+0x5a>
 8002796:	4602      	mov	r2, r0
 8002798:	4b0c      	ldr	r3, [pc, #48]	@ (80027cc <__multadd+0x84>)
 800279a:	480d      	ldr	r0, [pc, #52]	@ (80027d0 <__multadd+0x88>)
 800279c:	21ba      	movs	r1, #186	@ 0xba
 800279e:	f000 fbc3 	bl	8002f28 <__assert_func>
 80027a2:	6922      	ldr	r2, [r4, #16]
 80027a4:	3202      	adds	r2, #2
 80027a6:	f104 010c 	add.w	r1, r4, #12
 80027aa:	0092      	lsls	r2, r2, #2
 80027ac:	300c      	adds	r0, #12
 80027ae:	f000 fbad 	bl	8002f0c <memcpy>
 80027b2:	4621      	mov	r1, r4
 80027b4:	4638      	mov	r0, r7
 80027b6:	f7ff ffa5 	bl	8002704 <_Bfree>
 80027ba:	4644      	mov	r4, r8
 80027bc:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 80027c0:	3501      	adds	r5, #1
 80027c2:	615e      	str	r6, [r3, #20]
 80027c4:	6125      	str	r5, [r4, #16]
 80027c6:	4620      	mov	r0, r4
 80027c8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80027cc:	0800419d 	.word	0x0800419d
 80027d0:	080041ae 	.word	0x080041ae

080027d4 <__hi0bits>:
 80027d4:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
 80027d8:	4603      	mov	r3, r0
 80027da:	bf36      	itet	cc
 80027dc:	0403      	lslcc	r3, r0, #16
 80027de:	2000      	movcs	r0, #0
 80027e0:	2010      	movcc	r0, #16
 80027e2:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 80027e6:	bf3c      	itt	cc
 80027e8:	021b      	lslcc	r3, r3, #8
 80027ea:	3008      	addcc	r0, #8
 80027ec:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 80027f0:	bf3c      	itt	cc
 80027f2:	011b      	lslcc	r3, r3, #4
 80027f4:	3004      	addcc	r0, #4
 80027f6:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80027fa:	bf3c      	itt	cc
 80027fc:	009b      	lslcc	r3, r3, #2
 80027fe:	3002      	addcc	r0, #2
 8002800:	2b00      	cmp	r3, #0
 8002802:	db05      	blt.n	8002810 <__hi0bits+0x3c>
 8002804:	f013 4f80 	tst.w	r3, #1073741824	@ 0x40000000
 8002808:	f100 0001 	add.w	r0, r0, #1
 800280c:	bf08      	it	eq
 800280e:	2020      	moveq	r0, #32
 8002810:	4770      	bx	lr

08002812 <__lo0bits>:
 8002812:	6803      	ldr	r3, [r0, #0]
 8002814:	4602      	mov	r2, r0
 8002816:	f013 0007 	ands.w	r0, r3, #7
 800281a:	d00b      	beq.n	8002834 <__lo0bits+0x22>
 800281c:	07d9      	lsls	r1, r3, #31
 800281e:	d421      	bmi.n	8002864 <__lo0bits+0x52>
 8002820:	0798      	lsls	r0, r3, #30
 8002822:	bf49      	itett	mi
 8002824:	085b      	lsrmi	r3, r3, #1
 8002826:	089b      	lsrpl	r3, r3, #2
 8002828:	2001      	movmi	r0, #1
 800282a:	6013      	strmi	r3, [r2, #0]
 800282c:	bf5c      	itt	pl
 800282e:	6013      	strpl	r3, [r2, #0]
 8002830:	2002      	movpl	r0, #2
 8002832:	4770      	bx	lr
 8002834:	b299      	uxth	r1, r3
 8002836:	b909      	cbnz	r1, 800283c <__lo0bits+0x2a>
 8002838:	0c1b      	lsrs	r3, r3, #16
 800283a:	2010      	movs	r0, #16
 800283c:	b2d9      	uxtb	r1, r3
 800283e:	b909      	cbnz	r1, 8002844 <__lo0bits+0x32>
 8002840:	3008      	adds	r0, #8
 8002842:	0a1b      	lsrs	r3, r3, #8
 8002844:	0719      	lsls	r1, r3, #28
 8002846:	bf04      	itt	eq
 8002848:	091b      	lsreq	r3, r3, #4
 800284a:	3004      	addeq	r0, #4
 800284c:	0799      	lsls	r1, r3, #30
 800284e:	bf04      	itt	eq
 8002850:	089b      	lsreq	r3, r3, #2
 8002852:	3002      	addeq	r0, #2
 8002854:	07d9      	lsls	r1, r3, #31
 8002856:	d403      	bmi.n	8002860 <__lo0bits+0x4e>
 8002858:	085b      	lsrs	r3, r3, #1
 800285a:	f100 0001 	add.w	r0, r0, #1
 800285e:	d003      	beq.n	8002868 <__lo0bits+0x56>
 8002860:	6013      	str	r3, [r2, #0]
 8002862:	4770      	bx	lr
 8002864:	2000      	movs	r0, #0
 8002866:	4770      	bx	lr
 8002868:	2020      	movs	r0, #32
 800286a:	4770      	bx	lr

0800286c <__i2b>:
 800286c:	b510      	push	{r4, lr}
 800286e:	460c      	mov	r4, r1
 8002870:	2101      	movs	r1, #1
 8002872:	f7ff ff09 	bl	8002688 <_Balloc>
 8002876:	4602      	mov	r2, r0
 8002878:	b928      	cbnz	r0, 8002886 <__i2b+0x1a>
 800287a:	4b05      	ldr	r3, [pc, #20]	@ (8002890 <__i2b+0x24>)
 800287c:	4805      	ldr	r0, [pc, #20]	@ (8002894 <__i2b+0x28>)
 800287e:	f240 1145 	movw	r1, #325	@ 0x145
 8002882:	f000 fb51 	bl	8002f28 <__assert_func>
 8002886:	2301      	movs	r3, #1
 8002888:	6144      	str	r4, [r0, #20]
 800288a:	6103      	str	r3, [r0, #16]
 800288c:	bd10      	pop	{r4, pc}
 800288e:	bf00      	nop
 8002890:	0800419d 	.word	0x0800419d
 8002894:	080041ae 	.word	0x080041ae

08002898 <__multiply>:
 8002898:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800289c:	f8d1 9010 	ldr.w	r9, [r1, #16]
 80028a0:	f8d2 a010 	ldr.w	sl, [r2, #16]
 80028a4:	45d1      	cmp	r9, sl
 80028a6:	b085      	sub	sp, #20
 80028a8:	4688      	mov	r8, r1
 80028aa:	4614      	mov	r4, r2
 80028ac:	db04      	blt.n	80028b8 <__multiply+0x20>
 80028ae:	4653      	mov	r3, sl
 80028b0:	460c      	mov	r4, r1
 80028b2:	46ca      	mov	sl, r9
 80028b4:	4690      	mov	r8, r2
 80028b6:	4699      	mov	r9, r3
 80028b8:	68a3      	ldr	r3, [r4, #8]
 80028ba:	6861      	ldr	r1, [r4, #4]
 80028bc:	eb0a 0609 	add.w	r6, sl, r9
 80028c0:	42b3      	cmp	r3, r6
 80028c2:	bfb8      	it	lt
 80028c4:	3101      	addlt	r1, #1
 80028c6:	f7ff fedf 	bl	8002688 <_Balloc>
 80028ca:	b930      	cbnz	r0, 80028da <__multiply+0x42>
 80028cc:	4602      	mov	r2, r0
 80028ce:	4b45      	ldr	r3, [pc, #276]	@ (80029e4 <__multiply+0x14c>)
 80028d0:	4845      	ldr	r0, [pc, #276]	@ (80029e8 <__multiply+0x150>)
 80028d2:	f44f 71b1 	mov.w	r1, #354	@ 0x162
 80028d6:	f000 fb27 	bl	8002f28 <__assert_func>
 80028da:	f100 0514 	add.w	r5, r0, #20
 80028de:	eb05 0786 	add.w	r7, r5, r6, lsl #2
 80028e2:	462b      	mov	r3, r5
 80028e4:	2200      	movs	r2, #0
 80028e6:	42bb      	cmp	r3, r7
 80028e8:	d31f      	bcc.n	800292a <__multiply+0x92>
 80028ea:	f104 0c14 	add.w	ip, r4, #20
 80028ee:	f108 0114 	add.w	r1, r8, #20
 80028f2:	eb0c 038a 	add.w	r3, ip, sl, lsl #2
 80028f6:	eb01 0289 	add.w	r2, r1, r9, lsl #2
 80028fa:	9202      	str	r2, [sp, #8]
 80028fc:	1b1a      	subs	r2, r3, r4
 80028fe:	3a15      	subs	r2, #21
 8002900:	f022 0203 	bic.w	r2, r2, #3
 8002904:	3415      	adds	r4, #21
 8002906:	429c      	cmp	r4, r3
 8002908:	bf88      	it	hi
 800290a:	2200      	movhi	r2, #0
 800290c:	9201      	str	r2, [sp, #4]
 800290e:	9a02      	ldr	r2, [sp, #8]
 8002910:	9103      	str	r1, [sp, #12]
 8002912:	428a      	cmp	r2, r1
 8002914:	d80c      	bhi.n	8002930 <__multiply+0x98>
 8002916:	2e00      	cmp	r6, #0
 8002918:	dd03      	ble.n	8002922 <__multiply+0x8a>
 800291a:	f857 3d04 	ldr.w	r3, [r7, #-4]!
 800291e:	2b00      	cmp	r3, #0
 8002920:	d05d      	beq.n	80029de <__multiply+0x146>
 8002922:	6106      	str	r6, [r0, #16]
 8002924:	b005      	add	sp, #20
 8002926:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800292a:	f843 2b04 	str.w	r2, [r3], #4
 800292e:	e7da      	b.n	80028e6 <__multiply+0x4e>
 8002930:	f8b1 a000 	ldrh.w	sl, [r1]
 8002934:	f1ba 0f00 	cmp.w	sl, #0
 8002938:	d024      	beq.n	8002984 <__multiply+0xec>
 800293a:	46e0      	mov	r8, ip
 800293c:	46a9      	mov	r9, r5
 800293e:	f04f 0e00 	mov.w	lr, #0
 8002942:	f858 2b04 	ldr.w	r2, [r8], #4
 8002946:	f8d9 4000 	ldr.w	r4, [r9]
 800294a:	fa1f fb82 	uxth.w	fp, r2
 800294e:	b2a4      	uxth	r4, r4
 8002950:	fb0a 440b 	mla	r4, sl, fp, r4
 8002954:	ea4f 4b12 	mov.w	fp, r2, lsr #16
 8002958:	f8d9 2000 	ldr.w	r2, [r9]
 800295c:	4474      	add	r4, lr
 800295e:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 8002962:	fb0a e20b 	mla	r2, sl, fp, lr
 8002966:	eb02 4214 	add.w	r2, r2, r4, lsr #16
 800296a:	b2a4      	uxth	r4, r4
 800296c:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8002970:	4543      	cmp	r3, r8
 8002972:	f849 4b04 	str.w	r4, [r9], #4
 8002976:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 800297a:	d8e2      	bhi.n	8002942 <__multiply+0xaa>
 800297c:	9a01      	ldr	r2, [sp, #4]
 800297e:	18aa      	adds	r2, r5, r2
 8002980:	f8c2 e004 	str.w	lr, [r2, #4]
 8002984:	9a03      	ldr	r2, [sp, #12]
 8002986:	f8b2 8002 	ldrh.w	r8, [r2, #2]
 800298a:	3104      	adds	r1, #4
 800298c:	f1b8 0f00 	cmp.w	r8, #0
 8002990:	d023      	beq.n	80029da <__multiply+0x142>
 8002992:	682a      	ldr	r2, [r5, #0]
 8002994:	46e6      	mov	lr, ip
 8002996:	4691      	mov	r9, r2
 8002998:	46aa      	mov	sl, r5
 800299a:	f04f 0b00 	mov.w	fp, #0
 800299e:	f8be 4000 	ldrh.w	r4, [lr]
 80029a2:	fb08 b404 	mla	r4, r8, r4, fp
 80029a6:	eb04 4419 	add.w	r4, r4, r9, lsr #16
 80029aa:	b292      	uxth	r2, r2
 80029ac:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 80029b0:	f84a 2b04 	str.w	r2, [sl], #4
 80029b4:	f85e 2b04 	ldr.w	r2, [lr], #4
 80029b8:	f8da 9000 	ldr.w	r9, [sl]
 80029bc:	ea4f 4b12 	mov.w	fp, r2, lsr #16
 80029c0:	fa1f f289 	uxth.w	r2, r9
 80029c4:	fb08 220b 	mla	r2, r8, fp, r2
 80029c8:	eb02 4214 	add.w	r2, r2, r4, lsr #16
 80029cc:	4573      	cmp	r3, lr
 80029ce:	ea4f 4b12 	mov.w	fp, r2, lsr #16
 80029d2:	d8e4      	bhi.n	800299e <__multiply+0x106>
 80029d4:	9c01      	ldr	r4, [sp, #4]
 80029d6:	192c      	adds	r4, r5, r4
 80029d8:	6062      	str	r2, [r4, #4]
 80029da:	3504      	adds	r5, #4
 80029dc:	e797      	b.n	800290e <__multiply+0x76>
 80029de:	3e01      	subs	r6, #1
 80029e0:	e799      	b.n	8002916 <__multiply+0x7e>
 80029e2:	bf00      	nop
 80029e4:	0800419d 	.word	0x0800419d
 80029e8:	080041ae 	.word	0x080041ae

080029ec <__pow5mult>:
 80029ec:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80029f0:	4617      	mov	r7, r2
 80029f2:	f012 0203 	ands.w	r2, r2, #3
 80029f6:	4680      	mov	r8, r0
 80029f8:	460d      	mov	r5, r1
 80029fa:	d007      	beq.n	8002a0c <__pow5mult+0x20>
 80029fc:	4c26      	ldr	r4, [pc, #152]	@ (8002a98 <__pow5mult+0xac>)
 80029fe:	3a01      	subs	r2, #1
 8002a00:	2300      	movs	r3, #0
 8002a02:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 8002a06:	f7ff fe9f 	bl	8002748 <__multadd>
 8002a0a:	4605      	mov	r5, r0
 8002a0c:	10bf      	asrs	r7, r7, #2
 8002a0e:	d03f      	beq.n	8002a90 <__pow5mult+0xa4>
 8002a10:	f8d8 401c 	ldr.w	r4, [r8, #28]
 8002a14:	b994      	cbnz	r4, 8002a3c <__pow5mult+0x50>
 8002a16:	2010      	movs	r0, #16
 8002a18:	f7ff fd80 	bl	800251c <malloc>
 8002a1c:	4604      	mov	r4, r0
 8002a1e:	f8c8 001c 	str.w	r0, [r8, #28]
 8002a22:	b930      	cbnz	r0, 8002a32 <__pow5mult+0x46>
 8002a24:	4602      	mov	r2, r0
 8002a26:	4b1d      	ldr	r3, [pc, #116]	@ (8002a9c <__pow5mult+0xb0>)
 8002a28:	481d      	ldr	r0, [pc, #116]	@ (8002aa0 <__pow5mult+0xb4>)
 8002a2a:	f240 11b3 	movw	r1, #435	@ 0x1b3
 8002a2e:	f000 fa7b 	bl	8002f28 <__assert_func>
 8002a32:	2300      	movs	r3, #0
 8002a34:	e9c0 3301 	strd	r3, r3, [r0, #4]
 8002a38:	6003      	str	r3, [r0, #0]
 8002a3a:	60c3      	str	r3, [r0, #12]
 8002a3c:	68a6      	ldr	r6, [r4, #8]
 8002a3e:	b946      	cbnz	r6, 8002a52 <__pow5mult+0x66>
 8002a40:	f240 2171 	movw	r1, #625	@ 0x271
 8002a44:	4640      	mov	r0, r8
 8002a46:	f7ff ff11 	bl	800286c <__i2b>
 8002a4a:	2300      	movs	r3, #0
 8002a4c:	60a0      	str	r0, [r4, #8]
 8002a4e:	4606      	mov	r6, r0
 8002a50:	6003      	str	r3, [r0, #0]
 8002a52:	462c      	mov	r4, r5
 8002a54:	f04f 0900 	mov.w	r9, #0
 8002a58:	f007 0301 	and.w	r3, r7, #1
 8002a5c:	107f      	asrs	r7, r7, #1
 8002a5e:	b153      	cbz	r3, 8002a76 <__pow5mult+0x8a>
 8002a60:	4629      	mov	r1, r5
 8002a62:	4632      	mov	r2, r6
 8002a64:	4640      	mov	r0, r8
 8002a66:	f7ff ff17 	bl	8002898 <__multiply>
 8002a6a:	4621      	mov	r1, r4
 8002a6c:	4605      	mov	r5, r0
 8002a6e:	4640      	mov	r0, r8
 8002a70:	f7ff fe48 	bl	8002704 <_Bfree>
 8002a74:	b167      	cbz	r7, 8002a90 <__pow5mult+0xa4>
 8002a76:	6830      	ldr	r0, [r6, #0]
 8002a78:	b938      	cbnz	r0, 8002a8a <__pow5mult+0x9e>
 8002a7a:	4632      	mov	r2, r6
 8002a7c:	4631      	mov	r1, r6
 8002a7e:	4640      	mov	r0, r8
 8002a80:	f7ff ff0a 	bl	8002898 <__multiply>
 8002a84:	6030      	str	r0, [r6, #0]
 8002a86:	f8c0 9000 	str.w	r9, [r0]
 8002a8a:	4606      	mov	r6, r0
 8002a8c:	462c      	mov	r4, r5
 8002a8e:	e7e3      	b.n	8002a58 <__pow5mult+0x6c>
 8002a90:	4628      	mov	r0, r5
 8002a92:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8002a96:	bf00      	nop
 8002a98:	08004260 	.word	0x08004260
 8002a9c:	0800412d 	.word	0x0800412d
 8002aa0:	080041ae 	.word	0x080041ae

08002aa4 <__lshift>:
 8002aa4:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002aa8:	460c      	mov	r4, r1
 8002aaa:	6849      	ldr	r1, [r1, #4]
 8002aac:	6923      	ldr	r3, [r4, #16]
 8002aae:	eb03 1862 	add.w	r8, r3, r2, asr #5
 8002ab2:	68a3      	ldr	r3, [r4, #8]
 8002ab4:	4607      	mov	r7, r0
 8002ab6:	4615      	mov	r5, r2
 8002ab8:	ea4f 1a62 	mov.w	sl, r2, asr #5
 8002abc:	f108 0901 	add.w	r9, r8, #1
 8002ac0:	454b      	cmp	r3, r9
 8002ac2:	db0b      	blt.n	8002adc <__lshift+0x38>
 8002ac4:	4638      	mov	r0, r7
 8002ac6:	f7ff fddf 	bl	8002688 <_Balloc>
 8002aca:	4606      	mov	r6, r0
 8002acc:	b948      	cbnz	r0, 8002ae2 <__lshift+0x3e>
 8002ace:	4602      	mov	r2, r0
 8002ad0:	4b29      	ldr	r3, [pc, #164]	@ (8002b78 <__lshift+0xd4>)
 8002ad2:	482a      	ldr	r0, [pc, #168]	@ (8002b7c <__lshift+0xd8>)
 8002ad4:	f44f 71ef 	mov.w	r1, #478	@ 0x1de
 8002ad8:	f000 fa26 	bl	8002f28 <__assert_func>
 8002adc:	3101      	adds	r1, #1
 8002ade:	005b      	lsls	r3, r3, #1
 8002ae0:	e7ee      	b.n	8002ac0 <__lshift+0x1c>
 8002ae2:	2300      	movs	r3, #0
 8002ae4:	f100 0c14 	add.w	ip, r0, #20
 8002ae8:	f100 0210 	add.w	r2, r0, #16
 8002aec:	4619      	mov	r1, r3
 8002aee:	4553      	cmp	r3, sl
 8002af0:	db35      	blt.n	8002b5e <__lshift+0xba>
 8002af2:	6922      	ldr	r2, [r4, #16]
 8002af4:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8002af8:	eb0c 0c8a 	add.w	ip, ip, sl, lsl #2
 8002afc:	f104 0314 	add.w	r3, r4, #20
 8002b00:	f015 0e1f 	ands.w	lr, r5, #31
 8002b04:	4661      	mov	r1, ip
 8002b06:	eb03 0282 	add.w	r2, r3, r2, lsl #2
 8002b0a:	d02c      	beq.n	8002b66 <__lshift+0xc2>
 8002b0c:	f1ce 0a20 	rsb	sl, lr, #32
 8002b10:	2500      	movs	r5, #0
 8002b12:	6818      	ldr	r0, [r3, #0]
 8002b14:	468b      	mov	fp, r1
 8002b16:	fa00 f00e 	lsl.w	r0, r0, lr
 8002b1a:	4328      	orrs	r0, r5
 8002b1c:	f8cb 0000 	str.w	r0, [fp]
 8002b20:	f853 5b04 	ldr.w	r5, [r3], #4
 8002b24:	429a      	cmp	r2, r3
 8002b26:	f101 0104 	add.w	r1, r1, #4
 8002b2a:	fa25 f50a 	lsr.w	r5, r5, sl
 8002b2e:	d8f0      	bhi.n	8002b12 <__lshift+0x6e>
 8002b30:	1b13      	subs	r3, r2, r4
 8002b32:	3b15      	subs	r3, #21
 8002b34:	f023 0303 	bic.w	r3, r3, #3
 8002b38:	f104 0115 	add.w	r1, r4, #21
 8002b3c:	428a      	cmp	r2, r1
 8002b3e:	bf38      	it	cc
 8002b40:	2300      	movcc	r3, #0
 8002b42:	449c      	add	ip, r3
 8002b44:	f8cc 5004 	str.w	r5, [ip, #4]
 8002b48:	b905      	cbnz	r5, 8002b4c <__lshift+0xa8>
 8002b4a:	46c1      	mov	r9, r8
 8002b4c:	4638      	mov	r0, r7
 8002b4e:	f8c6 9010 	str.w	r9, [r6, #16]
 8002b52:	4621      	mov	r1, r4
 8002b54:	f7ff fdd6 	bl	8002704 <_Bfree>
 8002b58:	4630      	mov	r0, r6
 8002b5a:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002b5e:	f842 1f04 	str.w	r1, [r2, #4]!
 8002b62:	3301      	adds	r3, #1
 8002b64:	e7c3      	b.n	8002aee <__lshift+0x4a>
 8002b66:	f853 5b04 	ldr.w	r5, [r3], #4
 8002b6a:	600d      	str	r5, [r1, #0]
 8002b6c:	429a      	cmp	r2, r3
 8002b6e:	f101 0104 	add.w	r1, r1, #4
 8002b72:	d8f8      	bhi.n	8002b66 <__lshift+0xc2>
 8002b74:	e7e9      	b.n	8002b4a <__lshift+0xa6>
 8002b76:	bf00      	nop
 8002b78:	0800419d 	.word	0x0800419d
 8002b7c:	080041ae 	.word	0x080041ae

08002b80 <__mcmp>:
 8002b80:	690a      	ldr	r2, [r1, #16]
 8002b82:	4603      	mov	r3, r0
 8002b84:	6900      	ldr	r0, [r0, #16]
 8002b86:	1a80      	subs	r0, r0, r2
 8002b88:	b530      	push	{r4, r5, lr}
 8002b8a:	d10e      	bne.n	8002baa <__mcmp+0x2a>
 8002b8c:	3314      	adds	r3, #20
 8002b8e:	3114      	adds	r1, #20
 8002b90:	eb03 0482 	add.w	r4, r3, r2, lsl #2
 8002b94:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 8002b98:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 8002b9c:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 8002ba0:	4295      	cmp	r5, r2
 8002ba2:	d003      	beq.n	8002bac <__mcmp+0x2c>
 8002ba4:	d205      	bcs.n	8002bb2 <__mcmp+0x32>
 8002ba6:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8002baa:	bd30      	pop	{r4, r5, pc}
 8002bac:	42a3      	cmp	r3, r4
 8002bae:	d3f3      	bcc.n	8002b98 <__mcmp+0x18>
 8002bb0:	e7fb      	b.n	8002baa <__mcmp+0x2a>
 8002bb2:	2001      	movs	r0, #1
 8002bb4:	e7f9      	b.n	8002baa <__mcmp+0x2a>
	...

08002bb8 <__mdiff>:
 8002bb8:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002bbc:	468a      	mov	sl, r1
 8002bbe:	4606      	mov	r6, r0
 8002bc0:	4611      	mov	r1, r2
 8002bc2:	4650      	mov	r0, sl
 8002bc4:	4614      	mov	r4, r2
 8002bc6:	f7ff ffdb 	bl	8002b80 <__mcmp>
 8002bca:	1e05      	subs	r5, r0, #0
 8002bcc:	d112      	bne.n	8002bf4 <__mdiff+0x3c>
 8002bce:	4629      	mov	r1, r5
 8002bd0:	4630      	mov	r0, r6
 8002bd2:	f7ff fd59 	bl	8002688 <_Balloc>
 8002bd6:	4602      	mov	r2, r0
 8002bd8:	b928      	cbnz	r0, 8002be6 <__mdiff+0x2e>
 8002bda:	4b41      	ldr	r3, [pc, #260]	@ (8002ce0 <__mdiff+0x128>)
 8002bdc:	f240 2137 	movw	r1, #567	@ 0x237
 8002be0:	4840      	ldr	r0, [pc, #256]	@ (8002ce4 <__mdiff+0x12c>)
 8002be2:	f000 f9a1 	bl	8002f28 <__assert_func>
 8002be6:	2301      	movs	r3, #1
 8002be8:	e9c0 3504 	strd	r3, r5, [r0, #16]
 8002bec:	4610      	mov	r0, r2
 8002bee:	b003      	add	sp, #12
 8002bf0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002bf4:	bfbc      	itt	lt
 8002bf6:	4653      	movlt	r3, sl
 8002bf8:	46a2      	movlt	sl, r4
 8002bfa:	4630      	mov	r0, r6
 8002bfc:	f8da 1004 	ldr.w	r1, [sl, #4]
 8002c00:	bfba      	itte	lt
 8002c02:	461c      	movlt	r4, r3
 8002c04:	2501      	movlt	r5, #1
 8002c06:	2500      	movge	r5, #0
 8002c08:	f7ff fd3e 	bl	8002688 <_Balloc>
 8002c0c:	4602      	mov	r2, r0
 8002c0e:	b918      	cbnz	r0, 8002c18 <__mdiff+0x60>
 8002c10:	4b33      	ldr	r3, [pc, #204]	@ (8002ce0 <__mdiff+0x128>)
 8002c12:	f240 2145 	movw	r1, #581	@ 0x245
 8002c16:	e7e3      	b.n	8002be0 <__mdiff+0x28>
 8002c18:	f8da 7010 	ldr.w	r7, [sl, #16]
 8002c1c:	6926      	ldr	r6, [r4, #16]
 8002c1e:	60c5      	str	r5, [r0, #12]
 8002c20:	f10a 0914 	add.w	r9, sl, #20
 8002c24:	f104 0e14 	add.w	lr, r4, #20
 8002c28:	f100 0514 	add.w	r5, r0, #20
 8002c2c:	f10a 0310 	add.w	r3, sl, #16
 8002c30:	eb09 0887 	add.w	r8, r9, r7, lsl #2
 8002c34:	eb0e 0686 	add.w	r6, lr, r6, lsl #2
 8002c38:	9301      	str	r3, [sp, #4]
 8002c3a:	46ab      	mov	fp, r5
 8002c3c:	f04f 0c00 	mov.w	ip, #0
 8002c40:	9b01      	ldr	r3, [sp, #4]
 8002c42:	f85e 0b04 	ldr.w	r0, [lr], #4
 8002c46:	f853 af04 	ldr.w	sl, [r3, #4]!
 8002c4a:	9301      	str	r3, [sp, #4]
 8002c4c:	fa1f f38a 	uxth.w	r3, sl
 8002c50:	4619      	mov	r1, r3
 8002c52:	b283      	uxth	r3, r0
 8002c54:	1acb      	subs	r3, r1, r3
 8002c56:	0c00      	lsrs	r0, r0, #16
 8002c58:	4463      	add	r3, ip
 8002c5a:	ebc0 401a 	rsb	r0, r0, sl, lsr #16
 8002c5e:	eb00 4023 	add.w	r0, r0, r3, asr #16
 8002c62:	b29b      	uxth	r3, r3
 8002c64:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 8002c68:	4576      	cmp	r6, lr
 8002c6a:	f84b 3b04 	str.w	r3, [fp], #4
 8002c6e:	ea4f 4c20 	mov.w	ip, r0, asr #16
 8002c72:	d8e5      	bhi.n	8002c40 <__mdiff+0x88>
 8002c74:	1b33      	subs	r3, r6, r4
 8002c76:	3b15      	subs	r3, #21
 8002c78:	3415      	adds	r4, #21
 8002c7a:	f023 0303 	bic.w	r3, r3, #3
 8002c7e:	42a6      	cmp	r6, r4
 8002c80:	bf38      	it	cc
 8002c82:	2300      	movcc	r3, #0
 8002c84:	18e8      	adds	r0, r5, r3
 8002c86:	444b      	add	r3, r9
 8002c88:	1d1c      	adds	r4, r3, #4
 8002c8a:	3004      	adds	r0, #4
 8002c8c:	4626      	mov	r6, r4
 8002c8e:	eba5 0509 	sub.w	r5, r5, r9
 8002c92:	4546      	cmp	r6, r8
 8002c94:	eb06 0e05 	add.w	lr, r6, r5
 8002c98:	d30e      	bcc.n	8002cb8 <__mdiff+0x100>
 8002c9a:	f108 0103 	add.w	r1, r8, #3
 8002c9e:	1b09      	subs	r1, r1, r4
 8002ca0:	f021 0103 	bic.w	r1, r1, #3
 8002ca4:	3301      	adds	r3, #1
 8002ca6:	4598      	cmp	r8, r3
 8002ca8:	bf38      	it	cc
 8002caa:	2100      	movcc	r1, #0
 8002cac:	4401      	add	r1, r0
 8002cae:	f851 3d04 	ldr.w	r3, [r1, #-4]!
 8002cb2:	b19b      	cbz	r3, 8002cdc <__mdiff+0x124>
 8002cb4:	6117      	str	r7, [r2, #16]
 8002cb6:	e799      	b.n	8002bec <__mdiff+0x34>
 8002cb8:	f856 1b04 	ldr.w	r1, [r6], #4
 8002cbc:	46e2      	mov	sl, ip
 8002cbe:	ea4f 4911 	mov.w	r9, r1, lsr #16
 8002cc2:	fa1c fc81 	uxtah	ip, ip, r1
 8002cc6:	4451      	add	r1, sl
 8002cc8:	eb09 492c 	add.w	r9, r9, ip, asr #16
 8002ccc:	b289      	uxth	r1, r1
 8002cce:	ea41 4109 	orr.w	r1, r1, r9, lsl #16
 8002cd2:	ea4f 4c29 	mov.w	ip, r9, asr #16
 8002cd6:	f8ce 1000 	str.w	r1, [lr]
 8002cda:	e7da      	b.n	8002c92 <__mdiff+0xda>
 8002cdc:	3f01      	subs	r7, #1
 8002cde:	e7e6      	b.n	8002cae <__mdiff+0xf6>
 8002ce0:	0800419d 	.word	0x0800419d
 8002ce4:	080041ae 	.word	0x080041ae

08002ce8 <__d2b>:
 8002ce8:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8002cec:	460f      	mov	r7, r1
 8002cee:	2101      	movs	r1, #1
 8002cf0:	ec59 8b10 	vmov	r8, r9, d0
 8002cf4:	4616      	mov	r6, r2
 8002cf6:	f7ff fcc7 	bl	8002688 <_Balloc>
 8002cfa:	4604      	mov	r4, r0
 8002cfc:	b930      	cbnz	r0, 8002d0c <__d2b+0x24>
 8002cfe:	4602      	mov	r2, r0
 8002d00:	4b23      	ldr	r3, [pc, #140]	@ (8002d90 <__d2b+0xa8>)
 8002d02:	4824      	ldr	r0, [pc, #144]	@ (8002d94 <__d2b+0xac>)
 8002d04:	f240 310f 	movw	r1, #783	@ 0x30f
 8002d08:	f000 f90e 	bl	8002f28 <__assert_func>
 8002d0c:	f3c9 550a 	ubfx	r5, r9, #20, #11
 8002d10:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8002d14:	b10d      	cbz	r5, 8002d1a <__d2b+0x32>
 8002d16:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8002d1a:	9301      	str	r3, [sp, #4]
 8002d1c:	f1b8 0300 	subs.w	r3, r8, #0
 8002d20:	d023      	beq.n	8002d6a <__d2b+0x82>
 8002d22:	4668      	mov	r0, sp
 8002d24:	9300      	str	r3, [sp, #0]
 8002d26:	f7ff fd74 	bl	8002812 <__lo0bits>
 8002d2a:	9900      	ldr	r1, [sp, #0]
 8002d2c:	b1d8      	cbz	r0, 8002d66 <__d2b+0x7e>
 8002d2e:	9a01      	ldr	r2, [sp, #4]
 8002d30:	f1c0 0320 	rsb	r3, r0, #32
 8002d34:	fa02 f303 	lsl.w	r3, r2, r3
 8002d38:	430b      	orrs	r3, r1
 8002d3a:	40c2      	lsrs	r2, r0
 8002d3c:	6163      	str	r3, [r4, #20]
 8002d3e:	9201      	str	r2, [sp, #4]
 8002d40:	9b01      	ldr	r3, [sp, #4]
 8002d42:	61a3      	str	r3, [r4, #24]
 8002d44:	2b00      	cmp	r3, #0
 8002d46:	bf0c      	ite	eq
 8002d48:	2201      	moveq	r2, #1
 8002d4a:	2202      	movne	r2, #2
 8002d4c:	6122      	str	r2, [r4, #16]
 8002d4e:	b1a5      	cbz	r5, 8002d7a <__d2b+0x92>
 8002d50:	f2a5 4533 	subw	r5, r5, #1075	@ 0x433
 8002d54:	4405      	add	r5, r0
 8002d56:	603d      	str	r5, [r7, #0]
 8002d58:	f1c0 0035 	rsb	r0, r0, #53	@ 0x35
 8002d5c:	6030      	str	r0, [r6, #0]
 8002d5e:	4620      	mov	r0, r4
 8002d60:	b003      	add	sp, #12
 8002d62:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8002d66:	6161      	str	r1, [r4, #20]
 8002d68:	e7ea      	b.n	8002d40 <__d2b+0x58>
 8002d6a:	a801      	add	r0, sp, #4
 8002d6c:	f7ff fd51 	bl	8002812 <__lo0bits>
 8002d70:	9b01      	ldr	r3, [sp, #4]
 8002d72:	6163      	str	r3, [r4, #20]
 8002d74:	3020      	adds	r0, #32
 8002d76:	2201      	movs	r2, #1
 8002d78:	e7e8      	b.n	8002d4c <__d2b+0x64>
 8002d7a:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 8002d7e:	f2a0 4032 	subw	r0, r0, #1074	@ 0x432
 8002d82:	6038      	str	r0, [r7, #0]
 8002d84:	6918      	ldr	r0, [r3, #16]
 8002d86:	f7ff fd25 	bl	80027d4 <__hi0bits>
 8002d8a:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 8002d8e:	e7e5      	b.n	8002d5c <__d2b+0x74>
 8002d90:	0800419d 	.word	0x0800419d
 8002d94:	080041ae 	.word	0x080041ae

08002d98 <__sflush_r>:
 8002d98:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8002d9c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002da0:	0716      	lsls	r6, r2, #28
 8002da2:	4605      	mov	r5, r0
 8002da4:	460c      	mov	r4, r1
 8002da6:	d451      	bmi.n	8002e4c <__sflush_r+0xb4>
 8002da8:	684b      	ldr	r3, [r1, #4]
 8002daa:	2b00      	cmp	r3, #0
 8002dac:	dc02      	bgt.n	8002db4 <__sflush_r+0x1c>
 8002dae:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8002db0:	2b00      	cmp	r3, #0
 8002db2:	dd49      	ble.n	8002e48 <__sflush_r+0xb0>
 8002db4:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8002db6:	2e00      	cmp	r6, #0
 8002db8:	d046      	beq.n	8002e48 <__sflush_r+0xb0>
 8002dba:	2300      	movs	r3, #0
 8002dbc:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8002dc0:	682f      	ldr	r7, [r5, #0]
 8002dc2:	602b      	str	r3, [r5, #0]
 8002dc4:	d031      	beq.n	8002e2a <__sflush_r+0x92>
 8002dc6:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8002dc8:	89a3      	ldrh	r3, [r4, #12]
 8002dca:	0759      	lsls	r1, r3, #29
 8002dcc:	d505      	bpl.n	8002dda <__sflush_r+0x42>
 8002dce:	6863      	ldr	r3, [r4, #4]
 8002dd0:	1ad2      	subs	r2, r2, r3
 8002dd2:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8002dd4:	b10b      	cbz	r3, 8002dda <__sflush_r+0x42>
 8002dd6:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8002dd8:	1ad2      	subs	r2, r2, r3
 8002dda:	2300      	movs	r3, #0
 8002ddc:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8002dde:	6a21      	ldr	r1, [r4, #32]
 8002de0:	4628      	mov	r0, r5
 8002de2:	47b0      	blx	r6
 8002de4:	1c42      	adds	r2, r0, #1
 8002de6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8002dea:	d106      	bne.n	8002dfa <__sflush_r+0x62>
 8002dec:	6829      	ldr	r1, [r5, #0]
 8002dee:	291d      	cmp	r1, #29
 8002df0:	d846      	bhi.n	8002e80 <__sflush_r+0xe8>
 8002df2:	4a29      	ldr	r2, [pc, #164]	@ (8002e98 <__sflush_r+0x100>)
 8002df4:	40ca      	lsrs	r2, r1
 8002df6:	07d6      	lsls	r6, r2, #31
 8002df8:	d542      	bpl.n	8002e80 <__sflush_r+0xe8>
 8002dfa:	2200      	movs	r2, #0
 8002dfc:	6062      	str	r2, [r4, #4]
 8002dfe:	04d9      	lsls	r1, r3, #19
 8002e00:	6922      	ldr	r2, [r4, #16]
 8002e02:	6022      	str	r2, [r4, #0]
 8002e04:	d504      	bpl.n	8002e10 <__sflush_r+0x78>
 8002e06:	1c42      	adds	r2, r0, #1
 8002e08:	d101      	bne.n	8002e0e <__sflush_r+0x76>
 8002e0a:	682b      	ldr	r3, [r5, #0]
 8002e0c:	b903      	cbnz	r3, 8002e10 <__sflush_r+0x78>
 8002e0e:	6560      	str	r0, [r4, #84]	@ 0x54
 8002e10:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8002e12:	602f      	str	r7, [r5, #0]
 8002e14:	b1c1      	cbz	r1, 8002e48 <__sflush_r+0xb0>
 8002e16:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8002e1a:	4299      	cmp	r1, r3
 8002e1c:	d002      	beq.n	8002e24 <__sflush_r+0x8c>
 8002e1e:	4628      	mov	r0, r5
 8002e20:	f7ff fb32 	bl	8002488 <_free_r>
 8002e24:	2300      	movs	r3, #0
 8002e26:	6363      	str	r3, [r4, #52]	@ 0x34
 8002e28:	e00e      	b.n	8002e48 <__sflush_r+0xb0>
 8002e2a:	6a21      	ldr	r1, [r4, #32]
 8002e2c:	2301      	movs	r3, #1
 8002e2e:	4628      	mov	r0, r5
 8002e30:	47b0      	blx	r6
 8002e32:	4602      	mov	r2, r0
 8002e34:	1c50      	adds	r0, r2, #1
 8002e36:	d1c7      	bne.n	8002dc8 <__sflush_r+0x30>
 8002e38:	682b      	ldr	r3, [r5, #0]
 8002e3a:	2b00      	cmp	r3, #0
 8002e3c:	d0c4      	beq.n	8002dc8 <__sflush_r+0x30>
 8002e3e:	2b1d      	cmp	r3, #29
 8002e40:	d001      	beq.n	8002e46 <__sflush_r+0xae>
 8002e42:	2b16      	cmp	r3, #22
 8002e44:	d11a      	bne.n	8002e7c <__sflush_r+0xe4>
 8002e46:	602f      	str	r7, [r5, #0]
 8002e48:	2000      	movs	r0, #0
 8002e4a:	e01e      	b.n	8002e8a <__sflush_r+0xf2>
 8002e4c:	690f      	ldr	r7, [r1, #16]
 8002e4e:	2f00      	cmp	r7, #0
 8002e50:	d0fa      	beq.n	8002e48 <__sflush_r+0xb0>
 8002e52:	0793      	lsls	r3, r2, #30
 8002e54:	680e      	ldr	r6, [r1, #0]
 8002e56:	bf08      	it	eq
 8002e58:	694b      	ldreq	r3, [r1, #20]
 8002e5a:	600f      	str	r7, [r1, #0]
 8002e5c:	bf18      	it	ne
 8002e5e:	2300      	movne	r3, #0
 8002e60:	eba6 0807 	sub.w	r8, r6, r7
 8002e64:	608b      	str	r3, [r1, #8]
 8002e66:	f1b8 0f00 	cmp.w	r8, #0
 8002e6a:	dded      	ble.n	8002e48 <__sflush_r+0xb0>
 8002e6c:	6a21      	ldr	r1, [r4, #32]
 8002e6e:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 8002e70:	4643      	mov	r3, r8
 8002e72:	463a      	mov	r2, r7
 8002e74:	4628      	mov	r0, r5
 8002e76:	47b0      	blx	r6
 8002e78:	2800      	cmp	r0, #0
 8002e7a:	dc08      	bgt.n	8002e8e <__sflush_r+0xf6>
 8002e7c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8002e80:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8002e84:	81a3      	strh	r3, [r4, #12]
 8002e86:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8002e8a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8002e8e:	4407      	add	r7, r0
 8002e90:	eba8 0800 	sub.w	r8, r8, r0
 8002e94:	e7e7      	b.n	8002e66 <__sflush_r+0xce>
 8002e96:	bf00      	nop
 8002e98:	20400001 	.word	0x20400001

08002e9c <_fflush_r>:
 8002e9c:	b538      	push	{r3, r4, r5, lr}
 8002e9e:	690b      	ldr	r3, [r1, #16]
 8002ea0:	4605      	mov	r5, r0
 8002ea2:	460c      	mov	r4, r1
 8002ea4:	b913      	cbnz	r3, 8002eac <_fflush_r+0x10>
 8002ea6:	2500      	movs	r5, #0
 8002ea8:	4628      	mov	r0, r5
 8002eaa:	bd38      	pop	{r3, r4, r5, pc}
 8002eac:	b118      	cbz	r0, 8002eb6 <_fflush_r+0x1a>
 8002eae:	6a03      	ldr	r3, [r0, #32]
 8002eb0:	b90b      	cbnz	r3, 8002eb6 <_fflush_r+0x1a>
 8002eb2:	f7fe fb8b 	bl	80015cc <__sinit>
 8002eb6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8002eba:	2b00      	cmp	r3, #0
 8002ebc:	d0f3      	beq.n	8002ea6 <_fflush_r+0xa>
 8002ebe:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8002ec0:	07d0      	lsls	r0, r2, #31
 8002ec2:	d404      	bmi.n	8002ece <_fflush_r+0x32>
 8002ec4:	0599      	lsls	r1, r3, #22
 8002ec6:	d402      	bmi.n	8002ece <_fflush_r+0x32>
 8002ec8:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8002eca:	f7fe fc70 	bl	80017ae <__retarget_lock_acquire_recursive>
 8002ece:	4628      	mov	r0, r5
 8002ed0:	4621      	mov	r1, r4
 8002ed2:	f7ff ff61 	bl	8002d98 <__sflush_r>
 8002ed6:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8002ed8:	07da      	lsls	r2, r3, #31
 8002eda:	4605      	mov	r5, r0
 8002edc:	d4e4      	bmi.n	8002ea8 <_fflush_r+0xc>
 8002ede:	89a3      	ldrh	r3, [r4, #12]
 8002ee0:	059b      	lsls	r3, r3, #22
 8002ee2:	d4e1      	bmi.n	8002ea8 <_fflush_r+0xc>
 8002ee4:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8002ee6:	f7fe fc63 	bl	80017b0 <__retarget_lock_release_recursive>
 8002eea:	e7dd      	b.n	8002ea8 <_fflush_r+0xc>

08002eec <_sbrk_r>:
 8002eec:	b538      	push	{r3, r4, r5, lr}
 8002eee:	4d06      	ldr	r5, [pc, #24]	@ (8002f08 <_sbrk_r+0x1c>)
 8002ef0:	2300      	movs	r3, #0
 8002ef2:	4604      	mov	r4, r0
 8002ef4:	4608      	mov	r0, r1
 8002ef6:	602b      	str	r3, [r5, #0]
 8002ef8:	f000 fe44 	bl	8003b84 <_sbrk>
 8002efc:	1c43      	adds	r3, r0, #1
 8002efe:	d102      	bne.n	8002f06 <_sbrk_r+0x1a>
 8002f00:	682b      	ldr	r3, [r5, #0]
 8002f02:	b103      	cbz	r3, 8002f06 <_sbrk_r+0x1a>
 8002f04:	6023      	str	r3, [r4, #0]
 8002f06:	bd38      	pop	{r3, r4, r5, pc}
 8002f08:	20000320 	.word	0x20000320

08002f0c <memcpy>:
 8002f0c:	440a      	add	r2, r1
 8002f0e:	4291      	cmp	r1, r2
 8002f10:	f100 33ff 	add.w	r3, r0, #4294967295	@ 0xffffffff
 8002f14:	d100      	bne.n	8002f18 <memcpy+0xc>
 8002f16:	4770      	bx	lr
 8002f18:	b510      	push	{r4, lr}
 8002f1a:	f811 4b01 	ldrb.w	r4, [r1], #1
 8002f1e:	f803 4f01 	strb.w	r4, [r3, #1]!
 8002f22:	4291      	cmp	r1, r2
 8002f24:	d1f9      	bne.n	8002f1a <memcpy+0xe>
 8002f26:	bd10      	pop	{r4, pc}

08002f28 <__assert_func>:
 8002f28:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8002f2a:	4614      	mov	r4, r2
 8002f2c:	461a      	mov	r2, r3
 8002f2e:	4b09      	ldr	r3, [pc, #36]	@ (8002f54 <__assert_func+0x2c>)
 8002f30:	681b      	ldr	r3, [r3, #0]
 8002f32:	4605      	mov	r5, r0
 8002f34:	68d8      	ldr	r0, [r3, #12]
 8002f36:	b14c      	cbz	r4, 8002f4c <__assert_func+0x24>
 8002f38:	4b07      	ldr	r3, [pc, #28]	@ (8002f58 <__assert_func+0x30>)
 8002f3a:	9100      	str	r1, [sp, #0]
 8002f3c:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8002f40:	4906      	ldr	r1, [pc, #24]	@ (8002f5c <__assert_func+0x34>)
 8002f42:	462b      	mov	r3, r5
 8002f44:	f000 f842 	bl	8002fcc <fiprintf>
 8002f48:	f000 f852 	bl	8002ff0 <abort>
 8002f4c:	4b04      	ldr	r3, [pc, #16]	@ (8002f60 <__assert_func+0x38>)
 8002f4e:	461c      	mov	r4, r3
 8002f50:	e7f3      	b.n	8002f3a <__assert_func+0x12>
 8002f52:	bf00      	nop
 8002f54:	2000000c 	.word	0x2000000c
 8002f58:	08004212 	.word	0x08004212
 8002f5c:	0800421f 	.word	0x0800421f
 8002f60:	0800424d 	.word	0x0800424d

08002f64 <_calloc_r>:
 8002f64:	b570      	push	{r4, r5, r6, lr}
 8002f66:	fba1 5402 	umull	r5, r4, r1, r2
 8002f6a:	b934      	cbnz	r4, 8002f7a <_calloc_r+0x16>
 8002f6c:	4629      	mov	r1, r5
 8002f6e:	f7ff faff 	bl	8002570 <_malloc_r>
 8002f72:	4606      	mov	r6, r0
 8002f74:	b928      	cbnz	r0, 8002f82 <_calloc_r+0x1e>
 8002f76:	4630      	mov	r0, r6
 8002f78:	bd70      	pop	{r4, r5, r6, pc}
 8002f7a:	220c      	movs	r2, #12
 8002f7c:	6002      	str	r2, [r0, #0]
 8002f7e:	2600      	movs	r6, #0
 8002f80:	e7f9      	b.n	8002f76 <_calloc_r+0x12>
 8002f82:	462a      	mov	r2, r5
 8002f84:	4621      	mov	r1, r4
 8002f86:	f7fe fb9b 	bl	80016c0 <memset>
 8002f8a:	e7f4      	b.n	8002f76 <_calloc_r+0x12>

08002f8c <__ascii_mbtowc>:
 8002f8c:	b082      	sub	sp, #8
 8002f8e:	b901      	cbnz	r1, 8002f92 <__ascii_mbtowc+0x6>
 8002f90:	a901      	add	r1, sp, #4
 8002f92:	b142      	cbz	r2, 8002fa6 <__ascii_mbtowc+0x1a>
 8002f94:	b14b      	cbz	r3, 8002faa <__ascii_mbtowc+0x1e>
 8002f96:	7813      	ldrb	r3, [r2, #0]
 8002f98:	600b      	str	r3, [r1, #0]
 8002f9a:	7812      	ldrb	r2, [r2, #0]
 8002f9c:	1e10      	subs	r0, r2, #0
 8002f9e:	bf18      	it	ne
 8002fa0:	2001      	movne	r0, #1
 8002fa2:	b002      	add	sp, #8
 8002fa4:	4770      	bx	lr
 8002fa6:	4610      	mov	r0, r2
 8002fa8:	e7fb      	b.n	8002fa2 <__ascii_mbtowc+0x16>
 8002faa:	f06f 0001 	mvn.w	r0, #1
 8002fae:	e7f8      	b.n	8002fa2 <__ascii_mbtowc+0x16>

08002fb0 <__ascii_wctomb>:
 8002fb0:	4603      	mov	r3, r0
 8002fb2:	4608      	mov	r0, r1
 8002fb4:	b141      	cbz	r1, 8002fc8 <__ascii_wctomb+0x18>
 8002fb6:	2aff      	cmp	r2, #255	@ 0xff
 8002fb8:	d904      	bls.n	8002fc4 <__ascii_wctomb+0x14>
 8002fba:	228a      	movs	r2, #138	@ 0x8a
 8002fbc:	601a      	str	r2, [r3, #0]
 8002fbe:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8002fc2:	4770      	bx	lr
 8002fc4:	700a      	strb	r2, [r1, #0]
 8002fc6:	2001      	movs	r0, #1
 8002fc8:	4770      	bx	lr
	...

08002fcc <fiprintf>:
 8002fcc:	b40e      	push	{r1, r2, r3}
 8002fce:	b503      	push	{r0, r1, lr}
 8002fd0:	4601      	mov	r1, r0
 8002fd2:	ab03      	add	r3, sp, #12
 8002fd4:	4805      	ldr	r0, [pc, #20]	@ (8002fec <fiprintf+0x20>)
 8002fd6:	f853 2b04 	ldr.w	r2, [r3], #4
 8002fda:	6800      	ldr	r0, [r0, #0]
 8002fdc:	9301      	str	r3, [sp, #4]
 8002fde:	f000 f837 	bl	8003050 <_vfiprintf_r>
 8002fe2:	b002      	add	sp, #8
 8002fe4:	f85d eb04 	ldr.w	lr, [sp], #4
 8002fe8:	b003      	add	sp, #12
 8002fea:	4770      	bx	lr
 8002fec:	2000000c 	.word	0x2000000c

08002ff0 <abort>:
 8002ff0:	b508      	push	{r3, lr}
 8002ff2:	2006      	movs	r0, #6
 8002ff4:	f000 fa18 	bl	8003428 <raise>
 8002ff8:	2001      	movs	r0, #1
 8002ffa:	f000 fd4b 	bl	8003a94 <_exit>

08002ffe <__sfputc_r>:
 8002ffe:	6893      	ldr	r3, [r2, #8]
 8003000:	3b01      	subs	r3, #1
 8003002:	2b00      	cmp	r3, #0
 8003004:	b410      	push	{r4}
 8003006:	6093      	str	r3, [r2, #8]
 8003008:	da08      	bge.n	800301c <__sfputc_r+0x1e>
 800300a:	6994      	ldr	r4, [r2, #24]
 800300c:	42a3      	cmp	r3, r4
 800300e:	db01      	blt.n	8003014 <__sfputc_r+0x16>
 8003010:	290a      	cmp	r1, #10
 8003012:	d103      	bne.n	800301c <__sfputc_r+0x1e>
 8003014:	f85d 4b04 	ldr.w	r4, [sp], #4
 8003018:	f000 b932 	b.w	8003280 <__swbuf_r>
 800301c:	6813      	ldr	r3, [r2, #0]
 800301e:	1c58      	adds	r0, r3, #1
 8003020:	6010      	str	r0, [r2, #0]
 8003022:	7019      	strb	r1, [r3, #0]
 8003024:	4608      	mov	r0, r1
 8003026:	f85d 4b04 	ldr.w	r4, [sp], #4
 800302a:	4770      	bx	lr

0800302c <__sfputs_r>:
 800302c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800302e:	4606      	mov	r6, r0
 8003030:	460f      	mov	r7, r1
 8003032:	4614      	mov	r4, r2
 8003034:	18d5      	adds	r5, r2, r3
 8003036:	42ac      	cmp	r4, r5
 8003038:	d101      	bne.n	800303e <__sfputs_r+0x12>
 800303a:	2000      	movs	r0, #0
 800303c:	e007      	b.n	800304e <__sfputs_r+0x22>
 800303e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003042:	463a      	mov	r2, r7
 8003044:	4630      	mov	r0, r6
 8003046:	f7ff ffda 	bl	8002ffe <__sfputc_r>
 800304a:	1c43      	adds	r3, r0, #1
 800304c:	d1f3      	bne.n	8003036 <__sfputs_r+0xa>
 800304e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08003050 <_vfiprintf_r>:
 8003050:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003054:	460d      	mov	r5, r1
 8003056:	b09d      	sub	sp, #116	@ 0x74
 8003058:	4614      	mov	r4, r2
 800305a:	4698      	mov	r8, r3
 800305c:	4606      	mov	r6, r0
 800305e:	b118      	cbz	r0, 8003068 <_vfiprintf_r+0x18>
 8003060:	6a03      	ldr	r3, [r0, #32]
 8003062:	b90b      	cbnz	r3, 8003068 <_vfiprintf_r+0x18>
 8003064:	f7fe fab2 	bl	80015cc <__sinit>
 8003068:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 800306a:	07d9      	lsls	r1, r3, #31
 800306c:	d405      	bmi.n	800307a <_vfiprintf_r+0x2a>
 800306e:	89ab      	ldrh	r3, [r5, #12]
 8003070:	059a      	lsls	r2, r3, #22
 8003072:	d402      	bmi.n	800307a <_vfiprintf_r+0x2a>
 8003074:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8003076:	f7fe fb9a 	bl	80017ae <__retarget_lock_acquire_recursive>
 800307a:	89ab      	ldrh	r3, [r5, #12]
 800307c:	071b      	lsls	r3, r3, #28
 800307e:	d501      	bpl.n	8003084 <_vfiprintf_r+0x34>
 8003080:	692b      	ldr	r3, [r5, #16]
 8003082:	b99b      	cbnz	r3, 80030ac <_vfiprintf_r+0x5c>
 8003084:	4629      	mov	r1, r5
 8003086:	4630      	mov	r0, r6
 8003088:	f000 f938 	bl	80032fc <__swsetup_r>
 800308c:	b170      	cbz	r0, 80030ac <_vfiprintf_r+0x5c>
 800308e:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8003090:	07dc      	lsls	r4, r3, #31
 8003092:	d504      	bpl.n	800309e <_vfiprintf_r+0x4e>
 8003094:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8003098:	b01d      	add	sp, #116	@ 0x74
 800309a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800309e:	89ab      	ldrh	r3, [r5, #12]
 80030a0:	0598      	lsls	r0, r3, #22
 80030a2:	d4f7      	bmi.n	8003094 <_vfiprintf_r+0x44>
 80030a4:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 80030a6:	f7fe fb83 	bl	80017b0 <__retarget_lock_release_recursive>
 80030aa:	e7f3      	b.n	8003094 <_vfiprintf_r+0x44>
 80030ac:	2300      	movs	r3, #0
 80030ae:	9309      	str	r3, [sp, #36]	@ 0x24
 80030b0:	2320      	movs	r3, #32
 80030b2:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 80030b6:	f8cd 800c 	str.w	r8, [sp, #12]
 80030ba:	2330      	movs	r3, #48	@ 0x30
 80030bc:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 800326c <_vfiprintf_r+0x21c>
 80030c0:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 80030c4:	f04f 0901 	mov.w	r9, #1
 80030c8:	4623      	mov	r3, r4
 80030ca:	469a      	mov	sl, r3
 80030cc:	f813 2b01 	ldrb.w	r2, [r3], #1
 80030d0:	b10a      	cbz	r2, 80030d6 <_vfiprintf_r+0x86>
 80030d2:	2a25      	cmp	r2, #37	@ 0x25
 80030d4:	d1f9      	bne.n	80030ca <_vfiprintf_r+0x7a>
 80030d6:	ebba 0b04 	subs.w	fp, sl, r4
 80030da:	d00b      	beq.n	80030f4 <_vfiprintf_r+0xa4>
 80030dc:	465b      	mov	r3, fp
 80030de:	4622      	mov	r2, r4
 80030e0:	4629      	mov	r1, r5
 80030e2:	4630      	mov	r0, r6
 80030e4:	f7ff ffa2 	bl	800302c <__sfputs_r>
 80030e8:	3001      	adds	r0, #1
 80030ea:	f000 80a7 	beq.w	800323c <_vfiprintf_r+0x1ec>
 80030ee:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80030f0:	445a      	add	r2, fp
 80030f2:	9209      	str	r2, [sp, #36]	@ 0x24
 80030f4:	f89a 3000 	ldrb.w	r3, [sl]
 80030f8:	2b00      	cmp	r3, #0
 80030fa:	f000 809f 	beq.w	800323c <_vfiprintf_r+0x1ec>
 80030fe:	2300      	movs	r3, #0
 8003100:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 8003104:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8003108:	f10a 0a01 	add.w	sl, sl, #1
 800310c:	9304      	str	r3, [sp, #16]
 800310e:	9307      	str	r3, [sp, #28]
 8003110:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8003114:	931a      	str	r3, [sp, #104]	@ 0x68
 8003116:	4654      	mov	r4, sl
 8003118:	2205      	movs	r2, #5
 800311a:	f814 1b01 	ldrb.w	r1, [r4], #1
 800311e:	4853      	ldr	r0, [pc, #332]	@ (800326c <_vfiprintf_r+0x21c>)
 8003120:	f7fd f83e 	bl	80001a0 <memchr>
 8003124:	9a04      	ldr	r2, [sp, #16]
 8003126:	b9d8      	cbnz	r0, 8003160 <_vfiprintf_r+0x110>
 8003128:	06d1      	lsls	r1, r2, #27
 800312a:	bf44      	itt	mi
 800312c:	2320      	movmi	r3, #32
 800312e:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8003132:	0713      	lsls	r3, r2, #28
 8003134:	bf44      	itt	mi
 8003136:	232b      	movmi	r3, #43	@ 0x2b
 8003138:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 800313c:	f89a 3000 	ldrb.w	r3, [sl]
 8003140:	2b2a      	cmp	r3, #42	@ 0x2a
 8003142:	d015      	beq.n	8003170 <_vfiprintf_r+0x120>
 8003144:	9a07      	ldr	r2, [sp, #28]
 8003146:	4654      	mov	r4, sl
 8003148:	2000      	movs	r0, #0
 800314a:	f04f 0c0a 	mov.w	ip, #10
 800314e:	4621      	mov	r1, r4
 8003150:	f811 3b01 	ldrb.w	r3, [r1], #1
 8003154:	3b30      	subs	r3, #48	@ 0x30
 8003156:	2b09      	cmp	r3, #9
 8003158:	d94b      	bls.n	80031f2 <_vfiprintf_r+0x1a2>
 800315a:	b1b0      	cbz	r0, 800318a <_vfiprintf_r+0x13a>
 800315c:	9207      	str	r2, [sp, #28]
 800315e:	e014      	b.n	800318a <_vfiprintf_r+0x13a>
 8003160:	eba0 0308 	sub.w	r3, r0, r8
 8003164:	fa09 f303 	lsl.w	r3, r9, r3
 8003168:	4313      	orrs	r3, r2
 800316a:	9304      	str	r3, [sp, #16]
 800316c:	46a2      	mov	sl, r4
 800316e:	e7d2      	b.n	8003116 <_vfiprintf_r+0xc6>
 8003170:	9b03      	ldr	r3, [sp, #12]
 8003172:	1d19      	adds	r1, r3, #4
 8003174:	681b      	ldr	r3, [r3, #0]
 8003176:	9103      	str	r1, [sp, #12]
 8003178:	2b00      	cmp	r3, #0
 800317a:	bfbb      	ittet	lt
 800317c:	425b      	neglt	r3, r3
 800317e:	f042 0202 	orrlt.w	r2, r2, #2
 8003182:	9307      	strge	r3, [sp, #28]
 8003184:	9307      	strlt	r3, [sp, #28]
 8003186:	bfb8      	it	lt
 8003188:	9204      	strlt	r2, [sp, #16]
 800318a:	7823      	ldrb	r3, [r4, #0]
 800318c:	2b2e      	cmp	r3, #46	@ 0x2e
 800318e:	d10a      	bne.n	80031a6 <_vfiprintf_r+0x156>
 8003190:	7863      	ldrb	r3, [r4, #1]
 8003192:	2b2a      	cmp	r3, #42	@ 0x2a
 8003194:	d132      	bne.n	80031fc <_vfiprintf_r+0x1ac>
 8003196:	9b03      	ldr	r3, [sp, #12]
 8003198:	1d1a      	adds	r2, r3, #4
 800319a:	681b      	ldr	r3, [r3, #0]
 800319c:	9203      	str	r2, [sp, #12]
 800319e:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 80031a2:	3402      	adds	r4, #2
 80031a4:	9305      	str	r3, [sp, #20]
 80031a6:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 800327c <_vfiprintf_r+0x22c>
 80031aa:	7821      	ldrb	r1, [r4, #0]
 80031ac:	2203      	movs	r2, #3
 80031ae:	4650      	mov	r0, sl
 80031b0:	f7fc fff6 	bl	80001a0 <memchr>
 80031b4:	b138      	cbz	r0, 80031c6 <_vfiprintf_r+0x176>
 80031b6:	9b04      	ldr	r3, [sp, #16]
 80031b8:	eba0 000a 	sub.w	r0, r0, sl
 80031bc:	2240      	movs	r2, #64	@ 0x40
 80031be:	4082      	lsls	r2, r0
 80031c0:	4313      	orrs	r3, r2
 80031c2:	3401      	adds	r4, #1
 80031c4:	9304      	str	r3, [sp, #16]
 80031c6:	f814 1b01 	ldrb.w	r1, [r4], #1
 80031ca:	4829      	ldr	r0, [pc, #164]	@ (8003270 <_vfiprintf_r+0x220>)
 80031cc:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 80031d0:	2206      	movs	r2, #6
 80031d2:	f7fc ffe5 	bl	80001a0 <memchr>
 80031d6:	2800      	cmp	r0, #0
 80031d8:	d03f      	beq.n	800325a <_vfiprintf_r+0x20a>
 80031da:	4b26      	ldr	r3, [pc, #152]	@ (8003274 <_vfiprintf_r+0x224>)
 80031dc:	bb1b      	cbnz	r3, 8003226 <_vfiprintf_r+0x1d6>
 80031de:	9b03      	ldr	r3, [sp, #12]
 80031e0:	3307      	adds	r3, #7
 80031e2:	f023 0307 	bic.w	r3, r3, #7
 80031e6:	3308      	adds	r3, #8
 80031e8:	9303      	str	r3, [sp, #12]
 80031ea:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80031ec:	443b      	add	r3, r7
 80031ee:	9309      	str	r3, [sp, #36]	@ 0x24
 80031f0:	e76a      	b.n	80030c8 <_vfiprintf_r+0x78>
 80031f2:	fb0c 3202 	mla	r2, ip, r2, r3
 80031f6:	460c      	mov	r4, r1
 80031f8:	2001      	movs	r0, #1
 80031fa:	e7a8      	b.n	800314e <_vfiprintf_r+0xfe>
 80031fc:	2300      	movs	r3, #0
 80031fe:	3401      	adds	r4, #1
 8003200:	9305      	str	r3, [sp, #20]
 8003202:	4619      	mov	r1, r3
 8003204:	f04f 0c0a 	mov.w	ip, #10
 8003208:	4620      	mov	r0, r4
 800320a:	f810 2b01 	ldrb.w	r2, [r0], #1
 800320e:	3a30      	subs	r2, #48	@ 0x30
 8003210:	2a09      	cmp	r2, #9
 8003212:	d903      	bls.n	800321c <_vfiprintf_r+0x1cc>
 8003214:	2b00      	cmp	r3, #0
 8003216:	d0c6      	beq.n	80031a6 <_vfiprintf_r+0x156>
 8003218:	9105      	str	r1, [sp, #20]
 800321a:	e7c4      	b.n	80031a6 <_vfiprintf_r+0x156>
 800321c:	fb0c 2101 	mla	r1, ip, r1, r2
 8003220:	4604      	mov	r4, r0
 8003222:	2301      	movs	r3, #1
 8003224:	e7f0      	b.n	8003208 <_vfiprintf_r+0x1b8>
 8003226:	ab03      	add	r3, sp, #12
 8003228:	9300      	str	r3, [sp, #0]
 800322a:	462a      	mov	r2, r5
 800322c:	4b12      	ldr	r3, [pc, #72]	@ (8003278 <_vfiprintf_r+0x228>)
 800322e:	a904      	add	r1, sp, #16
 8003230:	4630      	mov	r0, r6
 8003232:	f7fd fd87 	bl	8000d44 <_printf_float>
 8003236:	4607      	mov	r7, r0
 8003238:	1c78      	adds	r0, r7, #1
 800323a:	d1d6      	bne.n	80031ea <_vfiprintf_r+0x19a>
 800323c:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 800323e:	07d9      	lsls	r1, r3, #31
 8003240:	d405      	bmi.n	800324e <_vfiprintf_r+0x1fe>
 8003242:	89ab      	ldrh	r3, [r5, #12]
 8003244:	059a      	lsls	r2, r3, #22
 8003246:	d402      	bmi.n	800324e <_vfiprintf_r+0x1fe>
 8003248:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 800324a:	f7fe fab1 	bl	80017b0 <__retarget_lock_release_recursive>
 800324e:	89ab      	ldrh	r3, [r5, #12]
 8003250:	065b      	lsls	r3, r3, #25
 8003252:	f53f af1f 	bmi.w	8003094 <_vfiprintf_r+0x44>
 8003256:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8003258:	e71e      	b.n	8003098 <_vfiprintf_r+0x48>
 800325a:	ab03      	add	r3, sp, #12
 800325c:	9300      	str	r3, [sp, #0]
 800325e:	462a      	mov	r2, r5
 8003260:	4b05      	ldr	r3, [pc, #20]	@ (8003278 <_vfiprintf_r+0x228>)
 8003262:	a904      	add	r1, sp, #16
 8003264:	4630      	mov	r0, r6
 8003266:	f7fe f803 	bl	8001270 <_printf_i>
 800326a:	e7e4      	b.n	8003236 <_vfiprintf_r+0x1e6>
 800326c:	0800424e 	.word	0x0800424e
 8003270:	08004258 	.word	0x08004258
 8003274:	08000d45 	.word	0x08000d45
 8003278:	0800302d 	.word	0x0800302d
 800327c:	08004254 	.word	0x08004254

08003280 <__swbuf_r>:
 8003280:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003282:	460e      	mov	r6, r1
 8003284:	4614      	mov	r4, r2
 8003286:	4605      	mov	r5, r0
 8003288:	b118      	cbz	r0, 8003292 <__swbuf_r+0x12>
 800328a:	6a03      	ldr	r3, [r0, #32]
 800328c:	b90b      	cbnz	r3, 8003292 <__swbuf_r+0x12>
 800328e:	f7fe f99d 	bl	80015cc <__sinit>
 8003292:	69a3      	ldr	r3, [r4, #24]
 8003294:	60a3      	str	r3, [r4, #8]
 8003296:	89a3      	ldrh	r3, [r4, #12]
 8003298:	071a      	lsls	r2, r3, #28
 800329a:	d501      	bpl.n	80032a0 <__swbuf_r+0x20>
 800329c:	6923      	ldr	r3, [r4, #16]
 800329e:	b943      	cbnz	r3, 80032b2 <__swbuf_r+0x32>
 80032a0:	4621      	mov	r1, r4
 80032a2:	4628      	mov	r0, r5
 80032a4:	f000 f82a 	bl	80032fc <__swsetup_r>
 80032a8:	b118      	cbz	r0, 80032b2 <__swbuf_r+0x32>
 80032aa:	f04f 37ff 	mov.w	r7, #4294967295	@ 0xffffffff
 80032ae:	4638      	mov	r0, r7
 80032b0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80032b2:	6823      	ldr	r3, [r4, #0]
 80032b4:	6922      	ldr	r2, [r4, #16]
 80032b6:	1a98      	subs	r0, r3, r2
 80032b8:	6963      	ldr	r3, [r4, #20]
 80032ba:	b2f6      	uxtb	r6, r6
 80032bc:	4283      	cmp	r3, r0
 80032be:	4637      	mov	r7, r6
 80032c0:	dc05      	bgt.n	80032ce <__swbuf_r+0x4e>
 80032c2:	4621      	mov	r1, r4
 80032c4:	4628      	mov	r0, r5
 80032c6:	f7ff fde9 	bl	8002e9c <_fflush_r>
 80032ca:	2800      	cmp	r0, #0
 80032cc:	d1ed      	bne.n	80032aa <__swbuf_r+0x2a>
 80032ce:	68a3      	ldr	r3, [r4, #8]
 80032d0:	3b01      	subs	r3, #1
 80032d2:	60a3      	str	r3, [r4, #8]
 80032d4:	6823      	ldr	r3, [r4, #0]
 80032d6:	1c5a      	adds	r2, r3, #1
 80032d8:	6022      	str	r2, [r4, #0]
 80032da:	701e      	strb	r6, [r3, #0]
 80032dc:	6962      	ldr	r2, [r4, #20]
 80032de:	1c43      	adds	r3, r0, #1
 80032e0:	429a      	cmp	r2, r3
 80032e2:	d004      	beq.n	80032ee <__swbuf_r+0x6e>
 80032e4:	89a3      	ldrh	r3, [r4, #12]
 80032e6:	07db      	lsls	r3, r3, #31
 80032e8:	d5e1      	bpl.n	80032ae <__swbuf_r+0x2e>
 80032ea:	2e0a      	cmp	r6, #10
 80032ec:	d1df      	bne.n	80032ae <__swbuf_r+0x2e>
 80032ee:	4621      	mov	r1, r4
 80032f0:	4628      	mov	r0, r5
 80032f2:	f7ff fdd3 	bl	8002e9c <_fflush_r>
 80032f6:	2800      	cmp	r0, #0
 80032f8:	d0d9      	beq.n	80032ae <__swbuf_r+0x2e>
 80032fa:	e7d6      	b.n	80032aa <__swbuf_r+0x2a>

080032fc <__swsetup_r>:
 80032fc:	b538      	push	{r3, r4, r5, lr}
 80032fe:	4b28      	ldr	r3, [pc, #160]	@ (80033a0 <__swsetup_r+0xa4>)
 8003300:	4605      	mov	r5, r0
 8003302:	6818      	ldr	r0, [r3, #0]
 8003304:	460c      	mov	r4, r1
 8003306:	b118      	cbz	r0, 8003310 <__swsetup_r+0x14>
 8003308:	6a03      	ldr	r3, [r0, #32]
 800330a:	b90b      	cbnz	r3, 8003310 <__swsetup_r+0x14>
 800330c:	f7fe f95e 	bl	80015cc <__sinit>
 8003310:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8003314:	071a      	lsls	r2, r3, #28
 8003316:	d421      	bmi.n	800335c <__swsetup_r+0x60>
 8003318:	06d8      	lsls	r0, r3, #27
 800331a:	d407      	bmi.n	800332c <__swsetup_r+0x30>
 800331c:	2209      	movs	r2, #9
 800331e:	602a      	str	r2, [r5, #0]
 8003320:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8003324:	81a3      	strh	r3, [r4, #12]
 8003326:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 800332a:	e030      	b.n	800338e <__swsetup_r+0x92>
 800332c:	0759      	lsls	r1, r3, #29
 800332e:	d512      	bpl.n	8003356 <__swsetup_r+0x5a>
 8003330:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8003332:	b141      	cbz	r1, 8003346 <__swsetup_r+0x4a>
 8003334:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8003338:	4299      	cmp	r1, r3
 800333a:	d002      	beq.n	8003342 <__swsetup_r+0x46>
 800333c:	4628      	mov	r0, r5
 800333e:	f7ff f8a3 	bl	8002488 <_free_r>
 8003342:	2300      	movs	r3, #0
 8003344:	6363      	str	r3, [r4, #52]	@ 0x34
 8003346:	2200      	movs	r2, #0
 8003348:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800334c:	6062      	str	r2, [r4, #4]
 800334e:	6922      	ldr	r2, [r4, #16]
 8003350:	6022      	str	r2, [r4, #0]
 8003352:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8003356:	f043 0308 	orr.w	r3, r3, #8
 800335a:	81a3      	strh	r3, [r4, #12]
 800335c:	6922      	ldr	r2, [r4, #16]
 800335e:	b93a      	cbnz	r2, 8003370 <__swsetup_r+0x74>
 8003360:	059a      	lsls	r2, r3, #22
 8003362:	d501      	bpl.n	8003368 <__swsetup_r+0x6c>
 8003364:	0618      	lsls	r0, r3, #24
 8003366:	d503      	bpl.n	8003370 <__swsetup_r+0x74>
 8003368:	4621      	mov	r1, r4
 800336a:	4628      	mov	r0, r5
 800336c:	f000 f8ca 	bl	8003504 <__smakebuf_r>
 8003370:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8003374:	f013 0201 	ands.w	r2, r3, #1
 8003378:	d00a      	beq.n	8003390 <__swsetup_r+0x94>
 800337a:	2200      	movs	r2, #0
 800337c:	60a2      	str	r2, [r4, #8]
 800337e:	6962      	ldr	r2, [r4, #20]
 8003380:	4252      	negs	r2, r2
 8003382:	61a2      	str	r2, [r4, #24]
 8003384:	6922      	ldr	r2, [r4, #16]
 8003386:	b942      	cbnz	r2, 800339a <__swsetup_r+0x9e>
 8003388:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 800338c:	d1c8      	bne.n	8003320 <__swsetup_r+0x24>
 800338e:	bd38      	pop	{r3, r4, r5, pc}
 8003390:	0799      	lsls	r1, r3, #30
 8003392:	bf58      	it	pl
 8003394:	6962      	ldrpl	r2, [r4, #20]
 8003396:	60a2      	str	r2, [r4, #8]
 8003398:	e7f4      	b.n	8003384 <__swsetup_r+0x88>
 800339a:	2000      	movs	r0, #0
 800339c:	e7f7      	b.n	800338e <__swsetup_r+0x92>
 800339e:	bf00      	nop
 80033a0:	2000000c 	.word	0x2000000c

080033a4 <memmove>:
 80033a4:	4288      	cmp	r0, r1
 80033a6:	b510      	push	{r4, lr}
 80033a8:	eb01 0402 	add.w	r4, r1, r2
 80033ac:	d902      	bls.n	80033b4 <memmove+0x10>
 80033ae:	4284      	cmp	r4, r0
 80033b0:	4623      	mov	r3, r4
 80033b2:	d807      	bhi.n	80033c4 <memmove+0x20>
 80033b4:	1e43      	subs	r3, r0, #1
 80033b6:	42a1      	cmp	r1, r4
 80033b8:	d007      	beq.n	80033ca <memmove+0x26>
 80033ba:	f811 2b01 	ldrb.w	r2, [r1], #1
 80033be:	f803 2f01 	strb.w	r2, [r3, #1]!
 80033c2:	e7f8      	b.n	80033b6 <memmove+0x12>
 80033c4:	4402      	add	r2, r0
 80033c6:	4282      	cmp	r2, r0
 80033c8:	d100      	bne.n	80033cc <memmove+0x28>
 80033ca:	bd10      	pop	{r4, pc}
 80033cc:	f813 1d01 	ldrb.w	r1, [r3, #-1]!
 80033d0:	f802 1d01 	strb.w	r1, [r2, #-1]!
 80033d4:	e7f7      	b.n	80033c6 <memmove+0x22>

080033d6 <_raise_r>:
 80033d6:	291f      	cmp	r1, #31
 80033d8:	b538      	push	{r3, r4, r5, lr}
 80033da:	4605      	mov	r5, r0
 80033dc:	460c      	mov	r4, r1
 80033de:	d904      	bls.n	80033ea <_raise_r+0x14>
 80033e0:	2316      	movs	r3, #22
 80033e2:	6003      	str	r3, [r0, #0]
 80033e4:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 80033e8:	bd38      	pop	{r3, r4, r5, pc}
 80033ea:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 80033ec:	b112      	cbz	r2, 80033f4 <_raise_r+0x1e>
 80033ee:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 80033f2:	b94b      	cbnz	r3, 8003408 <_raise_r+0x32>
 80033f4:	4628      	mov	r0, r5
 80033f6:	f000 f831 	bl	800345c <_getpid_r>
 80033fa:	4622      	mov	r2, r4
 80033fc:	4601      	mov	r1, r0
 80033fe:	4628      	mov	r0, r5
 8003400:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8003404:	f000 b818 	b.w	8003438 <_kill_r>
 8003408:	2b01      	cmp	r3, #1
 800340a:	d00a      	beq.n	8003422 <_raise_r+0x4c>
 800340c:	1c59      	adds	r1, r3, #1
 800340e:	d103      	bne.n	8003418 <_raise_r+0x42>
 8003410:	2316      	movs	r3, #22
 8003412:	6003      	str	r3, [r0, #0]
 8003414:	2001      	movs	r0, #1
 8003416:	e7e7      	b.n	80033e8 <_raise_r+0x12>
 8003418:	2100      	movs	r1, #0
 800341a:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 800341e:	4620      	mov	r0, r4
 8003420:	4798      	blx	r3
 8003422:	2000      	movs	r0, #0
 8003424:	e7e0      	b.n	80033e8 <_raise_r+0x12>
	...

08003428 <raise>:
 8003428:	4b02      	ldr	r3, [pc, #8]	@ (8003434 <raise+0xc>)
 800342a:	4601      	mov	r1, r0
 800342c:	6818      	ldr	r0, [r3, #0]
 800342e:	f7ff bfd2 	b.w	80033d6 <_raise_r>
 8003432:	bf00      	nop
 8003434:	2000000c 	.word	0x2000000c

08003438 <_kill_r>:
 8003438:	b538      	push	{r3, r4, r5, lr}
 800343a:	4d07      	ldr	r5, [pc, #28]	@ (8003458 <_kill_r+0x20>)
 800343c:	2300      	movs	r3, #0
 800343e:	4604      	mov	r4, r0
 8003440:	4608      	mov	r0, r1
 8003442:	4611      	mov	r1, r2
 8003444:	602b      	str	r3, [r5, #0]
 8003446:	f000 fb15 	bl	8003a74 <_kill>
 800344a:	1c43      	adds	r3, r0, #1
 800344c:	d102      	bne.n	8003454 <_kill_r+0x1c>
 800344e:	682b      	ldr	r3, [r5, #0]
 8003450:	b103      	cbz	r3, 8003454 <_kill_r+0x1c>
 8003452:	6023      	str	r3, [r4, #0]
 8003454:	bd38      	pop	{r3, r4, r5, pc}
 8003456:	bf00      	nop
 8003458:	20000320 	.word	0x20000320

0800345c <_getpid_r>:
 800345c:	f000 bb02 	b.w	8003a64 <_getpid>

08003460 <_realloc_r>:
 8003460:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003464:	4607      	mov	r7, r0
 8003466:	4614      	mov	r4, r2
 8003468:	460d      	mov	r5, r1
 800346a:	b921      	cbnz	r1, 8003476 <_realloc_r+0x16>
 800346c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8003470:	4611      	mov	r1, r2
 8003472:	f7ff b87d 	b.w	8002570 <_malloc_r>
 8003476:	b92a      	cbnz	r2, 8003484 <_realloc_r+0x24>
 8003478:	f7ff f806 	bl	8002488 <_free_r>
 800347c:	4625      	mov	r5, r4
 800347e:	4628      	mov	r0, r5
 8003480:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003484:	f000 f89a 	bl	80035bc <_malloc_usable_size_r>
 8003488:	4284      	cmp	r4, r0
 800348a:	4606      	mov	r6, r0
 800348c:	d802      	bhi.n	8003494 <_realloc_r+0x34>
 800348e:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 8003492:	d8f4      	bhi.n	800347e <_realloc_r+0x1e>
 8003494:	4621      	mov	r1, r4
 8003496:	4638      	mov	r0, r7
 8003498:	f7ff f86a 	bl	8002570 <_malloc_r>
 800349c:	4680      	mov	r8, r0
 800349e:	b908      	cbnz	r0, 80034a4 <_realloc_r+0x44>
 80034a0:	4645      	mov	r5, r8
 80034a2:	e7ec      	b.n	800347e <_realloc_r+0x1e>
 80034a4:	42b4      	cmp	r4, r6
 80034a6:	4622      	mov	r2, r4
 80034a8:	4629      	mov	r1, r5
 80034aa:	bf28      	it	cs
 80034ac:	4632      	movcs	r2, r6
 80034ae:	f7ff fd2d 	bl	8002f0c <memcpy>
 80034b2:	4629      	mov	r1, r5
 80034b4:	4638      	mov	r0, r7
 80034b6:	f7fe ffe7 	bl	8002488 <_free_r>
 80034ba:	e7f1      	b.n	80034a0 <_realloc_r+0x40>

080034bc <__swhatbuf_r>:
 80034bc:	b570      	push	{r4, r5, r6, lr}
 80034be:	460c      	mov	r4, r1
 80034c0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80034c4:	2900      	cmp	r1, #0
 80034c6:	b096      	sub	sp, #88	@ 0x58
 80034c8:	4615      	mov	r5, r2
 80034ca:	461e      	mov	r6, r3
 80034cc:	da0a      	bge.n	80034e4 <__swhatbuf_r+0x28>
 80034ce:	89a1      	ldrh	r1, [r4, #12]
 80034d0:	f011 0180 	ands.w	r1, r1, #128	@ 0x80
 80034d4:	d113      	bne.n	80034fe <__swhatbuf_r+0x42>
 80034d6:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 80034da:	2000      	movs	r0, #0
 80034dc:	6031      	str	r1, [r6, #0]
 80034de:	602a      	str	r2, [r5, #0]
 80034e0:	b016      	add	sp, #88	@ 0x58
 80034e2:	bd70      	pop	{r4, r5, r6, pc}
 80034e4:	466a      	mov	r2, sp
 80034e6:	f000 f847 	bl	8003578 <_fstat_r>
 80034ea:	2800      	cmp	r0, #0
 80034ec:	dbef      	blt.n	80034ce <__swhatbuf_r+0x12>
 80034ee:	9901      	ldr	r1, [sp, #4]
 80034f0:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 80034f4:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 80034f8:	4259      	negs	r1, r3
 80034fa:	4159      	adcs	r1, r3
 80034fc:	e7eb      	b.n	80034d6 <__swhatbuf_r+0x1a>
 80034fe:	2100      	movs	r1, #0
 8003500:	2240      	movs	r2, #64	@ 0x40
 8003502:	e7ea      	b.n	80034da <__swhatbuf_r+0x1e>

08003504 <__smakebuf_r>:
 8003504:	898b      	ldrh	r3, [r1, #12]
 8003506:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8003508:	079e      	lsls	r6, r3, #30
 800350a:	4605      	mov	r5, r0
 800350c:	460c      	mov	r4, r1
 800350e:	d507      	bpl.n	8003520 <__smakebuf_r+0x1c>
 8003510:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 8003514:	6023      	str	r3, [r4, #0]
 8003516:	6123      	str	r3, [r4, #16]
 8003518:	2301      	movs	r3, #1
 800351a:	6163      	str	r3, [r4, #20]
 800351c:	b002      	add	sp, #8
 800351e:	bd70      	pop	{r4, r5, r6, pc}
 8003520:	ab01      	add	r3, sp, #4
 8003522:	466a      	mov	r2, sp
 8003524:	f7ff ffca 	bl	80034bc <__swhatbuf_r>
 8003528:	9e00      	ldr	r6, [sp, #0]
 800352a:	4628      	mov	r0, r5
 800352c:	4631      	mov	r1, r6
 800352e:	f7ff f81f 	bl	8002570 <_malloc_r>
 8003532:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8003536:	b938      	cbnz	r0, 8003548 <__smakebuf_r+0x44>
 8003538:	059a      	lsls	r2, r3, #22
 800353a:	d4ef      	bmi.n	800351c <__smakebuf_r+0x18>
 800353c:	f023 0303 	bic.w	r3, r3, #3
 8003540:	f043 0302 	orr.w	r3, r3, #2
 8003544:	81a3      	strh	r3, [r4, #12]
 8003546:	e7e3      	b.n	8003510 <__smakebuf_r+0xc>
 8003548:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800354c:	81a3      	strh	r3, [r4, #12]
 800354e:	9b01      	ldr	r3, [sp, #4]
 8003550:	6020      	str	r0, [r4, #0]
 8003552:	e9c4 0604 	strd	r0, r6, [r4, #16]
 8003556:	2b00      	cmp	r3, #0
 8003558:	d0e0      	beq.n	800351c <__smakebuf_r+0x18>
 800355a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800355e:	4628      	mov	r0, r5
 8003560:	f000 f81c 	bl	800359c <_isatty_r>
 8003564:	2800      	cmp	r0, #0
 8003566:	d0d9      	beq.n	800351c <__smakebuf_r+0x18>
 8003568:	89a3      	ldrh	r3, [r4, #12]
 800356a:	f023 0303 	bic.w	r3, r3, #3
 800356e:	f043 0301 	orr.w	r3, r3, #1
 8003572:	81a3      	strh	r3, [r4, #12]
 8003574:	e7d2      	b.n	800351c <__smakebuf_r+0x18>
	...

08003578 <_fstat_r>:
 8003578:	b538      	push	{r3, r4, r5, lr}
 800357a:	4d07      	ldr	r5, [pc, #28]	@ (8003598 <_fstat_r+0x20>)
 800357c:	2300      	movs	r3, #0
 800357e:	4604      	mov	r4, r0
 8003580:	4608      	mov	r0, r1
 8003582:	4611      	mov	r1, r2
 8003584:	602b      	str	r3, [r5, #0]
 8003586:	f000 fad5 	bl	8003b34 <_fstat>
 800358a:	1c43      	adds	r3, r0, #1
 800358c:	d102      	bne.n	8003594 <_fstat_r+0x1c>
 800358e:	682b      	ldr	r3, [r5, #0]
 8003590:	b103      	cbz	r3, 8003594 <_fstat_r+0x1c>
 8003592:	6023      	str	r3, [r4, #0]
 8003594:	bd38      	pop	{r3, r4, r5, pc}
 8003596:	bf00      	nop
 8003598:	20000320 	.word	0x20000320

0800359c <_isatty_r>:
 800359c:	b538      	push	{r3, r4, r5, lr}
 800359e:	4d06      	ldr	r5, [pc, #24]	@ (80035b8 <_isatty_r+0x1c>)
 80035a0:	2300      	movs	r3, #0
 80035a2:	4604      	mov	r4, r0
 80035a4:	4608      	mov	r0, r1
 80035a6:	602b      	str	r3, [r5, #0]
 80035a8:	f000 fad4 	bl	8003b54 <_isatty>
 80035ac:	1c43      	adds	r3, r0, #1
 80035ae:	d102      	bne.n	80035b6 <_isatty_r+0x1a>
 80035b0:	682b      	ldr	r3, [r5, #0]
 80035b2:	b103      	cbz	r3, 80035b6 <_isatty_r+0x1a>
 80035b4:	6023      	str	r3, [r4, #0]
 80035b6:	bd38      	pop	{r3, r4, r5, pc}
 80035b8:	20000320 	.word	0x20000320

080035bc <_malloc_usable_size_r>:
 80035bc:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80035c0:	1f18      	subs	r0, r3, #4
 80035c2:	2b00      	cmp	r3, #0
 80035c4:	bfbc      	itt	lt
 80035c6:	580b      	ldrlt	r3, [r1, r0]
 80035c8:	18c0      	addlt	r0, r0, r3
 80035ca:	4770      	bx	lr

080035cc <main>:
uint8_t date_buff[BUFF_LEN] = {0};

/**
 * Main function: Initializes UART2 and RTC, then continuously displays time and date.
 */
int main(void) {
 80035cc:	b580      	push	{r7, lr}
 80035ce:	af00      	add	r7, sp, #0
    // Initialize UART 2 peripheral for debugging
    uart2_init();
 80035d0:	f000 fb0e 	bl	8003bf0 <uart2_init>

    // Initialize RTC peripheral
    rtc_init();
 80035d4:	f000 f926 	bl	8003824 <rtc_init>

    while (1) {
    	// Display the current time and date
    	display_rtc_calendar();
 80035d8:	f000 f802 	bl	80035e0 <display_rtc_calendar>
 80035dc:	e7fc      	b.n	80035d8 <main+0xc>
	...

080035e0 <display_rtc_calendar>:
    }

    return 0;
}

static void display_rtc_calendar(void) {
 80035e0:	b5b0      	push	{r4, r5, r7, lr}
 80035e2:	b082      	sub	sp, #8
 80035e4:	af02      	add	r7, sp, #8
    // Time display format --> HH:MM:SS
	sprintf((char *)time_buff, "%02d:%02d:%02d",
	         rtc_time_get_current_hour(),
 80035e6:	f000 fa07 	bl	80039f8 <rtc_time_get_current_hour>
 80035ea:	4603      	mov	r3, r0
	sprintf((char *)time_buff, "%02d:%02d:%02d",
 80035ec:	461c      	mov	r4, r3
	         rtc_time_get_current_minute(),
 80035ee:	f000 f9ed 	bl	80039cc <rtc_time_get_current_minute>
 80035f2:	4603      	mov	r3, r0
	sprintf((char *)time_buff, "%02d:%02d:%02d",
 80035f4:	461d      	mov	r5, r3
	         rtc_time_get_current_second());
 80035f6:	f000 f9d5 	bl	80039a4 <rtc_time_get_current_second>
 80035fa:	4603      	mov	r3, r0
	sprintf((char *)time_buff, "%02d:%02d:%02d",
 80035fc:	9300      	str	r3, [sp, #0]
 80035fe:	462b      	mov	r3, r5
 8003600:	4622      	mov	r2, r4
 8003602:	490f      	ldr	r1, [pc, #60]	@ (8003640 <display_rtc_calendar+0x60>)
 8003604:	480f      	ldr	r0, [pc, #60]	@ (8003644 <display_rtc_calendar+0x64>)
 8003606:	f000 fbc9 	bl	8003d9c <siprintf>

    // Date display format --> YYYY-MM-DD
    sprintf((char *)date_buff, "20%02d-%02d-%02d",
             rtc_date_get_current_year(),
 800360a:	f000 f9b7 	bl	800397c <rtc_date_get_current_year>
 800360e:	4603      	mov	r3, r0
    sprintf((char *)date_buff, "20%02d-%02d-%02d",
 8003610:	461c      	mov	r4, r3
             rtc_date_get_current_month(),
 8003612:	f000 f99d 	bl	8003950 <rtc_date_get_current_month>
 8003616:	4603      	mov	r3, r0
    sprintf((char *)date_buff, "20%02d-%02d-%02d",
 8003618:	461d      	mov	r5, r3
             rtc_date_get_current_day());
 800361a:	f000 f985 	bl	8003928 <rtc_date_get_current_day>
 800361e:	4603      	mov	r3, r0
    sprintf((char *)date_buff, "20%02d-%02d-%02d",
 8003620:	9300      	str	r3, [sp, #0]
 8003622:	462b      	mov	r3, r5
 8003624:	4622      	mov	r2, r4
 8003626:	4908      	ldr	r1, [pc, #32]	@ (8003648 <display_rtc_calendar+0x68>)
 8003628:	4808      	ldr	r0, [pc, #32]	@ (800364c <display_rtc_calendar+0x6c>)
 800362a:	f000 fbb7 	bl	8003d9c <siprintf>

    // Print compact combined calendar format --> YYYY-MM-DD HH:MM:SS
    printf("%s %s\n\r", date_buff, time_buff);
 800362e:	4a05      	ldr	r2, [pc, #20]	@ (8003644 <display_rtc_calendar+0x64>)
 8003630:	4906      	ldr	r1, [pc, #24]	@ (800364c <display_rtc_calendar+0x6c>)
 8003632:	4807      	ldr	r0, [pc, #28]	@ (8003650 <display_rtc_calendar+0x70>)
 8003634:	f000 fba0 	bl	8003d78 <iprintf>
}
 8003638:	bf00      	nop
 800363a:	46bd      	mov	sp, r7
 800363c:	bdb0      	pop	{r4, r5, r7, pc}
 800363e:	bf00      	nop
 8003640:	080040c0 	.word	0x080040c0
 8003644:	20000330 	.word	0x20000330
 8003648:	080040d0 	.word	0x080040d0
 800364c:	20000340 	.word	0x20000340
 8003650:	080040e4 	.word	0x080040e4

08003654 <rtc_set_asynchronous_prescaler>:
static uint8_t wait_for_rtc_synchronization(void);
static uint8_t rtc_initialization_sequence_exit(void);
static void rtc_date_config(uint32_t WeekDay, uint32_t Day, uint32_t Month, uint32_t Year);
static void rtc_time_config(uint32_t Format12_24, uint32_t Hours, uint32_t Minutes, uint32_t Seconds);

static void rtc_set_asynchronous_prescaler(uint32_t Asynch_Prescaler) {
 8003654:	b480      	push	{r7}
 8003656:	b083      	sub	sp, #12
 8003658:	af00      	add	r7, sp, #0
 800365a:	6078      	str	r0, [r7, #4]
    MODIFY_REG(RTC->PRER, RTC_PRER_PREDIV_A, Asynch_Prescaler << RTC_PRER_PREDIV_A_Pos);
 800365c:	4b07      	ldr	r3, [pc, #28]	@ (800367c <rtc_set_asynchronous_prescaler+0x28>)
 800365e:	691b      	ldr	r3, [r3, #16]
 8003660:	f423 02fe 	bic.w	r2, r3, #8323072	@ 0x7f0000
 8003664:	687b      	ldr	r3, [r7, #4]
 8003666:	041b      	lsls	r3, r3, #16
 8003668:	4904      	ldr	r1, [pc, #16]	@ (800367c <rtc_set_asynchronous_prescaler+0x28>)
 800366a:	4313      	orrs	r3, r2
 800366c:	610b      	str	r3, [r1, #16]
}
 800366e:	bf00      	nop
 8003670:	370c      	adds	r7, #12
 8003672:	46bd      	mov	sp, r7
 8003674:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003678:	4770      	bx	lr
 800367a:	bf00      	nop
 800367c:	40002800 	.word	0x40002800

08003680 <rtc_set_synchronous_prescaler>:

static void rtc_set_synchronous_prescaler(uint32_t Synch_Prescaler) {
 8003680:	b480      	push	{r7}
 8003682:	b083      	sub	sp, #12
 8003684:	af00      	add	r7, sp, #0
 8003686:	6078      	str	r0, [r7, #4]
    MODIFY_REG(RTC->PRER, RTC_PRER_PREDIV_S, Synch_Prescaler << RTC_PRER_PREDIV_S_Pos);
 8003688:	4b07      	ldr	r3, [pc, #28]	@ (80036a8 <rtc_set_synchronous_prescaler+0x28>)
 800368a:	691b      	ldr	r3, [r3, #16]
 800368c:	f423 43ff 	bic.w	r3, r3, #32640	@ 0x7f80
 8003690:	f023 037f 	bic.w	r3, r3, #127	@ 0x7f
 8003694:	4904      	ldr	r1, [pc, #16]	@ (80036a8 <rtc_set_synchronous_prescaler+0x28>)
 8003696:	687a      	ldr	r2, [r7, #4]
 8003698:	4313      	orrs	r3, r2
 800369a:	610b      	str	r3, [r1, #16]
}
 800369c:	bf00      	nop
 800369e:	370c      	adds	r7, #12
 80036a0:	46bd      	mov	sp, r7
 80036a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80036a6:	4770      	bx	lr
 80036a8:	40002800 	.word	0x40002800

080036ac <rtc_initialization_sequence_enter>:

static uint8_t rtc_initialization_sequence_enter(void) {
 80036ac:	b580      	push	{r7, lr}
 80036ae:	af00      	add	r7, sp, #0
    // Put the RTC peripheral into initialization mode
	rtc_enable_initialization_mode();
 80036b0:	f000 f874 	bl	800379c <rtc_enable_initialization_mode>

    // Wait until the RTC peripheral is in initialization mode
    while (is_rtc_initialization_mode() != 1) {
 80036b4:	bf00      	nop
 80036b6:	f000 f891 	bl	80037dc <is_rtc_initialization_mode>
 80036ba:	4603      	mov	r3, r0
 80036bc:	2b01      	cmp	r3, #1
 80036be:	d1fa      	bne.n	80036b6 <rtc_initialization_sequence_enter+0xa>
    }

    return 1;
 80036c0:	2301      	movs	r3, #1
}
 80036c2:	4618      	mov	r0, r3
 80036c4:	bd80      	pop	{r7, pc}
	...

080036c8 <wait_for_rtc_synchronization>:

static uint8_t wait_for_rtc_synchronization(void) {
 80036c8:	b580      	push	{r7, lr}
 80036ca:	af00      	add	r7, sp, #0
    // Clear the registers synchronization flag (RSF)
    RTC->ISR &= ~ISR_RSF;
 80036cc:	4b07      	ldr	r3, [pc, #28]	@ (80036ec <wait_for_rtc_synchronization+0x24>)
 80036ce:	68db      	ldr	r3, [r3, #12]
 80036d0:	4a06      	ldr	r2, [pc, #24]	@ (80036ec <wait_for_rtc_synchronization+0x24>)
 80036d2:	f023 0320 	bic.w	r3, r3, #32
 80036d6:	60d3      	str	r3, [r2, #12]

    // Wait until the RTC registers are synchronized
    while (is_rtc_synchronized() != 1) {
 80036d8:	bf00      	nop
 80036da:	f000 f891 	bl	8003800 <is_rtc_synchronized>
 80036de:	4603      	mov	r3, r0
 80036e0:	2b01      	cmp	r3, #1
 80036e2:	d1fa      	bne.n	80036da <wait_for_rtc_synchronization+0x12>
    }

    return 1;
 80036e4:	2301      	movs	r3, #1
}
 80036e6:	4618      	mov	r0, r3
 80036e8:	bd80      	pop	{r7, pc}
 80036ea:	bf00      	nop
 80036ec:	40002800 	.word	0x40002800

080036f0 <rtc_initialization_sequence_exit>:

static uint8_t rtc_initialization_sequence_exit(void) {
 80036f0:	b580      	push	{r7, lr}
 80036f2:	af00      	add	r7, sp, #0
    // Stop the RTC peripheral initialization mode
	rtc_disable_initialization_mode();
 80036f4:	f000 f862 	bl	80037bc <rtc_disable_initialization_mode>

	// Wait until the RTC registers are synchronized
    return (wait_for_rtc_synchronization());
 80036f8:	f7ff ffe6 	bl	80036c8 <wait_for_rtc_synchronization>
 80036fc:	4603      	mov	r3, r0
}
 80036fe:	4618      	mov	r0, r3
 8003700:	bd80      	pop	{r7, pc}
	...

08003704 <rtc_date_config>:

static void rtc_date_config(uint32_t WeekDay, uint32_t Day, uint32_t Month, uint32_t Year) {
 8003704:	b490      	push	{r4, r7}
 8003706:	b084      	sub	sp, #16
 8003708:	af00      	add	r7, sp, #0
 800370a:	60f8      	str	r0, [r7, #12]
 800370c:	60b9      	str	r1, [r7, #8]
 800370e:	607a      	str	r2, [r7, #4]
 8003710:	603b      	str	r3, [r7, #0]
	// A temporary variable to hold the date value
    register uint32_t temp = 0U;

    // Combine date components that are week day, day, month and year
    temp = (WeekDay << RTC_DR_WDU_Pos) |
 8003712:	68fb      	ldr	r3, [r7, #12]
 8003714:	035a      	lsls	r2, r3, #13
           (((Year & 0xF0U) << (RTC_DR_YT_Pos - 4U)) | ((Year & 0x0FU) << RTC_DR_YU_Pos)) |
 8003716:	683b      	ldr	r3, [r7, #0]
 8003718:	041b      	lsls	r3, r3, #16
 800371a:	f403 037f 	and.w	r3, r3, #16711680	@ 0xff0000
    temp = (WeekDay << RTC_DR_WDU_Pos) |
 800371e:	431a      	orrs	r2, r3
           (((Month & 0xF0U) << (RTC_DR_MT_Pos - 4U)) | ((Month & 0x0FU) << RTC_DR_MU_Pos)) |
 8003720:	687b      	ldr	r3, [r7, #4]
 8003722:	021b      	lsls	r3, r3, #8
 8003724:	b29b      	uxth	r3, r3
           (((Year & 0xF0U) << (RTC_DR_YT_Pos - 4U)) | ((Year & 0x0FU) << RTC_DR_YU_Pos)) |
 8003726:	431a      	orrs	r2, r3
           (((Day & 0xF0U) << (RTC_DR_DT_Pos - 4U)) | ((Day & 0x0FU) << RTC_DR_DU_Pos));
 8003728:	68bb      	ldr	r3, [r7, #8]
 800372a:	b2db      	uxtb	r3, r3
    temp = (WeekDay << RTC_DR_WDU_Pos) |
 800372c:	ea42 0403 	orr.w	r4, r2, r3

    // Update the RTC’s time register with the newly constructed date value
    MODIFY_REG(RTC->DR, (RTC_DR_WDU | RTC_DR_MT | RTC_DR_MU | RTC_DR_DT | RTC_DR_DU | RTC_DR_YT | RTC_DR_YU), temp);
 8003730:	4b05      	ldr	r3, [pc, #20]	@ (8003748 <rtc_date_config+0x44>)
 8003732:	685a      	ldr	r2, [r3, #4]
 8003734:	4b05      	ldr	r3, [pc, #20]	@ (800374c <rtc_date_config+0x48>)
 8003736:	4013      	ands	r3, r2
 8003738:	4a03      	ldr	r2, [pc, #12]	@ (8003748 <rtc_date_config+0x44>)
 800373a:	4323      	orrs	r3, r4
 800373c:	6053      	str	r3, [r2, #4]
}
 800373e:	bf00      	nop
 8003740:	3710      	adds	r7, #16
 8003742:	46bd      	mov	sp, r7
 8003744:	bc90      	pop	{r4, r7}
 8003746:	4770      	bx	lr
 8003748:	40002800 	.word	0x40002800
 800374c:	ff0000c0 	.word	0xff0000c0

08003750 <rtc_time_config>:

static void rtc_time_config(uint32_t Format12_24, uint32_t Hours, uint32_t Minutes, uint32_t Seconds) {
 8003750:	b490      	push	{r4, r7}
 8003752:	b084      	sub	sp, #16
 8003754:	af00      	add	r7, sp, #0
 8003756:	60f8      	str	r0, [r7, #12]
 8003758:	60b9      	str	r1, [r7, #8]
 800375a:	607a      	str	r2, [r7, #4]
 800375c:	603b      	str	r3, [r7, #0]
	// A temporary variable to hold the time value
    register uint32_t temp = 0U;

    // Combine time components that are time format, hours, minutes and seconds
    temp = Format12_24 | (((Hours & 0xF0U) << (RTC_TR_HT_Pos - 4U)) | ((Hours & 0x0FU) << RTC_TR_HU_Pos)) |
 800375e:	68bb      	ldr	r3, [r7, #8]
 8003760:	041b      	lsls	r3, r3, #16
 8003762:	f403 027f 	and.w	r2, r3, #16711680	@ 0xff0000
 8003766:	68fb      	ldr	r3, [r7, #12]
 8003768:	431a      	orrs	r2, r3
           (((Minutes & 0xF0U) << (RTC_TR_MNT_Pos - 4U)) | ((Minutes & 0x0FU) << RTC_TR_MNU_Pos)) |
 800376a:	687b      	ldr	r3, [r7, #4]
 800376c:	021b      	lsls	r3, r3, #8
 800376e:	b29b      	uxth	r3, r3
    temp = Format12_24 | (((Hours & 0xF0U) << (RTC_TR_HT_Pos - 4U)) | ((Hours & 0x0FU) << RTC_TR_HU_Pos)) |
 8003770:	431a      	orrs	r2, r3
           (((Seconds & 0xF0U) << (RTC_TR_ST_Pos - 4U)) | ((Seconds & 0x0FU) << RTC_TR_SU_Pos));
 8003772:	683b      	ldr	r3, [r7, #0]
 8003774:	b2db      	uxtb	r3, r3
    temp = Format12_24 | (((Hours & 0xF0U) << (RTC_TR_HT_Pos - 4U)) | ((Hours & 0x0FU) << RTC_TR_HU_Pos)) |
 8003776:	ea42 0403 	orr.w	r4, r2, r3

    // Update the RTC’s time register with the newly constructed time value
    MODIFY_REG(RTC->TR, (RTC_TR_PM | RTC_TR_HT | RTC_TR_HU | RTC_TR_MNT | RTC_TR_MNU | RTC_TR_ST | RTC_TR_SU), temp);
 800377a:	4b07      	ldr	r3, [pc, #28]	@ (8003798 <rtc_time_config+0x48>)
 800377c:	681b      	ldr	r3, [r3, #0]
 800377e:	f023 137f 	bic.w	r3, r3, #8323199	@ 0x7f007f
 8003782:	f423 43fe 	bic.w	r3, r3, #32512	@ 0x7f00
 8003786:	4a04      	ldr	r2, [pc, #16]	@ (8003798 <rtc_time_config+0x48>)
 8003788:	4323      	orrs	r3, r4
 800378a:	6013      	str	r3, [r2, #0]
}
 800378c:	bf00      	nop
 800378e:	3710      	adds	r7, #16
 8003790:	46bd      	mov	sp, r7
 8003792:	bc90      	pop	{r4, r7}
 8003794:	4770      	bx	lr
 8003796:	bf00      	nop
 8003798:	40002800 	.word	0x40002800

0800379c <rtc_enable_initialization_mode>:

void rtc_enable_initialization_mode(void) {
 800379c:	b480      	push	{r7}
 800379e:	af00      	add	r7, sp, #0
	RTC->ISR |= ISR_INIT;
 80037a0:	4b05      	ldr	r3, [pc, #20]	@ (80037b8 <rtc_enable_initialization_mode+0x1c>)
 80037a2:	68db      	ldr	r3, [r3, #12]
 80037a4:	4a04      	ldr	r2, [pc, #16]	@ (80037b8 <rtc_enable_initialization_mode+0x1c>)
 80037a6:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80037aa:	60d3      	str	r3, [r2, #12]
}
 80037ac:	bf00      	nop
 80037ae:	46bd      	mov	sp, r7
 80037b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80037b4:	4770      	bx	lr
 80037b6:	bf00      	nop
 80037b8:	40002800 	.word	0x40002800

080037bc <rtc_disable_initialization_mode>:

void rtc_disable_initialization_mode(void) {
 80037bc:	b480      	push	{r7}
 80037be:	af00      	add	r7, sp, #0
	RTC->ISR &= ~ISR_INIT;
 80037c0:	4b05      	ldr	r3, [pc, #20]	@ (80037d8 <rtc_disable_initialization_mode+0x1c>)
 80037c2:	68db      	ldr	r3, [r3, #12]
 80037c4:	4a04      	ldr	r2, [pc, #16]	@ (80037d8 <rtc_disable_initialization_mode+0x1c>)
 80037c6:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 80037ca:	60d3      	str	r3, [r2, #12]
}
 80037cc:	bf00      	nop
 80037ce:	46bd      	mov	sp, r7
 80037d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80037d4:	4770      	bx	lr
 80037d6:	bf00      	nop
 80037d8:	40002800 	.word	0x40002800

080037dc <is_rtc_initialization_mode>:

uint8_t is_rtc_initialization_mode(void) {
 80037dc:	b480      	push	{r7}
 80037de:	af00      	add	r7, sp, #0
	return ((RTC->ISR & (ISR_INITF)) == ISR_INITF);
 80037e0:	4b06      	ldr	r3, [pc, #24]	@ (80037fc <is_rtc_initialization_mode+0x20>)
 80037e2:	68db      	ldr	r3, [r3, #12]
 80037e4:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80037e8:	2b40      	cmp	r3, #64	@ 0x40
 80037ea:	bf0c      	ite	eq
 80037ec:	2301      	moveq	r3, #1
 80037ee:	2300      	movne	r3, #0
 80037f0:	b2db      	uxtb	r3, r3
}
 80037f2:	4618      	mov	r0, r3
 80037f4:	46bd      	mov	sp, r7
 80037f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80037fa:	4770      	bx	lr
 80037fc:	40002800 	.word	0x40002800

08003800 <is_rtc_synchronized>:

uint8_t is_rtc_synchronized(void) {
 8003800:	b480      	push	{r7}
 8003802:	af00      	add	r7, sp, #0
	return ((RTC->ISR & (ISR_RSF)) == ISR_RSF);
 8003804:	4b06      	ldr	r3, [pc, #24]	@ (8003820 <is_rtc_synchronized+0x20>)
 8003806:	68db      	ldr	r3, [r3, #12]
 8003808:	f003 0320 	and.w	r3, r3, #32
 800380c:	2b20      	cmp	r3, #32
 800380e:	bf0c      	ite	eq
 8003810:	2301      	moveq	r3, #1
 8003812:	2300      	movne	r3, #0
 8003814:	b2db      	uxtb	r3, r3
}
 8003816:	4618      	mov	r0, r3
 8003818:	46bd      	mov	sp, r7
 800381a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800381e:	4770      	bx	lr
 8003820:	40002800 	.word	0x40002800

08003824 <rtc_init>:

void rtc_init(void) {
 8003824:	b580      	push	{r7, lr}
 8003826:	af00      	add	r7, sp, #0
	// Enable the clock access to PWR
    RCC->APB1ENR |= PWREN;
 8003828:	4b2f      	ldr	r3, [pc, #188]	@ (80038e8 <rtc_init+0xc4>)
 800382a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800382c:	4a2e      	ldr	r2, [pc, #184]	@ (80038e8 <rtc_init+0xc4>)
 800382e:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8003832:	6413      	str	r3, [r2, #64]	@ 0x40

    // Enable write access to RTC and RTC backup registers
    PWR->CR |= CR_DBP;
 8003834:	4b2d      	ldr	r3, [pc, #180]	@ (80038ec <rtc_init+0xc8>)
 8003836:	681b      	ldr	r3, [r3, #0]
 8003838:	4a2c      	ldr	r2, [pc, #176]	@ (80038ec <rtc_init+0xc8>)
 800383a:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800383e:	6013      	str	r3, [r2, #0]

    // Enable the low-speed internal oscillator (LSI)
    RCC->CSR |= CSR_LSION;
 8003840:	4b29      	ldr	r3, [pc, #164]	@ (80038e8 <rtc_init+0xc4>)
 8003842:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8003844:	4a28      	ldr	r2, [pc, #160]	@ (80038e8 <rtc_init+0xc4>)
 8003846:	f043 0301 	orr.w	r3, r3, #1
 800384a:	6753      	str	r3, [r2, #116]	@ 0x74

    // Wait until the LSI oscillator is stable and ready to use
    while ((RCC->CSR & (CSR_LSIRDY)) != CSR_LSIRDY) {
 800384c:	bf00      	nop
 800384e:	4b26      	ldr	r3, [pc, #152]	@ (80038e8 <rtc_init+0xc4>)
 8003850:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8003852:	f003 0302 	and.w	r3, r3, #2
 8003856:	2b02      	cmp	r3, #2
 8003858:	d1f9      	bne.n	800384e <rtc_init+0x2a>
    }

    // Force a software reset of the backup domain to ensure a clean configuration
    RCC->BDCR |= BDCR_BDRST;
 800385a:	4b23      	ldr	r3, [pc, #140]	@ (80038e8 <rtc_init+0xc4>)
 800385c:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800385e:	4a22      	ldr	r2, [pc, #136]	@ (80038e8 <rtc_init+0xc4>)
 8003860:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8003864:	6713      	str	r3, [r2, #112]	@ 0x70

    // Release the reset to allow the backup domain to function normally
    RCC->BDCR &= ~BDCR_BDRST;
 8003866:	4b20      	ldr	r3, [pc, #128]	@ (80038e8 <rtc_init+0xc4>)
 8003868:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800386a:	4a1f      	ldr	r2, [pc, #124]	@ (80038e8 <rtc_init+0xc4>)
 800386c:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8003870:	6713      	str	r3, [r2, #112]	@ 0x70

    // Set the clock source for the RTC peripheral to LSI
    RCC->BDCR &= ~(1U << 8);
 8003872:	4b1d      	ldr	r3, [pc, #116]	@ (80038e8 <rtc_init+0xc4>)
 8003874:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8003876:	4a1c      	ldr	r2, [pc, #112]	@ (80038e8 <rtc_init+0xc4>)
 8003878:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 800387c:	6713      	str	r3, [r2, #112]	@ 0x70
    RCC->BDCR |= (1U << 9);
 800387e:	4b1a      	ldr	r3, [pc, #104]	@ (80038e8 <rtc_init+0xc4>)
 8003880:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8003882:	4a19      	ldr	r2, [pc, #100]	@ (80038e8 <rtc_init+0xc4>)
 8003884:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8003888:	6713      	str	r3, [r2, #112]	@ 0x70

    // Enable the RTC peripheral
    RCC->BDCR |= BDCR_RTCEN;
 800388a:	4b17      	ldr	r3, [pc, #92]	@ (80038e8 <rtc_init+0xc4>)
 800388c:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800388e:	4a16      	ldr	r2, [pc, #88]	@ (80038e8 <rtc_init+0xc4>)
 8003890:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8003894:	6713      	str	r3, [r2, #112]	@ 0x70

    // Disable the write protection of RTC registers
    RTC->WPR = RTC_WRITE_PROTECTION_KEY_1;
 8003896:	4b16      	ldr	r3, [pc, #88]	@ (80038f0 <rtc_init+0xcc>)
 8003898:	22ca      	movs	r2, #202	@ 0xca
 800389a:	625a      	str	r2, [r3, #36]	@ 0x24
    RTC->WPR = RTC_WRITE_PROTECTION_KEY_2;
 800389c:	4b14      	ldr	r3, [pc, #80]	@ (80038f0 <rtc_init+0xcc>)
 800389e:	2253      	movs	r2, #83	@ 0x53
 80038a0:	625a      	str	r2, [r3, #36]	@ 0x24

    // Enter the initialization mode
    if (rtc_initialization_sequence_enter() != 1) {
 80038a2:	f7ff ff03 	bl	80036ac <rtc_initialization_sequence_enter>
        // Handle initialization failure if necessary
    }

    // Configure the RTC peripheral to the desired date: Friday, April 18th, 2025
    // Format --> Weekday, Day, Month, Year
    rtc_date_config(0x05U, 0x18U, 0x04U, 0x25U);
 80038a6:	2325      	movs	r3, #37	@ 0x25
 80038a8:	2204      	movs	r2, #4
 80038aa:	2118      	movs	r1, #24
 80038ac:	2005      	movs	r0, #5
 80038ae:	f7ff ff29 	bl	8003704 <rtc_date_config>

    // Configure the RTC peripheral to the desired time: 05:59:55 PM
    // Format --> Time Format, Hour, Minute, Second
    rtc_time_config(TIME_FORMAT_PM, 0x05U, 0x59U, 0x55U);
 80038b2:	2355      	movs	r3, #85	@ 0x55
 80038b4:	2259      	movs	r2, #89	@ 0x59
 80038b6:	2105      	movs	r1, #5
 80038b8:	f44f 0080 	mov.w	r0, #4194304	@ 0x400000
 80038bc:	f7ff ff48 	bl	8003750 <rtc_time_config>

    // Configure the RTC peripheral so that it uses a 12-hour format
    RTC->CR |= CR_FMT;
 80038c0:	4b0b      	ldr	r3, [pc, #44]	@ (80038f0 <rtc_init+0xcc>)
 80038c2:	689b      	ldr	r3, [r3, #8]
 80038c4:	4a0a      	ldr	r2, [pc, #40]	@ (80038f0 <rtc_init+0xcc>)
 80038c6:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80038ca:	6093      	str	r3, [r2, #8]

    // Set the asynchronous and synchronous prescaler values
    rtc_set_asynchronous_prescaler(RTC_ASYNCH_PREDIV);
 80038cc:	207f      	movs	r0, #127	@ 0x7f
 80038ce:	f7ff fec1 	bl	8003654 <rtc_set_asynchronous_prescaler>
    rtc_set_synchronous_prescaler(RTC_SYNCH_PREDIV);
 80038d2:	20f9      	movs	r0, #249	@ 0xf9
 80038d4:	f7ff fed4 	bl	8003680 <rtc_set_synchronous_prescaler>

    // Exit the initialization mode
    rtc_initialization_sequence_exit();
 80038d8:	f7ff ff0a 	bl	80036f0 <rtc_initialization_sequence_exit>

    // Re-enable write protection on the RTC registers to prevent accidental changes
    RTC->WPR = (uint8_t)0xFF;
 80038dc:	4b04      	ldr	r3, [pc, #16]	@ (80038f0 <rtc_init+0xcc>)
 80038de:	22ff      	movs	r2, #255	@ 0xff
 80038e0:	625a      	str	r2, [r3, #36]	@ 0x24
}
 80038e2:	bf00      	nop
 80038e4:	bd80      	pop	{r7, pc}
 80038e6:	bf00      	nop
 80038e8:	40023800 	.word	0x40023800
 80038ec:	40007000 	.word	0x40007000
 80038f0:	40002800 	.word	0x40002800

080038f4 <rtc_convert_bcd2dec>:

uint8_t rtc_convert_dec2bcd(uint8_t decimal_value) {
	return (uint8_t)((((decimal_value) / 10U) << 4U) | ((decimal_value) % 10U));
}

uint8_t rtc_convert_bcd2dec(uint8_t bcd_value) {
 80038f4:	b480      	push	{r7}
 80038f6:	b083      	sub	sp, #12
 80038f8:	af00      	add	r7, sp, #0
 80038fa:	4603      	mov	r3, r0
 80038fc:	71fb      	strb	r3, [r7, #7]
    return (uint8_t)(((uint8_t)((bcd_value) & (uint8_t)0xF0U) >> (uint8_t)0x4U) * 10U + ((bcd_value) & (uint8_t)0x0FU));
 80038fe:	79fb      	ldrb	r3, [r7, #7]
 8003900:	091b      	lsrs	r3, r3, #4
 8003902:	b2db      	uxtb	r3, r3
 8003904:	461a      	mov	r2, r3
 8003906:	0092      	lsls	r2, r2, #2
 8003908:	4413      	add	r3, r2
 800390a:	005b      	lsls	r3, r3, #1
 800390c:	b2da      	uxtb	r2, r3
 800390e:	79fb      	ldrb	r3, [r7, #7]
 8003910:	f003 030f 	and.w	r3, r3, #15
 8003914:	b2db      	uxtb	r3, r3
 8003916:	4413      	add	r3, r2
 8003918:	b2db      	uxtb	r3, r3
}
 800391a:	4618      	mov	r0, r3
 800391c:	370c      	adds	r7, #12
 800391e:	46bd      	mov	sp, r7
 8003920:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003924:	4770      	bx	lr
	...

08003928 <rtc_date_get_current_day>:

uint8_t rtc_date_get_current_day(void) {
 8003928:	b580      	push	{r7, lr}
 800392a:	b082      	sub	sp, #8
 800392c:	af00      	add	r7, sp, #0
    uint32_t bcd_day = (RTC->DR & (RTC_DR_DT | RTC_DR_DU)) >> RTC_DR_DU_Pos;
 800392e:	4b07      	ldr	r3, [pc, #28]	@ (800394c <rtc_date_get_current_day+0x24>)
 8003930:	685b      	ldr	r3, [r3, #4]
 8003932:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8003936:	607b      	str	r3, [r7, #4]
    return rtc_convert_bcd2dec((uint8_t)bcd_day);
 8003938:	687b      	ldr	r3, [r7, #4]
 800393a:	b2db      	uxtb	r3, r3
 800393c:	4618      	mov	r0, r3
 800393e:	f7ff ffd9 	bl	80038f4 <rtc_convert_bcd2dec>
 8003942:	4603      	mov	r3, r0
}
 8003944:	4618      	mov	r0, r3
 8003946:	3708      	adds	r7, #8
 8003948:	46bd      	mov	sp, r7
 800394a:	bd80      	pop	{r7, pc}
 800394c:	40002800 	.word	0x40002800

08003950 <rtc_date_get_current_month>:

uint8_t rtc_date_get_current_month(void) {
 8003950:	b580      	push	{r7, lr}
 8003952:	b082      	sub	sp, #8
 8003954:	af00      	add	r7, sp, #0
    uint32_t bcd_month = (RTC->DR & (RTC_DR_MT | RTC_DR_MU)) >> RTC_DR_MU_Pos;
 8003956:	4b08      	ldr	r3, [pc, #32]	@ (8003978 <rtc_date_get_current_month+0x28>)
 8003958:	685b      	ldr	r3, [r3, #4]
 800395a:	0a1b      	lsrs	r3, r3, #8
 800395c:	f003 031f 	and.w	r3, r3, #31
 8003960:	607b      	str	r3, [r7, #4]
    return rtc_convert_bcd2dec((uint8_t)bcd_month);
 8003962:	687b      	ldr	r3, [r7, #4]
 8003964:	b2db      	uxtb	r3, r3
 8003966:	4618      	mov	r0, r3
 8003968:	f7ff ffc4 	bl	80038f4 <rtc_convert_bcd2dec>
 800396c:	4603      	mov	r3, r0
}
 800396e:	4618      	mov	r0, r3
 8003970:	3708      	adds	r7, #8
 8003972:	46bd      	mov	sp, r7
 8003974:	bd80      	pop	{r7, pc}
 8003976:	bf00      	nop
 8003978:	40002800 	.word	0x40002800

0800397c <rtc_date_get_current_year>:

uint8_t rtc_date_get_current_year(void) {
 800397c:	b580      	push	{r7, lr}
 800397e:	b082      	sub	sp, #8
 8003980:	af00      	add	r7, sp, #0
    uint32_t bcd_year = (RTC->DR & (RTC_DR_YT | RTC_DR_YU)) >> RTC_DR_YU_Pos;
 8003982:	4b07      	ldr	r3, [pc, #28]	@ (80039a0 <rtc_date_get_current_year+0x24>)
 8003984:	685b      	ldr	r3, [r3, #4]
 8003986:	0c1b      	lsrs	r3, r3, #16
 8003988:	b2db      	uxtb	r3, r3
 800398a:	607b      	str	r3, [r7, #4]
    return rtc_convert_bcd2dec((uint8_t)bcd_year);
 800398c:	687b      	ldr	r3, [r7, #4]
 800398e:	b2db      	uxtb	r3, r3
 8003990:	4618      	mov	r0, r3
 8003992:	f7ff ffaf 	bl	80038f4 <rtc_convert_bcd2dec>
 8003996:	4603      	mov	r3, r0
}
 8003998:	4618      	mov	r0, r3
 800399a:	3708      	adds	r7, #8
 800399c:	46bd      	mov	sp, r7
 800399e:	bd80      	pop	{r7, pc}
 80039a0:	40002800 	.word	0x40002800

080039a4 <rtc_time_get_current_second>:

uint8_t rtc_time_get_current_second(void) {
 80039a4:	b580      	push	{r7, lr}
 80039a6:	b082      	sub	sp, #8
 80039a8:	af00      	add	r7, sp, #0
    uint32_t bcd_second = (RTC->TR & (RTC_TR_ST | RTC_TR_SU)) >> RTC_TR_SU_Pos;
 80039aa:	4b07      	ldr	r3, [pc, #28]	@ (80039c8 <rtc_time_get_current_second+0x24>)
 80039ac:	681b      	ldr	r3, [r3, #0]
 80039ae:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 80039b2:	607b      	str	r3, [r7, #4]
    return rtc_convert_bcd2dec((uint8_t)bcd_second);
 80039b4:	687b      	ldr	r3, [r7, #4]
 80039b6:	b2db      	uxtb	r3, r3
 80039b8:	4618      	mov	r0, r3
 80039ba:	f7ff ff9b 	bl	80038f4 <rtc_convert_bcd2dec>
 80039be:	4603      	mov	r3, r0
}
 80039c0:	4618      	mov	r0, r3
 80039c2:	3708      	adds	r7, #8
 80039c4:	46bd      	mov	sp, r7
 80039c6:	bd80      	pop	{r7, pc}
 80039c8:	40002800 	.word	0x40002800

080039cc <rtc_time_get_current_minute>:

uint8_t rtc_time_get_current_minute(void) {
 80039cc:	b580      	push	{r7, lr}
 80039ce:	b082      	sub	sp, #8
 80039d0:	af00      	add	r7, sp, #0
	uint32_t bcd_minute = (RTC->TR & (RTC_TR_MNT | RTC_TR_MNU)) >> RTC_TR_MNU_Pos;
 80039d2:	4b08      	ldr	r3, [pc, #32]	@ (80039f4 <rtc_time_get_current_minute+0x28>)
 80039d4:	681b      	ldr	r3, [r3, #0]
 80039d6:	0a1b      	lsrs	r3, r3, #8
 80039d8:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 80039dc:	607b      	str	r3, [r7, #4]
    return rtc_convert_bcd2dec((uint8_t)bcd_minute);
 80039de:	687b      	ldr	r3, [r7, #4]
 80039e0:	b2db      	uxtb	r3, r3
 80039e2:	4618      	mov	r0, r3
 80039e4:	f7ff ff86 	bl	80038f4 <rtc_convert_bcd2dec>
 80039e8:	4603      	mov	r3, r0
}
 80039ea:	4618      	mov	r0, r3
 80039ec:	3708      	adds	r7, #8
 80039ee:	46bd      	mov	sp, r7
 80039f0:	bd80      	pop	{r7, pc}
 80039f2:	bf00      	nop
 80039f4:	40002800 	.word	0x40002800

080039f8 <rtc_time_get_current_hour>:

uint8_t rtc_time_get_current_hour(void) {
 80039f8:	b580      	push	{r7, lr}
 80039fa:	b082      	sub	sp, #8
 80039fc:	af00      	add	r7, sp, #0
    uint32_t bcd_hour = (READ_BIT(RTC->TR, (RTC_TR_HT | RTC_TR_HU))) >> RTC_TR_HU_Pos;
 80039fe:	4b18      	ldr	r3, [pc, #96]	@ (8003a60 <rtc_time_get_current_hour+0x68>)
 8003a00:	681b      	ldr	r3, [r3, #0]
 8003a02:	0c1b      	lsrs	r3, r3, #16
 8003a04:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8003a08:	607b      	str	r3, [r7, #4]
    uint32_t hour = rtc_convert_bcd2dec((uint8_t)bcd_hour);
 8003a0a:	687b      	ldr	r3, [r7, #4]
 8003a0c:	b2db      	uxtb	r3, r3
 8003a0e:	4618      	mov	r0, r3
 8003a10:	f7ff ff70 	bl	80038f4 <rtc_convert_bcd2dec>
 8003a14:	4603      	mov	r3, r0
 8003a16:	603b      	str	r3, [r7, #0]

    if (RTC->CR & CR_FMT) {
 8003a18:	4b11      	ldr	r3, [pc, #68]	@ (8003a60 <rtc_time_get_current_hour+0x68>)
 8003a1a:	689b      	ldr	r3, [r3, #8]
 8003a1c:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8003a20:	2b00      	cmp	r3, #0
 8003a22:	d017      	beq.n	8003a54 <rtc_time_get_current_hour+0x5c>
        // 12-hour mode: check PM bit
        if (RTC->TR & TIME_FORMAT_PM) {
 8003a24:	4b0e      	ldr	r3, [pc, #56]	@ (8003a60 <rtc_time_get_current_hour+0x68>)
 8003a26:	681b      	ldr	r3, [r3, #0]
 8003a28:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8003a2c:	2b00      	cmp	r3, #0
 8003a2e:	d009      	beq.n	8003a44 <rtc_time_get_current_hour+0x4c>
            if (hour == 12) {
 8003a30:	683b      	ldr	r3, [r7, #0]
 8003a32:	2b0c      	cmp	r3, #12
 8003a34:	d101      	bne.n	8003a3a <rtc_time_get_current_hour+0x42>
                return 12;  // 12 PM should remain 12
 8003a36:	230c      	movs	r3, #12
 8003a38:	e00e      	b.n	8003a58 <rtc_time_get_current_hour+0x60>
            }
            return (hour + 12);
 8003a3a:	683b      	ldr	r3, [r7, #0]
 8003a3c:	b2db      	uxtb	r3, r3
 8003a3e:	330c      	adds	r3, #12
 8003a40:	b2db      	uxtb	r3, r3
 8003a42:	e009      	b.n	8003a58 <rtc_time_get_current_hour+0x60>
        } else {
            if (hour == 12) {
 8003a44:	683b      	ldr	r3, [r7, #0]
 8003a46:	2b0c      	cmp	r3, #12
 8003a48:	d101      	bne.n	8003a4e <rtc_time_get_current_hour+0x56>
                return 0;  // 12 AM should be 00 (midnight)
 8003a4a:	2300      	movs	r3, #0
 8003a4c:	e004      	b.n	8003a58 <rtc_time_get_current_hour+0x60>
            }
            return hour;
 8003a4e:	683b      	ldr	r3, [r7, #0]
 8003a50:	b2db      	uxtb	r3, r3
 8003a52:	e001      	b.n	8003a58 <rtc_time_get_current_hour+0x60>
        }
    } else {
        // 24-hour mode: return as is
        return hour;
 8003a54:	683b      	ldr	r3, [r7, #0]
 8003a56:	b2db      	uxtb	r3, r3
    }
}
 8003a58:	4618      	mov	r0, r3
 8003a5a:	3708      	adds	r7, #8
 8003a5c:	46bd      	mov	sp, r7
 8003a5e:	bd80      	pop	{r7, pc}
 8003a60:	40002800 	.word	0x40002800

08003a64 <_getpid>:
char **environ = __env;

/* Functions */
void initialise_monitor_handles() {}

int _getpid(void) { return 1; }
 8003a64:	b480      	push	{r7}
 8003a66:	af00      	add	r7, sp, #0
 8003a68:	2301      	movs	r3, #1
 8003a6a:	4618      	mov	r0, r3
 8003a6c:	46bd      	mov	sp, r7
 8003a6e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003a72:	4770      	bx	lr

08003a74 <_kill>:

int _kill(int pid, int sig) {
 8003a74:	b580      	push	{r7, lr}
 8003a76:	b082      	sub	sp, #8
 8003a78:	af00      	add	r7, sp, #0
 8003a7a:	6078      	str	r0, [r7, #4]
 8003a7c:	6039      	str	r1, [r7, #0]
    (void)pid;
    (void)sig;
    errno = EINVAL;
 8003a7e:	f000 f9af 	bl	8003de0 <__errno>
 8003a82:	4603      	mov	r3, r0
 8003a84:	2216      	movs	r2, #22
 8003a86:	601a      	str	r2, [r3, #0]
    return -1;
 8003a88:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
}
 8003a8c:	4618      	mov	r0, r3
 8003a8e:	3708      	adds	r7, #8
 8003a90:	46bd      	mov	sp, r7
 8003a92:	bd80      	pop	{r7, pc}

08003a94 <_exit>:

void _exit(int status) {
 8003a94:	b580      	push	{r7, lr}
 8003a96:	b082      	sub	sp, #8
 8003a98:	af00      	add	r7, sp, #0
 8003a9a:	6078      	str	r0, [r7, #4]
    _kill(status, -1);
 8003a9c:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
 8003aa0:	6878      	ldr	r0, [r7, #4]
 8003aa2:	f7ff ffe7 	bl	8003a74 <_kill>
    while (1) {
 8003aa6:	bf00      	nop
 8003aa8:	e7fd      	b.n	8003aa6 <_exit+0x12>

08003aaa <_read>:
    } // Make sure we hang here
}

__attribute__((weak)) int _read(int file, char *ptr, int len) {
 8003aaa:	b580      	push	{r7, lr}
 8003aac:	b086      	sub	sp, #24
 8003aae:	af00      	add	r7, sp, #0
 8003ab0:	60f8      	str	r0, [r7, #12]
 8003ab2:	60b9      	str	r1, [r7, #8]
 8003ab4:	607a      	str	r2, [r7, #4]
    (void)file;
    int DataIdx;

    for (DataIdx = 0; DataIdx < len; DataIdx++) {
 8003ab6:	2300      	movs	r3, #0
 8003ab8:	617b      	str	r3, [r7, #20]
 8003aba:	e00a      	b.n	8003ad2 <_read+0x28>
        *ptr++ = __io_getchar();
 8003abc:	f3af 8000 	nop.w
 8003ac0:	4601      	mov	r1, r0
 8003ac2:	68bb      	ldr	r3, [r7, #8]
 8003ac4:	1c5a      	adds	r2, r3, #1
 8003ac6:	60ba      	str	r2, [r7, #8]
 8003ac8:	b2ca      	uxtb	r2, r1
 8003aca:	701a      	strb	r2, [r3, #0]
    for (DataIdx = 0; DataIdx < len; DataIdx++) {
 8003acc:	697b      	ldr	r3, [r7, #20]
 8003ace:	3301      	adds	r3, #1
 8003ad0:	617b      	str	r3, [r7, #20]
 8003ad2:	697a      	ldr	r2, [r7, #20]
 8003ad4:	687b      	ldr	r3, [r7, #4]
 8003ad6:	429a      	cmp	r2, r3
 8003ad8:	dbf0      	blt.n	8003abc <_read+0x12>
    }

    return len;
 8003ada:	687b      	ldr	r3, [r7, #4]
}
 8003adc:	4618      	mov	r0, r3
 8003ade:	3718      	adds	r7, #24
 8003ae0:	46bd      	mov	sp, r7
 8003ae2:	bd80      	pop	{r7, pc}

08003ae4 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len) {
 8003ae4:	b580      	push	{r7, lr}
 8003ae6:	b086      	sub	sp, #24
 8003ae8:	af00      	add	r7, sp, #0
 8003aea:	60f8      	str	r0, [r7, #12]
 8003aec:	60b9      	str	r1, [r7, #8]
 8003aee:	607a      	str	r2, [r7, #4]
    (void)file;
    int DataIdx;

    for (DataIdx = 0; DataIdx < len; DataIdx++) {
 8003af0:	2300      	movs	r3, #0
 8003af2:	617b      	str	r3, [r7, #20]
 8003af4:	e009      	b.n	8003b0a <_write+0x26>
        __io_putchar(*ptr++);
 8003af6:	68bb      	ldr	r3, [r7, #8]
 8003af8:	1c5a      	adds	r2, r3, #1
 8003afa:	60ba      	str	r2, [r7, #8]
 8003afc:	781b      	ldrb	r3, [r3, #0]
 8003afe:	4618      	mov	r0, r3
 8003b00:	f000 f904 	bl	8003d0c <__io_putchar>
    for (DataIdx = 0; DataIdx < len; DataIdx++) {
 8003b04:	697b      	ldr	r3, [r7, #20]
 8003b06:	3301      	adds	r3, #1
 8003b08:	617b      	str	r3, [r7, #20]
 8003b0a:	697a      	ldr	r2, [r7, #20]
 8003b0c:	687b      	ldr	r3, [r7, #4]
 8003b0e:	429a      	cmp	r2, r3
 8003b10:	dbf1      	blt.n	8003af6 <_write+0x12>
    }
    return len;
 8003b12:	687b      	ldr	r3, [r7, #4]
}
 8003b14:	4618      	mov	r0, r3
 8003b16:	3718      	adds	r7, #24
 8003b18:	46bd      	mov	sp, r7
 8003b1a:	bd80      	pop	{r7, pc}

08003b1c <_close>:

int _close(int file) {
 8003b1c:	b480      	push	{r7}
 8003b1e:	b083      	sub	sp, #12
 8003b20:	af00      	add	r7, sp, #0
 8003b22:	6078      	str	r0, [r7, #4]
    (void)file;
    return -1;
 8003b24:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
}
 8003b28:	4618      	mov	r0, r3
 8003b2a:	370c      	adds	r7, #12
 8003b2c:	46bd      	mov	sp, r7
 8003b2e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003b32:	4770      	bx	lr

08003b34 <_fstat>:

int _fstat(int file, struct stat *st) {
 8003b34:	b480      	push	{r7}
 8003b36:	b083      	sub	sp, #12
 8003b38:	af00      	add	r7, sp, #0
 8003b3a:	6078      	str	r0, [r7, #4]
 8003b3c:	6039      	str	r1, [r7, #0]
    (void)file;
    st->st_mode = S_IFCHR;
 8003b3e:	683b      	ldr	r3, [r7, #0]
 8003b40:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8003b44:	605a      	str	r2, [r3, #4]
    return 0;
 8003b46:	2300      	movs	r3, #0
}
 8003b48:	4618      	mov	r0, r3
 8003b4a:	370c      	adds	r7, #12
 8003b4c:	46bd      	mov	sp, r7
 8003b4e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003b52:	4770      	bx	lr

08003b54 <_isatty>:

int _isatty(int file) {
 8003b54:	b480      	push	{r7}
 8003b56:	b083      	sub	sp, #12
 8003b58:	af00      	add	r7, sp, #0
 8003b5a:	6078      	str	r0, [r7, #4]
    (void)file;
    return 1;
 8003b5c:	2301      	movs	r3, #1
}
 8003b5e:	4618      	mov	r0, r3
 8003b60:	370c      	adds	r7, #12
 8003b62:	46bd      	mov	sp, r7
 8003b64:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003b68:	4770      	bx	lr

08003b6a <_lseek>:

int _lseek(int file, int ptr, int dir) {
 8003b6a:	b480      	push	{r7}
 8003b6c:	b085      	sub	sp, #20
 8003b6e:	af00      	add	r7, sp, #0
 8003b70:	60f8      	str	r0, [r7, #12]
 8003b72:	60b9      	str	r1, [r7, #8]
 8003b74:	607a      	str	r2, [r7, #4]
    (void)file;
    (void)ptr;
    (void)dir;
    return 0;
 8003b76:	2300      	movs	r3, #0
}
 8003b78:	4618      	mov	r0, r3
 8003b7a:	3714      	adds	r7, #20
 8003b7c:	46bd      	mov	sp, r7
 8003b7e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003b82:	4770      	bx	lr

08003b84 <_sbrk>:
 * reserved size, please increase the '_Min_Stack_Size'.
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr) {
 8003b84:	b580      	push	{r7, lr}
 8003b86:	b086      	sub	sp, #24
 8003b88:	af00      	add	r7, sp, #0
 8003b8a:	6078      	str	r0, [r7, #4]
    extern uint8_t _end;             // Symbol defined in the linker script
    extern uint8_t _estack;          // Symbol defined in the linker script
    extern uint32_t _Min_Stack_Size; // Symbol defined in the linker script
    const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8003b8c:	4a14      	ldr	r2, [pc, #80]	@ (8003be0 <_sbrk+0x5c>)
 8003b8e:	4b15      	ldr	r3, [pc, #84]	@ (8003be4 <_sbrk+0x60>)
 8003b90:	1ad3      	subs	r3, r2, r3
 8003b92:	617b      	str	r3, [r7, #20]
    const uint8_t *max_heap = (uint8_t *)stack_limit;
 8003b94:	697b      	ldr	r3, [r7, #20]
 8003b96:	613b      	str	r3, [r7, #16]
    uint8_t *prev_heap_end;

    // Initialize heap end at first call
    if (NULL == __sbrk_heap_end) {
 8003b98:	4b13      	ldr	r3, [pc, #76]	@ (8003be8 <_sbrk+0x64>)
 8003b9a:	681b      	ldr	r3, [r3, #0]
 8003b9c:	2b00      	cmp	r3, #0
 8003b9e:	d102      	bne.n	8003ba6 <_sbrk+0x22>
        __sbrk_heap_end = &_end;
 8003ba0:	4b11      	ldr	r3, [pc, #68]	@ (8003be8 <_sbrk+0x64>)
 8003ba2:	4a12      	ldr	r2, [pc, #72]	@ (8003bec <_sbrk+0x68>)
 8003ba4:	601a      	str	r2, [r3, #0]
    }

    // Protect heap from growing into the reserved MSP stack
    if (__sbrk_heap_end + incr > max_heap) {
 8003ba6:	4b10      	ldr	r3, [pc, #64]	@ (8003be8 <_sbrk+0x64>)
 8003ba8:	681a      	ldr	r2, [r3, #0]
 8003baa:	687b      	ldr	r3, [r7, #4]
 8003bac:	4413      	add	r3, r2
 8003bae:	693a      	ldr	r2, [r7, #16]
 8003bb0:	429a      	cmp	r2, r3
 8003bb2:	d207      	bcs.n	8003bc4 <_sbrk+0x40>
        errno = ENOMEM;
 8003bb4:	f000 f914 	bl	8003de0 <__errno>
 8003bb8:	4603      	mov	r3, r0
 8003bba:	220c      	movs	r2, #12
 8003bbc:	601a      	str	r2, [r3, #0]
        return (void *)-1;
 8003bbe:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 8003bc2:	e009      	b.n	8003bd8 <_sbrk+0x54>
    }

    prev_heap_end = __sbrk_heap_end;
 8003bc4:	4b08      	ldr	r3, [pc, #32]	@ (8003be8 <_sbrk+0x64>)
 8003bc6:	681b      	ldr	r3, [r3, #0]
 8003bc8:	60fb      	str	r3, [r7, #12]
    __sbrk_heap_end += incr;
 8003bca:	4b07      	ldr	r3, [pc, #28]	@ (8003be8 <_sbrk+0x64>)
 8003bcc:	681a      	ldr	r2, [r3, #0]
 8003bce:	687b      	ldr	r3, [r7, #4]
 8003bd0:	4413      	add	r3, r2
 8003bd2:	4a05      	ldr	r2, [pc, #20]	@ (8003be8 <_sbrk+0x64>)
 8003bd4:	6013      	str	r3, [r2, #0]

    return (void *)prev_heap_end;
 8003bd6:	68fb      	ldr	r3, [r7, #12]
}
 8003bd8:	4618      	mov	r0, r3
 8003bda:	3718      	adds	r7, #24
 8003bdc:	46bd      	mov	sp, r7
 8003bde:	bd80      	pop	{r7, pc}
 8003be0:	20020000 	.word	0x20020000
 8003be4:	00000400 	.word	0x00000400
 8003be8:	20000350 	.word	0x20000350
 8003bec:	20000358 	.word	0x20000358

08003bf0 <uart2_init>:
#define SR_TXE (1U << 7)

static uint16_t compute_uart_bd(uint32_t periph_clk, uint32_t baudrate);
static void uart2_set_baudrate(uint32_t periph_clk, uint32_t baudrate);

void uart2_init(void) {
 8003bf0:	b580      	push	{r7, lr}
 8003bf2:	af00      	add	r7, sp, #0
    // Enable the clock access to GPIOA
    RCC->AHB1ENR |= GPIOAEN;
 8003bf4:	4b21      	ldr	r3, [pc, #132]	@ (8003c7c <uart2_init+0x8c>)
 8003bf6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003bf8:	4a20      	ldr	r2, [pc, #128]	@ (8003c7c <uart2_init+0x8c>)
 8003bfa:	f043 0301 	orr.w	r3, r3, #1
 8003bfe:	6313      	str	r3, [r2, #48]	@ 0x30

    // Configure GPIOA Pin 2 to operate in alternate function mode (MODER2[1:0] = 10)
    GPIOA->MODER &= ~(1U << 4);  // Set bit 4 to 0
 8003c00:	4b1f      	ldr	r3, [pc, #124]	@ (8003c80 <uart2_init+0x90>)
 8003c02:	681b      	ldr	r3, [r3, #0]
 8003c04:	4a1e      	ldr	r2, [pc, #120]	@ (8003c80 <uart2_init+0x90>)
 8003c06:	f023 0310 	bic.w	r3, r3, #16
 8003c0a:	6013      	str	r3, [r2, #0]
    GPIOA->MODER |= (1U << 5);   // Set bit 5 to 1
 8003c0c:	4b1c      	ldr	r3, [pc, #112]	@ (8003c80 <uart2_init+0x90>)
 8003c0e:	681b      	ldr	r3, [r3, #0]
 8003c10:	4a1b      	ldr	r2, [pc, #108]	@ (8003c80 <uart2_init+0x90>)
 8003c12:	f043 0320 	orr.w	r3, r3, #32
 8003c16:	6013      	str	r3, [r2, #0]

    // Set alternate function type to AF7 (UART2_TX)
    GPIOA->AFR[0] |= (1U << 8);    // Set bit 8 to 1
 8003c18:	4b19      	ldr	r3, [pc, #100]	@ (8003c80 <uart2_init+0x90>)
 8003c1a:	6a1b      	ldr	r3, [r3, #32]
 8003c1c:	4a18      	ldr	r2, [pc, #96]	@ (8003c80 <uart2_init+0x90>)
 8003c1e:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8003c22:	6213      	str	r3, [r2, #32]
    GPIOA->AFR[0] |= (1U << 9);    // Set bit 9 to 1
 8003c24:	4b16      	ldr	r3, [pc, #88]	@ (8003c80 <uart2_init+0x90>)
 8003c26:	6a1b      	ldr	r3, [r3, #32]
 8003c28:	4a15      	ldr	r2, [pc, #84]	@ (8003c80 <uart2_init+0x90>)
 8003c2a:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8003c2e:	6213      	str	r3, [r2, #32]
    GPIOA->AFR[0] |= (1U << 10);   // Set bit 10 to 1
 8003c30:	4b13      	ldr	r3, [pc, #76]	@ (8003c80 <uart2_init+0x90>)
 8003c32:	6a1b      	ldr	r3, [r3, #32]
 8003c34:	4a12      	ldr	r2, [pc, #72]	@ (8003c80 <uart2_init+0x90>)
 8003c36:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8003c3a:	6213      	str	r3, [r2, #32]
    GPIOA->AFR[0] &= ~(1U << 11);  // Set bit 11 to 0
 8003c3c:	4b10      	ldr	r3, [pc, #64]	@ (8003c80 <uart2_init+0x90>)
 8003c3e:	6a1b      	ldr	r3, [r3, #32]
 8003c40:	4a0f      	ldr	r2, [pc, #60]	@ (8003c80 <uart2_init+0x90>)
 8003c42:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8003c46:	6213      	str	r3, [r2, #32]

    // Enable the clock access to UART2
    RCC->APB1ENR |= UART2EN;
 8003c48:	4b0c      	ldr	r3, [pc, #48]	@ (8003c7c <uart2_init+0x8c>)
 8003c4a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003c4c:	4a0b      	ldr	r2, [pc, #44]	@ (8003c7c <uart2_init+0x8c>)
 8003c4e:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8003c52:	6413      	str	r3, [r2, #64]	@ 0x40

    // Set UART2 baud rate
    uart2_set_baudrate(APB1_CLK, DBG_UART_BAUDRATE);
 8003c54:	f44f 31e1 	mov.w	r1, #115200	@ 0x1c200
 8003c58:	480a      	ldr	r0, [pc, #40]	@ (8003c84 <uart2_init+0x94>)
 8003c5a:	f000 f82b 	bl	8003cb4 <uart2_set_baudrate>

    // Configure transfer direction as a transmitter
    USART2->CR1 |= CR1_TE;
 8003c5e:	4b0a      	ldr	r3, [pc, #40]	@ (8003c88 <uart2_init+0x98>)
 8003c60:	68db      	ldr	r3, [r3, #12]
 8003c62:	4a09      	ldr	r2, [pc, #36]	@ (8003c88 <uart2_init+0x98>)
 8003c64:	f043 0308 	orr.w	r3, r3, #8
 8003c68:	60d3      	str	r3, [r2, #12]

    // Enable UART2 module
    USART2->CR1 |= CR1_UE;
 8003c6a:	4b07      	ldr	r3, [pc, #28]	@ (8003c88 <uart2_init+0x98>)
 8003c6c:	68db      	ldr	r3, [r3, #12]
 8003c6e:	4a06      	ldr	r2, [pc, #24]	@ (8003c88 <uart2_init+0x98>)
 8003c70:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 8003c74:	60d3      	str	r3, [r2, #12]
}
 8003c76:	bf00      	nop
 8003c78:	bd80      	pop	{r7, pc}
 8003c7a:	bf00      	nop
 8003c7c:	40023800 	.word	0x40023800
 8003c80:	40020000 	.word	0x40020000
 8003c84:	00f42400 	.word	0x00f42400
 8003c88:	40004400 	.word	0x40004400

08003c8c <compute_uart_bd>:

static uint16_t compute_uart_bd(uint32_t periph_clk, uint32_t baudrate) {
 8003c8c:	b480      	push	{r7}
 8003c8e:	b083      	sub	sp, #12
 8003c90:	af00      	add	r7, sp, #0
 8003c92:	6078      	str	r0, [r7, #4]
 8003c94:	6039      	str	r1, [r7, #0]
    return ((periph_clk + (baudrate / 2U)) / baudrate);
 8003c96:	683b      	ldr	r3, [r7, #0]
 8003c98:	085a      	lsrs	r2, r3, #1
 8003c9a:	687b      	ldr	r3, [r7, #4]
 8003c9c:	441a      	add	r2, r3
 8003c9e:	683b      	ldr	r3, [r7, #0]
 8003ca0:	fbb2 f3f3 	udiv	r3, r2, r3
 8003ca4:	b29b      	uxth	r3, r3
}
 8003ca6:	4618      	mov	r0, r3
 8003ca8:	370c      	adds	r7, #12
 8003caa:	46bd      	mov	sp, r7
 8003cac:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003cb0:	4770      	bx	lr
	...

08003cb4 <uart2_set_baudrate>:

static void uart2_set_baudrate(uint32_t periph_clk, uint32_t baudrate) {
 8003cb4:	b580      	push	{r7, lr}
 8003cb6:	b082      	sub	sp, #8
 8003cb8:	af00      	add	r7, sp, #0
 8003cba:	6078      	str	r0, [r7, #4]
 8003cbc:	6039      	str	r1, [r7, #0]
    // Set the baud rate for UART2 by writing the computed divisor to the BRR
    USART2->BRR = compute_uart_bd(periph_clk, baudrate);
 8003cbe:	6839      	ldr	r1, [r7, #0]
 8003cc0:	6878      	ldr	r0, [r7, #4]
 8003cc2:	f7ff ffe3 	bl	8003c8c <compute_uart_bd>
 8003cc6:	4603      	mov	r3, r0
 8003cc8:	461a      	mov	r2, r3
 8003cca:	4b03      	ldr	r3, [pc, #12]	@ (8003cd8 <uart2_set_baudrate+0x24>)
 8003ccc:	609a      	str	r2, [r3, #8]
}
 8003cce:	bf00      	nop
 8003cd0:	3708      	adds	r7, #8
 8003cd2:	46bd      	mov	sp, r7
 8003cd4:	bd80      	pop	{r7, pc}
 8003cd6:	bf00      	nop
 8003cd8:	40004400 	.word	0x40004400

08003cdc <uart_write_character>:

void uart_write_character(int ch) {
 8003cdc:	b480      	push	{r7}
 8003cde:	b083      	sub	sp, #12
 8003ce0:	af00      	add	r7, sp, #0
 8003ce2:	6078      	str	r0, [r7, #4]
    // Ensure that the transmit data register is empty before writing a new data
    while (!(USART2->SR & (SR_TXE))) {
 8003ce4:	bf00      	nop
 8003ce6:	4b08      	ldr	r3, [pc, #32]	@ (8003d08 <uart_write_character+0x2c>)
 8003ce8:	681b      	ldr	r3, [r3, #0]
 8003cea:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8003cee:	2b00      	cmp	r3, #0
 8003cf0:	d0f9      	beq.n	8003ce6 <uart_write_character+0xa>
    }

    // Write the character to the data register for transmission
    // This is correct for 8-bit data frame transmission.
    USART2->DR = (ch & 0xFF);
 8003cf2:	687b      	ldr	r3, [r7, #4]
 8003cf4:	4a04      	ldr	r2, [pc, #16]	@ (8003d08 <uart_write_character+0x2c>)
 8003cf6:	b2db      	uxtb	r3, r3
 8003cf8:	6053      	str	r3, [r2, #4]
}
 8003cfa:	bf00      	nop
 8003cfc:	370c      	adds	r7, #12
 8003cfe:	46bd      	mov	sp, r7
 8003d00:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003d04:	4770      	bx	lr
 8003d06:	bf00      	nop
 8003d08:	40004400 	.word	0x40004400

08003d0c <__io_putchar>:
}

// This function is called internally by printf to output each character.
// It retargets the C library printf function to the UART.
// Namely, it redirects character output to the UART by calling the custom uart_write_character() function.
int __io_putchar(int ch) {
 8003d0c:	b580      	push	{r7, lr}
 8003d0e:	b082      	sub	sp, #8
 8003d10:	af00      	add	r7, sp, #0
 8003d12:	6078      	str	r0, [r7, #4]
	uart_write_character(ch);
 8003d14:	6878      	ldr	r0, [r7, #4]
 8003d16:	f7ff ffe1 	bl	8003cdc <uart_write_character>
    return ch;
 8003d1a:	687b      	ldr	r3, [r7, #4]
}
 8003d1c:	4618      	mov	r0, r3
 8003d1e:	3708      	adds	r7, #8
 8003d20:	46bd      	mov	sp, r7
 8003d22:	bd80      	pop	{r7, pc}

08003d24 <Reset_Handler>:
 8003d24:	480d      	ldr	r0, [pc, #52]	@ (8003d5c <LoopForever+0x2>)
 8003d26:	4685      	mov	sp, r0
 8003d28:	f3af 8000 	nop.w
 8003d2c:	480c      	ldr	r0, [pc, #48]	@ (8003d60 <LoopForever+0x6>)
 8003d2e:	490d      	ldr	r1, [pc, #52]	@ (8003d64 <LoopForever+0xa>)
 8003d30:	4a0d      	ldr	r2, [pc, #52]	@ (8003d68 <LoopForever+0xe>)
 8003d32:	2300      	movs	r3, #0
 8003d34:	e002      	b.n	8003d3c <LoopCopyDataInit>

08003d36 <CopyDataInit>:
 8003d36:	58d4      	ldr	r4, [r2, r3]
 8003d38:	50c4      	str	r4, [r0, r3]
 8003d3a:	3304      	adds	r3, #4

08003d3c <LoopCopyDataInit>:
 8003d3c:	18c4      	adds	r4, r0, r3
 8003d3e:	428c      	cmp	r4, r1
 8003d40:	d3f9      	bcc.n	8003d36 <CopyDataInit>
 8003d42:	4a0a      	ldr	r2, [pc, #40]	@ (8003d6c <LoopForever+0x12>)
 8003d44:	4c0a      	ldr	r4, [pc, #40]	@ (8003d70 <LoopForever+0x16>)
 8003d46:	2300      	movs	r3, #0
 8003d48:	e001      	b.n	8003d4e <LoopFillZerobss>

08003d4a <FillZerobss>:
 8003d4a:	6013      	str	r3, [r2, #0]
 8003d4c:	3204      	adds	r2, #4

08003d4e <LoopFillZerobss>:
 8003d4e:	42a2      	cmp	r2, r4
 8003d50:	d3fb      	bcc.n	8003d4a <FillZerobss>
 8003d52:	f7fd fd07 	bl	8001764 <__libc_init_array>
 8003d56:	f7ff fc39 	bl	80035cc <main>

08003d5a <LoopForever>:
 8003d5a:	e7fe      	b.n	8003d5a <LoopForever>
 8003d5c:	20020000 	.word	0x20020000
 8003d60:	20000000 	.word	0x20000000
 8003d64:	200001c8 	.word	0x200001c8
 8003d68:	08004474 	.word	0x08004474
 8003d6c:	200001c8 	.word	0x200001c8
 8003d70:	20000354 	.word	0x20000354

08003d74 <ADC_IRQHandler>:
 8003d74:	e7fe      	b.n	8003d74 <ADC_IRQHandler>
	...

08003d78 <iprintf>:
 8003d78:	b40f      	push	{r0, r1, r2, r3}
 8003d7a:	b507      	push	{r0, r1, r2, lr}
 8003d7c:	4906      	ldr	r1, [pc, #24]	@ (8003d98 <iprintf+0x20>)
 8003d7e:	ab04      	add	r3, sp, #16
 8003d80:	6808      	ldr	r0, [r1, #0]
 8003d82:	f853 2b04 	ldr.w	r2, [r3], #4
 8003d86:	6881      	ldr	r1, [r0, #8]
 8003d88:	9301      	str	r3, [sp, #4]
 8003d8a:	f7ff f961 	bl	8003050 <_vfiprintf_r>
 8003d8e:	b003      	add	sp, #12
 8003d90:	f85d eb04 	ldr.w	lr, [sp], #4
 8003d94:	b004      	add	sp, #16
 8003d96:	4770      	bx	lr
 8003d98:	2000000c 	.word	0x2000000c

08003d9c <siprintf>:
 8003d9c:	b40e      	push	{r1, r2, r3}
 8003d9e:	b510      	push	{r4, lr}
 8003da0:	b09d      	sub	sp, #116	@ 0x74
 8003da2:	ab1f      	add	r3, sp, #124	@ 0x7c
 8003da4:	9002      	str	r0, [sp, #8]
 8003da6:	9006      	str	r0, [sp, #24]
 8003da8:	f06f 4100 	mvn.w	r1, #2147483648	@ 0x80000000
 8003dac:	480a      	ldr	r0, [pc, #40]	@ (8003dd8 <siprintf+0x3c>)
 8003dae:	9107      	str	r1, [sp, #28]
 8003db0:	9104      	str	r1, [sp, #16]
 8003db2:	490a      	ldr	r1, [pc, #40]	@ (8003ddc <siprintf+0x40>)
 8003db4:	f853 2b04 	ldr.w	r2, [r3], #4
 8003db8:	9105      	str	r1, [sp, #20]
 8003dba:	2400      	movs	r4, #0
 8003dbc:	a902      	add	r1, sp, #8
 8003dbe:	6800      	ldr	r0, [r0, #0]
 8003dc0:	9301      	str	r3, [sp, #4]
 8003dc2:	941b      	str	r4, [sp, #108]	@ 0x6c
 8003dc4:	f000 f872 	bl	8003eac <_svfiprintf_r>
 8003dc8:	9b02      	ldr	r3, [sp, #8]
 8003dca:	701c      	strb	r4, [r3, #0]
 8003dcc:	b01d      	add	sp, #116	@ 0x74
 8003dce:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003dd2:	b003      	add	sp, #12
 8003dd4:	4770      	bx	lr
 8003dd6:	bf00      	nop
 8003dd8:	2000000c 	.word	0x2000000c
 8003ddc:	ffff0208 	.word	0xffff0208

08003de0 <__errno>:
 8003de0:	4b01      	ldr	r3, [pc, #4]	@ (8003de8 <__errno+0x8>)
 8003de2:	6818      	ldr	r0, [r3, #0]
 8003de4:	4770      	bx	lr
 8003de6:	bf00      	nop
 8003de8:	2000000c 	.word	0x2000000c

08003dec <__ssputs_r>:
 8003dec:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003df0:	688e      	ldr	r6, [r1, #8]
 8003df2:	461f      	mov	r7, r3
 8003df4:	42be      	cmp	r6, r7
 8003df6:	4682      	mov	sl, r0
 8003df8:	460c      	mov	r4, r1
 8003dfa:	4690      	mov	r8, r2
 8003dfc:	4633      	mov	r3, r6
 8003dfe:	d853      	bhi.n	8003ea8 <__ssputs_r+0xbc>
 8003e00:	f9b1 000c 	ldrsh.w	r0, [r1, #12]
 8003e04:	f410 6f90 	tst.w	r0, #1152	@ 0x480
 8003e08:	d02b      	beq.n	8003e62 <__ssputs_r+0x76>
 8003e0a:	6965      	ldr	r5, [r4, #20]
 8003e0c:	6823      	ldr	r3, [r4, #0]
 8003e0e:	6909      	ldr	r1, [r1, #16]
 8003e10:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8003e14:	eba3 0901 	sub.w	r9, r3, r1
 8003e18:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8003e1c:	1c7b      	adds	r3, r7, #1
 8003e1e:	106d      	asrs	r5, r5, #1
 8003e20:	444b      	add	r3, r9
 8003e22:	42ab      	cmp	r3, r5
 8003e24:	462a      	mov	r2, r5
 8003e26:	bf84      	itt	hi
 8003e28:	461d      	movhi	r5, r3
 8003e2a:	462a      	movhi	r2, r5
 8003e2c:	0543      	lsls	r3, r0, #21
 8003e2e:	d527      	bpl.n	8003e80 <__ssputs_r+0x94>
 8003e30:	4611      	mov	r1, r2
 8003e32:	4650      	mov	r0, sl
 8003e34:	f7fe fb9c 	bl	8002570 <_malloc_r>
 8003e38:	4606      	mov	r6, r0
 8003e3a:	b358      	cbz	r0, 8003e94 <__ssputs_r+0xa8>
 8003e3c:	6921      	ldr	r1, [r4, #16]
 8003e3e:	464a      	mov	r2, r9
 8003e40:	f7ff f864 	bl	8002f0c <memcpy>
 8003e44:	89a3      	ldrh	r3, [r4, #12]
 8003e46:	f423 6390 	bic.w	r3, r3, #1152	@ 0x480
 8003e4a:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8003e4e:	81a3      	strh	r3, [r4, #12]
 8003e50:	6126      	str	r6, [r4, #16]
 8003e52:	6165      	str	r5, [r4, #20]
 8003e54:	444e      	add	r6, r9
 8003e56:	eba5 0509 	sub.w	r5, r5, r9
 8003e5a:	6026      	str	r6, [r4, #0]
 8003e5c:	60a5      	str	r5, [r4, #8]
 8003e5e:	463e      	mov	r6, r7
 8003e60:	463b      	mov	r3, r7
 8003e62:	461f      	mov	r7, r3
 8003e64:	6820      	ldr	r0, [r4, #0]
 8003e66:	463a      	mov	r2, r7
 8003e68:	4641      	mov	r1, r8
 8003e6a:	f7ff fa9b 	bl	80033a4 <memmove>
 8003e6e:	68a3      	ldr	r3, [r4, #8]
 8003e70:	1b9b      	subs	r3, r3, r6
 8003e72:	60a3      	str	r3, [r4, #8]
 8003e74:	6823      	ldr	r3, [r4, #0]
 8003e76:	443b      	add	r3, r7
 8003e78:	6023      	str	r3, [r4, #0]
 8003e7a:	2000      	movs	r0, #0
 8003e7c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003e80:	4650      	mov	r0, sl
 8003e82:	f7ff faed 	bl	8003460 <_realloc_r>
 8003e86:	4606      	mov	r6, r0
 8003e88:	2800      	cmp	r0, #0
 8003e8a:	d1e1      	bne.n	8003e50 <__ssputs_r+0x64>
 8003e8c:	6921      	ldr	r1, [r4, #16]
 8003e8e:	4650      	mov	r0, sl
 8003e90:	f7fe fafa 	bl	8002488 <_free_r>
 8003e94:	230c      	movs	r3, #12
 8003e96:	f8ca 3000 	str.w	r3, [sl]
 8003e9a:	89a3      	ldrh	r3, [r4, #12]
 8003e9c:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8003ea0:	81a3      	strh	r3, [r4, #12]
 8003ea2:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8003ea6:	e7e9      	b.n	8003e7c <__ssputs_r+0x90>
 8003ea8:	463e      	mov	r6, r7
 8003eaa:	e7db      	b.n	8003e64 <__ssputs_r+0x78>

08003eac <_svfiprintf_r>:
 8003eac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003eb0:	4698      	mov	r8, r3
 8003eb2:	898b      	ldrh	r3, [r1, #12]
 8003eb4:	061b      	lsls	r3, r3, #24
 8003eb6:	b09d      	sub	sp, #116	@ 0x74
 8003eb8:	4607      	mov	r7, r0
 8003eba:	460d      	mov	r5, r1
 8003ebc:	4614      	mov	r4, r2
 8003ebe:	d510      	bpl.n	8003ee2 <_svfiprintf_r+0x36>
 8003ec0:	690b      	ldr	r3, [r1, #16]
 8003ec2:	b973      	cbnz	r3, 8003ee2 <_svfiprintf_r+0x36>
 8003ec4:	2140      	movs	r1, #64	@ 0x40
 8003ec6:	f7fe fb53 	bl	8002570 <_malloc_r>
 8003eca:	6028      	str	r0, [r5, #0]
 8003ecc:	6128      	str	r0, [r5, #16]
 8003ece:	b930      	cbnz	r0, 8003ede <_svfiprintf_r+0x32>
 8003ed0:	230c      	movs	r3, #12
 8003ed2:	603b      	str	r3, [r7, #0]
 8003ed4:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8003ed8:	b01d      	add	sp, #116	@ 0x74
 8003eda:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003ede:	2340      	movs	r3, #64	@ 0x40
 8003ee0:	616b      	str	r3, [r5, #20]
 8003ee2:	2300      	movs	r3, #0
 8003ee4:	9309      	str	r3, [sp, #36]	@ 0x24
 8003ee6:	2320      	movs	r3, #32
 8003ee8:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8003eec:	f8cd 800c 	str.w	r8, [sp, #12]
 8003ef0:	2330      	movs	r3, #48	@ 0x30
 8003ef2:	f8df 819c 	ldr.w	r8, [pc, #412]	@ 8004090 <_svfiprintf_r+0x1e4>
 8003ef6:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8003efa:	f04f 0901 	mov.w	r9, #1
 8003efe:	4623      	mov	r3, r4
 8003f00:	469a      	mov	sl, r3
 8003f02:	f813 2b01 	ldrb.w	r2, [r3], #1
 8003f06:	b10a      	cbz	r2, 8003f0c <_svfiprintf_r+0x60>
 8003f08:	2a25      	cmp	r2, #37	@ 0x25
 8003f0a:	d1f9      	bne.n	8003f00 <_svfiprintf_r+0x54>
 8003f0c:	ebba 0b04 	subs.w	fp, sl, r4
 8003f10:	d00b      	beq.n	8003f2a <_svfiprintf_r+0x7e>
 8003f12:	465b      	mov	r3, fp
 8003f14:	4622      	mov	r2, r4
 8003f16:	4629      	mov	r1, r5
 8003f18:	4638      	mov	r0, r7
 8003f1a:	f7ff ff67 	bl	8003dec <__ssputs_r>
 8003f1e:	3001      	adds	r0, #1
 8003f20:	f000 80a7 	beq.w	8004072 <_svfiprintf_r+0x1c6>
 8003f24:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8003f26:	445a      	add	r2, fp
 8003f28:	9209      	str	r2, [sp, #36]	@ 0x24
 8003f2a:	f89a 3000 	ldrb.w	r3, [sl]
 8003f2e:	2b00      	cmp	r3, #0
 8003f30:	f000 809f 	beq.w	8004072 <_svfiprintf_r+0x1c6>
 8003f34:	2300      	movs	r3, #0
 8003f36:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 8003f3a:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8003f3e:	f10a 0a01 	add.w	sl, sl, #1
 8003f42:	9304      	str	r3, [sp, #16]
 8003f44:	9307      	str	r3, [sp, #28]
 8003f46:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8003f4a:	931a      	str	r3, [sp, #104]	@ 0x68
 8003f4c:	4654      	mov	r4, sl
 8003f4e:	2205      	movs	r2, #5
 8003f50:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003f54:	484e      	ldr	r0, [pc, #312]	@ (8004090 <_svfiprintf_r+0x1e4>)
 8003f56:	f7fc f923 	bl	80001a0 <memchr>
 8003f5a:	9a04      	ldr	r2, [sp, #16]
 8003f5c:	b9d8      	cbnz	r0, 8003f96 <_svfiprintf_r+0xea>
 8003f5e:	06d0      	lsls	r0, r2, #27
 8003f60:	bf44      	itt	mi
 8003f62:	2320      	movmi	r3, #32
 8003f64:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8003f68:	0711      	lsls	r1, r2, #28
 8003f6a:	bf44      	itt	mi
 8003f6c:	232b      	movmi	r3, #43	@ 0x2b
 8003f6e:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8003f72:	f89a 3000 	ldrb.w	r3, [sl]
 8003f76:	2b2a      	cmp	r3, #42	@ 0x2a
 8003f78:	d015      	beq.n	8003fa6 <_svfiprintf_r+0xfa>
 8003f7a:	9a07      	ldr	r2, [sp, #28]
 8003f7c:	4654      	mov	r4, sl
 8003f7e:	2000      	movs	r0, #0
 8003f80:	f04f 0c0a 	mov.w	ip, #10
 8003f84:	4621      	mov	r1, r4
 8003f86:	f811 3b01 	ldrb.w	r3, [r1], #1
 8003f8a:	3b30      	subs	r3, #48	@ 0x30
 8003f8c:	2b09      	cmp	r3, #9
 8003f8e:	d94b      	bls.n	8004028 <_svfiprintf_r+0x17c>
 8003f90:	b1b0      	cbz	r0, 8003fc0 <_svfiprintf_r+0x114>
 8003f92:	9207      	str	r2, [sp, #28]
 8003f94:	e014      	b.n	8003fc0 <_svfiprintf_r+0x114>
 8003f96:	eba0 0308 	sub.w	r3, r0, r8
 8003f9a:	fa09 f303 	lsl.w	r3, r9, r3
 8003f9e:	4313      	orrs	r3, r2
 8003fa0:	9304      	str	r3, [sp, #16]
 8003fa2:	46a2      	mov	sl, r4
 8003fa4:	e7d2      	b.n	8003f4c <_svfiprintf_r+0xa0>
 8003fa6:	9b03      	ldr	r3, [sp, #12]
 8003fa8:	1d19      	adds	r1, r3, #4
 8003faa:	681b      	ldr	r3, [r3, #0]
 8003fac:	9103      	str	r1, [sp, #12]
 8003fae:	2b00      	cmp	r3, #0
 8003fb0:	bfbb      	ittet	lt
 8003fb2:	425b      	neglt	r3, r3
 8003fb4:	f042 0202 	orrlt.w	r2, r2, #2
 8003fb8:	9307      	strge	r3, [sp, #28]
 8003fba:	9307      	strlt	r3, [sp, #28]
 8003fbc:	bfb8      	it	lt
 8003fbe:	9204      	strlt	r2, [sp, #16]
 8003fc0:	7823      	ldrb	r3, [r4, #0]
 8003fc2:	2b2e      	cmp	r3, #46	@ 0x2e
 8003fc4:	d10a      	bne.n	8003fdc <_svfiprintf_r+0x130>
 8003fc6:	7863      	ldrb	r3, [r4, #1]
 8003fc8:	2b2a      	cmp	r3, #42	@ 0x2a
 8003fca:	d132      	bne.n	8004032 <_svfiprintf_r+0x186>
 8003fcc:	9b03      	ldr	r3, [sp, #12]
 8003fce:	1d1a      	adds	r2, r3, #4
 8003fd0:	681b      	ldr	r3, [r3, #0]
 8003fd2:	9203      	str	r2, [sp, #12]
 8003fd4:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8003fd8:	3402      	adds	r4, #2
 8003fda:	9305      	str	r3, [sp, #20]
 8003fdc:	f8df a0c0 	ldr.w	sl, [pc, #192]	@ 80040a0 <_svfiprintf_r+0x1f4>
 8003fe0:	7821      	ldrb	r1, [r4, #0]
 8003fe2:	2203      	movs	r2, #3
 8003fe4:	4650      	mov	r0, sl
 8003fe6:	f7fc f8db 	bl	80001a0 <memchr>
 8003fea:	b138      	cbz	r0, 8003ffc <_svfiprintf_r+0x150>
 8003fec:	9b04      	ldr	r3, [sp, #16]
 8003fee:	eba0 000a 	sub.w	r0, r0, sl
 8003ff2:	2240      	movs	r2, #64	@ 0x40
 8003ff4:	4082      	lsls	r2, r0
 8003ff6:	4313      	orrs	r3, r2
 8003ff8:	3401      	adds	r4, #1
 8003ffa:	9304      	str	r3, [sp, #16]
 8003ffc:	f814 1b01 	ldrb.w	r1, [r4], #1
 8004000:	4824      	ldr	r0, [pc, #144]	@ (8004094 <_svfiprintf_r+0x1e8>)
 8004002:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8004006:	2206      	movs	r2, #6
 8004008:	f7fc f8ca 	bl	80001a0 <memchr>
 800400c:	2800      	cmp	r0, #0
 800400e:	d036      	beq.n	800407e <_svfiprintf_r+0x1d2>
 8004010:	4b21      	ldr	r3, [pc, #132]	@ (8004098 <_svfiprintf_r+0x1ec>)
 8004012:	bb1b      	cbnz	r3, 800405c <_svfiprintf_r+0x1b0>
 8004014:	9b03      	ldr	r3, [sp, #12]
 8004016:	3307      	adds	r3, #7
 8004018:	f023 0307 	bic.w	r3, r3, #7
 800401c:	3308      	adds	r3, #8
 800401e:	9303      	str	r3, [sp, #12]
 8004020:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8004022:	4433      	add	r3, r6
 8004024:	9309      	str	r3, [sp, #36]	@ 0x24
 8004026:	e76a      	b.n	8003efe <_svfiprintf_r+0x52>
 8004028:	fb0c 3202 	mla	r2, ip, r2, r3
 800402c:	460c      	mov	r4, r1
 800402e:	2001      	movs	r0, #1
 8004030:	e7a8      	b.n	8003f84 <_svfiprintf_r+0xd8>
 8004032:	2300      	movs	r3, #0
 8004034:	3401      	adds	r4, #1
 8004036:	9305      	str	r3, [sp, #20]
 8004038:	4619      	mov	r1, r3
 800403a:	f04f 0c0a 	mov.w	ip, #10
 800403e:	4620      	mov	r0, r4
 8004040:	f810 2b01 	ldrb.w	r2, [r0], #1
 8004044:	3a30      	subs	r2, #48	@ 0x30
 8004046:	2a09      	cmp	r2, #9
 8004048:	d903      	bls.n	8004052 <_svfiprintf_r+0x1a6>
 800404a:	2b00      	cmp	r3, #0
 800404c:	d0c6      	beq.n	8003fdc <_svfiprintf_r+0x130>
 800404e:	9105      	str	r1, [sp, #20]
 8004050:	e7c4      	b.n	8003fdc <_svfiprintf_r+0x130>
 8004052:	fb0c 2101 	mla	r1, ip, r1, r2
 8004056:	4604      	mov	r4, r0
 8004058:	2301      	movs	r3, #1
 800405a:	e7f0      	b.n	800403e <_svfiprintf_r+0x192>
 800405c:	ab03      	add	r3, sp, #12
 800405e:	9300      	str	r3, [sp, #0]
 8004060:	462a      	mov	r2, r5
 8004062:	4b0e      	ldr	r3, [pc, #56]	@ (800409c <_svfiprintf_r+0x1f0>)
 8004064:	a904      	add	r1, sp, #16
 8004066:	4638      	mov	r0, r7
 8004068:	f7fc fe6c 	bl	8000d44 <_printf_float>
 800406c:	1c42      	adds	r2, r0, #1
 800406e:	4606      	mov	r6, r0
 8004070:	d1d6      	bne.n	8004020 <_svfiprintf_r+0x174>
 8004072:	89ab      	ldrh	r3, [r5, #12]
 8004074:	065b      	lsls	r3, r3, #25
 8004076:	f53f af2d 	bmi.w	8003ed4 <_svfiprintf_r+0x28>
 800407a:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800407c:	e72c      	b.n	8003ed8 <_svfiprintf_r+0x2c>
 800407e:	ab03      	add	r3, sp, #12
 8004080:	9300      	str	r3, [sp, #0]
 8004082:	462a      	mov	r2, r5
 8004084:	4b05      	ldr	r3, [pc, #20]	@ (800409c <_svfiprintf_r+0x1f0>)
 8004086:	a904      	add	r1, sp, #16
 8004088:	4638      	mov	r0, r7
 800408a:	f7fd f8f1 	bl	8001270 <_printf_i>
 800408e:	e7ed      	b.n	800406c <_svfiprintf_r+0x1c0>
 8004090:	0800424e 	.word	0x0800424e
 8004094:	08004258 	.word	0x08004258
 8004098:	08000d45 	.word	0x08000d45
 800409c:	08003ded 	.word	0x08003ded
 80040a0:	08004254 	.word	0x08004254

080040a4 <_init>:
 80040a4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80040a6:	bf00      	nop
 80040a8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80040aa:	bc08      	pop	{r3}
 80040ac:	469e      	mov	lr, r3
 80040ae:	4770      	bx	lr

080040b0 <_fini>:
 80040b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80040b2:	bf00      	nop
 80040b4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80040b6:	bc08      	pop	{r3}
 80040b8:	469e      	mov	lr, r3
 80040ba:	4770      	bx	lr
